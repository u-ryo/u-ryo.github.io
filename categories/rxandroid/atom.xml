<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/rxandroid/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2017-08-22T10:04:50+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Rx as Stream API]]></title><link href="http://u-ryo.github.io//blog/2017/12/01/rx-as-stream-api/"/><updated>2017-12-01T17:41:42+09:00</updated><id>/blog/2017/12/01/rx-as-stream-api/</id><content type="html"><![CDATA[<p>周知のように、Androidではlambdaは書けるようになりましたが
Stream APIのようにCollectionsを扱えません。
折角Java8で覚えたのに。
ですが、RxJavaを使うとほぼStream APIのように書けるんですねーへーーー。
<a href="https://qiita.com/disc99/items/1b2e44a1105008ec3ac9">非同期や並列処理にも役立つRxJavaの使い方</a>
おかげでloopを回さず一文になったので、
ifの条件節に直接書けるようになりました。
<code>Optional</code>も出来るんですね。
書いてありますが、キモは<code>toBlocking().single()</code>でしょうか。</p>
]]></content></entry></feed>