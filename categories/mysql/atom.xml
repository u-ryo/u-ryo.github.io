<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/mysql/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-07-18T07:36:11+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Using where and join in mysqldump]]></title><link href="http://u-ryo.github.io//blog/2018/11/28/using-where-and-join-in-mysqldump/"/><updated>2018-11-28T00:37:50+09:00</updated><id>/blog/2018/11/28/using-where-and-join-in-mysqldump/</id><content type="html"><![CDATA[<p>基本的には<a href="https://qiita.com/asigochan/items/fec45efff78045b33b90">mysqldumpでwhereにjoinを使う</a>にある通り、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>mysqldump -uusername -p DatabaseName tableA --single-transaction --were &#39;id IN (SELECT a.id FROM tableA a JOIN tableB b ON a.b_id=b.id WHERE b.name LIKE &quot;%someone%&quot;)&#39;
</span></code></pre></td></tr></table></div></figure>
<p>というわけですが、肝は、</p>
<ul>
<li><code>--where</code>中で<code>JOIN</code>を使うためにsubqueryにする</li>
<li><code>--single-transaction</code>を付けることで<code>mysqldump: Couldn't execute 'SELECT... Table 'a' was not locked with LOCK TABLES (1100)</code>と言われるのを防ぐ</li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[MySQL on JHipster]]></title><link href="http://u-ryo.github.io//blog/2018/09/02/mysql-on-jhipster/"/><updated>2018-09-03T02:48:45+09:00</updated><id>/blog/2018/09/02/mysql-on-jhipster/</id><content type="html"><![CDATA[<p>これはもう<a href="https://www.jhipster.tech/development/#using-mysql-mariadb-or-postgresql-in-development">書いてあります</a>けど、
実際、これまでdevだったのをprod環境にして、
Timastampを含むTableのあるMySQLをbackendに据えてみると、
<code>-Pdev</code>環境ではうまく立ち上がっていたのに、
<code>-Pprod</code>だと<code>ERROR 1067 (42000): Invalid default value for 'create_date'</code>
とかって言われて立ち上がりません。
エラーに直面すると、前書いてあったことなんて忘れてて、
改めて探し回っちゃいました。
結局、ですね、ubuntuの場合は、
<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>の<code>[mysqld]</code>のところに
以下を加えてrestartすれば済みます。特に2行目ですね。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>character-set-server=utf8
</span><span class='line'>explicit_defaults_for_timestamp=on
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[GroovyFX]]></title><link href="http://u-ryo.github.io//blog/2018/08/23/groovyfx/"/><updated>2018-08-25T20:12:12+09:00</updated><id>/blog/2018/08/23/groovyfx/</id><content type="html"><![CDATA[<p>SwingからJavaのGUIの座を引き継いだとはいえ、
<a href="http://jdk.java.net/11/">Java11</a>ではJava本体から削除され、
<a href="http://jdk.java.net/openjfx/">OpenJFX</a>となるJavaFX、
でもGUI作るならJavaFXだろうなぁ、
簡単に描けるようにGroovyでないかなー、
と思ったら、ありました<a href="http://groovyfx.org/">GroovyFX</a>。
早速試してみると、
本家に書いてある「Hello, World」すら以下のように失敗しました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Caught: java.lang.ExceptionInInitializerError
</span><span class='line'>java.lang.ExceptionInInitializerError
</span><span class='line'>        at java_lang_Class$isAssignableFrom$1.call(Unknown Source)
</span><span class='line'>        at com.sun.proxy.$Proxy8.onClassInfo(Unknown Source)
</span><span class='line'>Caused by: java.lang.IllegalStateException: Toolkit not initialized
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.runLater(PlatformImpl.java:273)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.runLater(PlatformImpl.java:268)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.setPlatformUserAgentStylesheet(PlatformImpl.java:550)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.setDefaultPlatformUserAgentStylesheet(PlatformImpl.java:512)
</span><span class='line'>        at javafx.scene.control.Control.<span class="nt">&lt;clinit&gt;</span>(Control.java:87)
</span><span class='line'>        ... 2 more
</span></code></pre></td></tr></table></div></figure>
<p>色々試すと、以下のような最低限のscriptでもaaaを出力もせず
全く同じerror messageを出すので、
もうGrapeでgroovyfxを読み込んでいる時点でダメなんでしょう。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@Grab(&#39;org.groovyfx:groovyfx:8.0.0&#39;)
</span><span class='line'>import java.lang.*
</span><span class='line'>println(&#39;aaa&#39;)
</span></code></pre></td></tr></table></div></figure>
<p>scriptに何を書いても無視される(そこまで到達しない)わけなので、
事前に<code>new javafx.embed.swing.JFXPanel()</code>して
JavaFX environmentを初期化する、ということも当然効きません。
Grapeに拘っていたので、
古いversion(<code>@Grab('org.codehaus.groovyfx:groovyfx:0.4.0')</code>)に
して<code>new javafx.embed.swing.JFXPanel()</code>しておけば、
<code>start{...}</code>が動くことがわかりversion落としてやってましたが、
今改めて試してみると、
Grapeじゃなくて<code>groovy -cp groovyfx-8.0.0.jar test.groovy</code>と
Class Pathを指定すれば、
<code>new javafx.embed.swing.JFXPanel()</code>もなしに
「Hello World」もその通り動くことが確認できました。
そっかー、Grape諦めればよかったのかー。
<code>-cp</code>を指定しても足りないところはGrapeも効くので、
そぃでよかったでもんそ。</p>
<p>あと、MySQLからdata読む必要があったので、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@GrabConfig(systemClassLoader=true)
</span><span class='line'>@Grab(&#39;mysql:mysql-connector-java&#39;)
</span><span class='line'>import groovy.sql.*
</span><span class='line'>
</span><span class='line'>def sql = Sql.newInstance(&#39;jdbc:mysql://localhost:3306/database?useSSL=false&#39;, &#39;user&#39;, &#39;password&#39;, &#39;com.mysql.cj.jdbc.Driver&#39;)
</span><span class='line'>sql.eachRow(&#39;SELECT * FROM table WHERE filename LIKE ?&#39;, [&#39;%&#39; + filename]) { r -&gt;
</span><span class='line'>  ...
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>とすればよいと。</p>
<p>今回の目的は、画像を読み込んで、それにDBから読み込んだ値で四角形を描き、
そぃを画像fileとして出力する、ちゅうもんじゃった。
<code>scene.snapshot()</code>してから<code>SwingFXUtils.fromFXImage(scene, null)</code>で
描画画像をbitmap化出来ます。
それを<code>ImageIO.write()</code>で一発でfileに書けるがじゃっどん、
そぃだと何か出来た画像が赤みがかっちゃっちょるんですよね。
どげんしたもんか、試行錯誤の挙句、ImageMagickのfrontend、
<a href="http://im4java.sourceforge.net/">im4java</a>を通すとうまく行きました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import org.im4java.core.*
</span><span class='line'>
</span><span class='line'>color = new Color(0.753, 0.302, 0.314, 0.4)
</span><span class='line'>op = new IMOperation().addImage().quality(100.0).strip().addImage()
</span><span class='line'>convert = new ConvertCmd()
</span><span class='line'>
</span><span class='line'>start {
</span><span class='line'>  st = stage(title: &#39;any words OK&#39;, visible: true) {
</span><span class='line'>    s = scene(fill: BLACK, width: w, height: h) {
</span><span class='line'>      imageView(new Image(Paths.get(imageFileName).toUri().toString()))
</span><span class='line'>      rectangles.values().forEach { v -&gt;
</span><span class='line'>        rectangle(x:v[0], y:v[1], width:v[2], height:v[3], fill:color)
</span><span class='line'>      }
</span><span class='line'>    }.snapshot(new WritableImage(w, h))
</span><span class='line'>    convert.run(op, SwingFXUtils.fromFXImage(s, null), imageFileName.replace(&#39;.jpg&#39;, &#39;_.jpg&#39;))
</span><span class='line'>    // ImageIO.write(SwingFXUtils.fromFXImage(s, null), &#39;jpg&#39;, new File(imageFileName.replace(&#39;.jpg&#39;, &#39;_.jpg&#39;)))
</span><span class='line'>  }
</span><span class='line'>  st.close()
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>最後、<code>stage.close()</code>すればwindowは開かずに済みます。</p>
]]></content></entry></feed>