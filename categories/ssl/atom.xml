<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/ssl/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2016-03-16T10:13:51+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Let's Encrypt]]></title><link href="http://u-ryo.github.io//blog/2016/08/02/let-s-encrypt/"/><updated>2016-08-02T16:36:11+09:00</updated><id>/blog/2016/08/02/let-s-encrypt/</id><content type="html"><![CDATA[<p><a href="https://letsencrypt.org/">Let's Encrypt</a>、
漸く使えるようになりました。
具体的にどうやって使ったらいいんだろう、
と思ってたんですが、結構簡単に使えますねこれ。
素晴らしい、です。
おかげでbotnetのC&amp;C server等でも広く使われるようになったとかってことですが。</p>
<p>ともあれ、
日本語の要諦サイト<a href="https://letsencrypt.jp/">Let's Encrypt 総合ポータル</a>もあり、
だいぶわかりやすくなってます。</p>
<p>基本的には、</p>
<ol>
<li><code>certbot-auto</code>を<code>git</code>又は<code>wget https://dl.eff.org/certbot-auto</code>で取得</li>
<li>認証原理は、<ol>
<li><code>certbot-auto</code>がLet's Encrypt側から指定された<code>http://.../.well-known/XXXXXX</code>にfileを作る</li>
<li>Let's Encrypt側がそのfileを<code>GET</code>、認証</li>
</ol>
</li>
<li>なので<code>standalone</code>(<code>certbot-auto</code>が臨時のhttp serverを建て、Let's Encryptからのrequestを受ける)が基本</li>
<li>その間本来のWWW serverを止めねばならないが、止めたくない時は「<code>--webroot</code>」で<code>DocumentRoot</code>を指定し、<code>certbot-auto</code>にfileを作らせる</li>
<li>初回の(というか最後に成功した)command optionsを<code>/etc/letsencrypt/</code>以下に保存しておき、次回以降「<code>renew</code>」commandでは省略可</li>
<li><code>renew</code>を付けて走らせても、証明書期限が30日を切っていないと発動しない(無理やり更新するには<code>--force-renew</code> optionが必要)</li>
<li><code>--post-hook</code>も指定して、apacheのreloadを自動化(これは<code>renew</code>が走らないと発動しない。単純に<code>renew</code>の終了status codeだと0になるので「&amp;&amp;」で繋ぐだけでは判別不能だった)</li>
<li>証明書取得がうまく行くと、<code>/etc/letsencrypt/live/someserver.co.jp/</code>以下に各種cert filesのsymbolic linkが作成されるので、<code>/etc/apache2/site-enabled/default-ssl</code>中で<code>SSLCertificateFile</code>等の示す先をここの<code>cert.pem</code>等にする(Apache2.4以上やnginxなら証明書＋中間CA証明書に<code>fullchain.pem</code>が使える)</li>
</ol>
<p>こちとら、apache2 serverを止めたくない状況だったので、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ sudo cerbot-auto certonly --webroot /var/www/ -m support@company.co.jp -d someserver.co.jp --agree-tos
</span></code></pre></td></tr></table></div></figure>
<p>(<code>-d</code>: domain, <code>-m</code>: mail address)</p>
<p>更新は、<code>cron.daily</code>に、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>#!/bin/sh
</span><span class='line'>cerbot-auto renew -q --post-hook &#39;service apache2 reload&#39;
</span></code></pre></td></tr></table></div></figure>
<p>で良さそうです。</p>
]]></content></entry></feed>