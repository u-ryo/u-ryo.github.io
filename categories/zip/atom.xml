<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/zip/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-07-18T07:36:11+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[ZipOutputStream in Java]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/zipoutputstream-in-java/"/><updated>2018-08-21T23:46:50+09:00</updated><id>/blog/2018/08/21/zipoutputstream-in-java/</id><content type="html"><![CDATA[<p>Javaで複数filesをまとめてzipにして出力する(=downloadさせる)必要があり、
何かlibraryないかなーと探したところ、あまりなくて。
ということは、標準的な手法でもさほど手間はかからないということですね。
確かに、<code>new ZipOutputStream(response.getOutputStream())</code>してから
<code>new ZipEntry("file/name")</code>して<code>zos.putNextEntry(entry)</code>して
<code>zos.write(...)</code>していけばいいだけですもんね。
<a href="http://www.ne.jp/asahi/hishidama/home/tech/java/zip.html">Zipファイル</a>によりますと、
<code>new ZipOutputStream(new BufferedOutputStream(...))</code>というように
<code>new BufferedOutputStream()</code>でくくった方が3.6倍速い(110ms→30ms)とのこと。
ホント?!</p>
]]></content></entry></feed>