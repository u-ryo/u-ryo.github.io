<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/groovy/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-07-18T07:36:11+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[grape on groovysh]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/grape-on-groovysh/"/><updated>2018-11-13T12:35:59+09:00</updated><id>/blog/2018/11/13/grape-on-groovysh/</id><content type="html"><![CDATA[<p>groovyshでgrapeを使ってlibraryを使いたい時がありました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>groovy:000&gt; :i groovy.grape.*
</span><span class='line'>===&gt; groovy.grape.*
</span><span class='line'>groovy:000&gt; Grape.grab(group:&#39;mysql&#39;,module:&#39;mysql-connector-java&#39;,version:&#39;8.0.11&#39;)
</span><span class='line'>===&gt; null
</span><span class='line'>groovy:000&gt; Grape.grab(&#39;mysql:mysql-connector-java:8.0.11&#39;)
</span><span class='line'>ERROR java.lang.RuntimeException:
</span><span class='line'>Error grabbing Grapes -- [unresolved dependency: groovy.endorsed#mysql:mysql-connector-java:8.0.11;2.5.0: not found]
</span></code></pre></td></tr></table></div></figure>
<p>versionも文字列でないとならないのに気を付けます。
いつもの<code>'mysql:mysql-connector-java:8.0.11'</code>の形式はダメでした。</p>
<p><code>@GrabConfig(systemClassLoader=true)</code>はどうやってもダメっぽいので、
結局groovyshからのMySQL accessは諦めましたが。</p>
<p>参考: <a href="https://qiita.com/yukung/items/6e1f62e7c2d0aae95bee">groovysh で Maven リポジトリにあるライブラリを使う</a></p>
]]></content></entry><entry><title type="html"><![CDATA[drawing rectangles on an image for groovy]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/drawing-rectangles-on-an-image-for-groovy/"/><updated>2018-11-13T12:27:15+09:00</updated><id>/blog/2018/11/13/drawing-rectangles-on-an-image-for-groovy/</id><content type="html"><![CDATA[<p>今まで、「画像を読み込んで線や図形を描く」というのはGroovyFXでやってたんですが、
JavaFXってheadlessで出来ないんですね!?
びっくりポンです。
<code>java.awt.headless=true</code>もそういやAWTなんですね。
うーむ、流石は廃止されるJavaFX、と思ったんですが、
どうせ<code>im4java</code>使ってるなら、なんだImageMagickだけで出来るじゃーん、
ということに遅ればせながら気付きました。
ImageMagickってdrawも出来るんですね。</p>
<p>大体、以下の要領です。</p>
<ol>
<li><code>import org.im4java.core.*</code></li>
<li><code>op = new IMOperation()</code></li>
<li><code>op.addImage(...)</code>で画像fileを読み込む</li>
<li><code>op.fill('rgba(255,100,0,0.5)')</code>等と塗り潰す色を指定</li>
<li><code>op.stroke('white')</code>等と線の色を指定</li>
<li><code>op.draw('rectangle 0,10,30,30')</code>で長方形を描画</li>
<li><code>op.draw('text 0,10 ABCD')</code>で文字を描画</li>
<li><code>op.quality(80)</code>で圧縮率(品質)指定</li>
<li>もう一度<code>op.addImage(...)</code>で出力画像の名前と形式を指定</li>
<li><code>new ConvertCmd().run(op)</code>で実行</li>
</ol>
<p><a href="http://im4java.sourceforge.net/docs/dev-guide.html">公式page</a>にありますけどね。</p>
]]></content></entry><entry><title type="html"><![CDATA[chomp for groovy]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/chomp-for-groovy/"/><updated>2018-11-13T12:27:08+09:00</updated><id>/blog/2018/11/13/chomp-for-groovy/</id><content type="html"><![CDATA[<p>groovyでcommand executionの結果を拾った(<code>'command args'.execute().text</code>)ところ改行がついてたので、除去しようと<code>.replace('\n', '')</code>としてたんですが、そっか、<code>.trim()</code>でいいんですね。勿論目的にもよりますが。</p>
<p>cf. <a href="http://orangeclover.hatenablog.com/entry/20110524/1306164109">Groovyで文字列の先頭・末尾から空白を取り除く</a></p>
]]></content></entry><entry><title type="html"><![CDATA[Groovy Grape fails]]></title><link href="http://u-ryo.github.io//blog/2018/08/27/groovy-grape-fails/"/><updated>2018-08-27T21:04:34+09:00</updated><id>/blog/2018/08/27/groovy-grape-fails/</id><content type="html"><![CDATA[<p>時々、「全く同じgroovy scriptなのにあるマシンでだけ
起動に失敗する」ことがあります。
error messageはcaseによりますが、例えば直近では以下のようなものでした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ groovy webpush.groovy
</span><span class='line'>org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
</span><span class='line'>General error during conversion: Error grabbing Grapes -- [download failed: com.google.guava#guava;19.0!guava.jar(bundle)]
</span><span class='line'>
</span><span class='line'>java.lang.RuntimeException: Error grabbing Grapes -- [download failed: com.google.guava#guava;19.0!guava.jar(bundle)]
</span><span class='line'>        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
</span><span class='line'>        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
</span><span class='line'>        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
</span><span class='line'>        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
</span><span class='line'>        at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
</span><span class='line'>        at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
</span><span class='line'>        at groovy.grape.GrapeIvy.getDependencies(GrapeIvy.groovy:464)
</span><span class='line'>   :
</span><span class='line'>   :
</span></code></pre></td></tr></table></div></figure>
<p>要するに「guava-19.0.jarのdownloadに失敗した」と。
<code>~/.groovy/grapes/com.google.guava/guava/</code>を見ると、
確かに他のlibrariesのように<code>jars</code> directoryがありませんし、
当然jar fileもありません。
じゃぁっていうんで、自分で<code>guava-19.0.jar</code>を落としてきて、
<code>jars/</code>作ってその下に置いても、同じ結果です。
Groovyが悪いのかJavaが悪いのかGrapeが悪いのか設定が悪いのか
versionが悪いのか、何なのか全然分かりません。
普通に動くマシンでのJava/Groovyとversionを合わせてもダメ、
Grapeする各libraryのversionを上げてもダメ、
Guava 19.0を明示的に<code>@Grab</code>に入れてもダメ、
<a href="https://stackoverflow.com/questions/16871792/groovy-grab-download-failed">Groovy - Grab - download failed</a>を見て<code>~/.groovy</code>以下や<code>~/.groovy/grapes</code>を削除してもダメ、
と途方に暮れました。
いつもは面倒なので諦めて、
その動くマシンでやっていつのですけれども、
今回は粘って原因究明してみました。</p>
<p>結局、以下のどちらかの方法で立ち上がるようになりました。</p>
<ol>
<li><code>~/.groovy/grapes/com.google.guava/guava/jars</code>ではなく<code>~/.groovy/grapes/com.google.guava/guava/bundles</code>にして、その下に落としてきた<code>guava-19.0.jar</code>を置く</li>
<li>他の多くのlibrariesと同様に<code>~/.groovy/grapes/com.google.guava/guava/jars</code>に落としてきた<code>guava-19.0.jar</code>を置き、<code>~/.groovy/grapes/com.google.guava/guava/ivy-19.0.xml</code>の<code>&lt;publications&gt;</code>下の<code>&lt;artifact name="guava" type="bundle" ext="jar" conf="master"/&gt;</code>の<code>type</code> attributeを<code>bundle</code>から<code>jar</code>にする</li>
</ol>
<p>上手く行っていたマシンでは、
<code>~/.groovy/grapes/com.google.guava/guava/bundles</code>が出来ており、
その下に<code>guava-19.0.jar</code>もフツーにありました。
上手く行かないマシンではなぜ<code>bundles</code>が出来ないのか、は未だ不明ですが、
取り敢えず前に進める方法がわかったので記しています。</p>
<p>あぁ、あと、このようにGrapeに失敗すると、
<code>~/.groovy/grapes/</code>以下に<code>resolved-caller-all-caller-working73.properties</code>と<code>resolved-caller-all-caller-working73.xml</code>といったfilesが澱のように溜まっていくので、都度削除した方がいいです。</p>
]]></content></entry><entry><title type="html"><![CDATA[GroovyFX]]></title><link href="http://u-ryo.github.io//blog/2018/08/23/groovyfx/"/><updated>2018-08-25T20:12:12+09:00</updated><id>/blog/2018/08/23/groovyfx/</id><content type="html"><![CDATA[<p>SwingからJavaのGUIの座を引き継いだとはいえ、
<a href="http://jdk.java.net/11/">Java11</a>ではJava本体から削除され、
<a href="http://jdk.java.net/openjfx/">OpenJFX</a>となるJavaFX、
でもGUI作るならJavaFXだろうなぁ、
簡単に描けるようにGroovyでないかなー、
と思ったら、ありました<a href="http://groovyfx.org/">GroovyFX</a>。
早速試してみると、
本家に書いてある「Hello, World」すら以下のように失敗しました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Caught: java.lang.ExceptionInInitializerError
</span><span class='line'>java.lang.ExceptionInInitializerError
</span><span class='line'>        at java_lang_Class$isAssignableFrom$1.call(Unknown Source)
</span><span class='line'>        at com.sun.proxy.$Proxy8.onClassInfo(Unknown Source)
</span><span class='line'>Caused by: java.lang.IllegalStateException: Toolkit not initialized
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.runLater(PlatformImpl.java:273)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.runLater(PlatformImpl.java:268)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.setPlatformUserAgentStylesheet(PlatformImpl.java:550)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.setDefaultPlatformUserAgentStylesheet(PlatformImpl.java:512)
</span><span class='line'>        at javafx.scene.control.Control.<span class="nt">&lt;clinit&gt;</span>(Control.java:87)
</span><span class='line'>        ... 2 more
</span></code></pre></td></tr></table></div></figure>
<p>色々試すと、以下のような最低限のscriptでもaaaを出力もせず
全く同じerror messageを出すので、
もうGrapeでgroovyfxを読み込んでいる時点でダメなんでしょう。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@Grab(&#39;org.groovyfx:groovyfx:8.0.0&#39;)
</span><span class='line'>import java.lang.*
</span><span class='line'>println(&#39;aaa&#39;)
</span></code></pre></td></tr></table></div></figure>
<p>scriptに何を書いても無視される(そこまで到達しない)わけなので、
事前に<code>new javafx.embed.swing.JFXPanel()</code>して
JavaFX environmentを初期化する、ということも当然効きません。
Grapeに拘っていたので、
古いversion(<code>@Grab('org.codehaus.groovyfx:groovyfx:0.4.0')</code>)に
して<code>new javafx.embed.swing.JFXPanel()</code>しておけば、
<code>start{...}</code>が動くことがわかりversion落としてやってましたが、
今改めて試してみると、
Grapeじゃなくて<code>groovy -cp groovyfx-8.0.0.jar test.groovy</code>と
Class Pathを指定すれば、
<code>new javafx.embed.swing.JFXPanel()</code>もなしに
「Hello World」もその通り動くことが確認できました。
そっかー、Grape諦めればよかったのかー。
<code>-cp</code>を指定しても足りないところはGrapeも効くので、
そぃでよかったでもんそ。</p>
<p>あと、MySQLからdata読む必要があったので、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@GrabConfig(systemClassLoader=true)
</span><span class='line'>@Grab(&#39;mysql:mysql-connector-java&#39;)
</span><span class='line'>import groovy.sql.*
</span><span class='line'>
</span><span class='line'>def sql = Sql.newInstance(&#39;jdbc:mysql://localhost:3306/database?useSSL=false&#39;, &#39;user&#39;, &#39;password&#39;, &#39;com.mysql.cj.jdbc.Driver&#39;)
</span><span class='line'>sql.eachRow(&#39;SELECT * FROM table WHERE filename LIKE ?&#39;, [&#39;%&#39; + filename]) { r -&gt;
</span><span class='line'>  ...
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>とすればよいと。</p>
<p>今回の目的は、画像を読み込んで、それにDBから読み込んだ値で四角形を描き、
そぃを画像fileとして出力する、ちゅうもんじゃった。
<code>scene.snapshot()</code>してから<code>SwingFXUtils.fromFXImage(scene, null)</code>で
描画画像をbitmap化出来ます。
それを<code>ImageIO.write()</code>で一発でfileに書けるがじゃっどん、
そぃだと何か出来た画像が赤みがかっちゃっちょるんですよね。
どげんしたもんか、試行錯誤の挙句、ImageMagickのfrontend、
<a href="http://im4java.sourceforge.net/">im4java</a>を通すとうまく行きました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import org.im4java.core.*
</span><span class='line'>
</span><span class='line'>color = new Color(0.753, 0.302, 0.314, 0.4)
</span><span class='line'>op = new IMOperation().addImage().quality(100.0).strip().addImage()
</span><span class='line'>convert = new ConvertCmd()
</span><span class='line'>
</span><span class='line'>start {
</span><span class='line'>  st = stage(title: &#39;any words OK&#39;, visible: true) {
</span><span class='line'>    s = scene(fill: BLACK, width: w, height: h) {
</span><span class='line'>      imageView(new Image(Paths.get(imageFileName).toUri().toString()))
</span><span class='line'>      rectangles.values().forEach { v -&gt;
</span><span class='line'>        rectangle(x:v[0], y:v[1], width:v[2], height:v[3], fill:color)
</span><span class='line'>      }
</span><span class='line'>    }.snapshot(new WritableImage(w, h))
</span><span class='line'>    convert.run(op, SwingFXUtils.fromFXImage(s, null), imageFileName.replace(&#39;.jpg&#39;, &#39;_.jpg&#39;))
</span><span class='line'>    // ImageIO.write(SwingFXUtils.fromFXImage(s, null), &#39;jpg&#39;, new File(imageFileName.replace(&#39;.jpg&#39;, &#39;_.jpg&#39;)))
</span><span class='line'>  }
</span><span class='line'>  st.close()
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>最後、<code>stage.close()</code>すればwindowは開かずに済みます。</p>
]]></content></entry><entry><title type="html"><![CDATA[Stubbing in Spock]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/stubbing-in-spock/"/><updated>2018-08-22T00:08:47+09:00</updated><id>/blog/2018/08/21/stubbing-in-spock/</id><content type="html"><![CDATA[<p><a href="http://spockframework.org/">Spock</a>でstubbingして
methodのcall回数をassertする必要がありまして。
<code>someClass = Spy(SomeClass)</code>でspyにすると、
<code>3 * someClass.targetMethod(_, _)</code>といったようにassert出来るのですが、
そのtargetMethodを呼ぶ大元のmethodのcallは、
<code>then:</code>ではなく<code>when:</code>になければならなかった、という話です。</p>
<p>即ち、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>when:
</span><span class='line'>  ...
</span><span class='line'>then:
</span><span class='line'>  someClass.method() == &#39;answer&#39;
</span><span class='line'>  3 * someClass.targetMethod(_, _)
</span></code></pre></td></tr></table></div></figure>
<p>ではダメで、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>when:
</span><span class='line'>  ans = someClass.method()
</span><span class='line'>then:
</span><span class='line'>  ans == &#39;answer&#39;
</span><span class='line'>  3 * someClass.targetMethod(_, _)
</span></code></pre></td></tr></table></div></figure>
<p>でないとなりませんでした、と。</p>
<p>あと、
<code>3 * someClass.targetMethod(_, _)</code>の部分には、
変数とか入れられません。即ち、
<code>(3 + n) * someClass.targetMethod(_, _)</code>とかはダメでした。</p>
]]></content></entry><entry><title type="html"><![CDATA[groovy on Java9+]]></title><link href="http://u-ryo.github.io//blog/2018/07/18/groovy-on-java9/"/><updated>2018-07-18T07:46:02+09:00</updated><id>/blog/2018/07/18/groovy-on-java9/</id><content type="html"><![CDATA[<p>いつも忘れちゃうので。
Java9以上のGroovyでmoduleが足りない、
具体的には、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Caught: java.lang.NoClassDefFoundError: Unable to load class groovy.xml.jaxb.JaxbGroovyMethods due to missing dependency javax/xml/bind/JAXBContext
</span><span class='line'>java.lang.NoClassDefFoundError: Unable to load class groovy.xml.jaxb.JaxbGroovyMethods due to missing dependency javax/xml/bind/JAXBContext
</span></code></pre></td></tr></table></div></figure>
<p>と言われる時。
groovyではどうやって<code>--add-modules</code>すればいいのかなって。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ JAVA_OPTS=&#39;--add-modules=ALL-SYSTEM&#39; groovy ...
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[Recent package managements]]></title><link href="http://u-ryo.github.io//blog/2016/09/20/recent-package-managements/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2016/09/20/recent-package-managements/</id><content type="html"><![CDATA[<p>これも忘れないうちに。</p>
<p>最近のpackage管理は、便利になってるんですけど、用途によって色々と分かれてしまっているので、却って使いづらいというか。<code>apt-get install</code>でいいじゃん... ってのは、ダメなんですかねぇ。</p>
<ul>
<li><a href="http://sdkman.io/">SDKMAN!</a>(GVMの後継。Java系(Groovy,Ant,Kotlin,Maven,Scala,grails,JBoss Forge,...)のinstall、version管理に。installationは<code>curl -s api.sdkman.io|bash</code>)</li>
<li><a href="https://github.com/tj/n">n – Interactively Manage Your Node.js Versions</a>(Nodeのinstall、version管理に。<code>sudo npm install -g n</code>でinstall、<code>sudo n latest</code>で最新のnode.jsが入る)</li>
<li><a href="https://github.com/cask/cask">cask</a>(<a href="http://qiita.com/tadsan/items/6c658cc471be61cbc8f6">2015年Emacsパッケージ事情</a>)</li>
<li><a href="https://github.com/dimitri/el-get">El-Get</a>(<a href="http://tarao.hatenablog.com/entry/20150221/1424518030">Caskはもう古い、これからはEl-Get - いまどきのEmacsパッケージ管理</a></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[Spock-Reports]]></title><link href="http://u-ryo.github.io//blog/2016/06/06/spock-reports/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2016/06/06/spock-reports/</id><content type="html"><![CDATA[<p>ちょっと古い記事ですが、
<a href="http://kyon-mm.hatenablog.com/entry/2014/08/06/132327">Spockのテストレポートが想像以上に凄い件について</a></p>
<p>Gradleで作成されるReportで満足してしまっていましたが、
もっと綺麗に出来るんですね。</p>
]]></content></entry><entry><title type="html"><![CDATA[Testing code in Javadoc using Groovy]]></title><link href="http://u-ryo.github.io//blog/2016/03/17/testing-code-in-javadoc-using-groovy/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2016/03/17/testing-code-in-javadoc-using-groovy/</id><content type="html"><![CDATA[<p>pythonには<a href="http://docs.python.jp/2/library/doctest.html">doctest</a>というのがあって、
method前段に書いた動作例documentをtestとして動かせるそうな。
同じようなのがJavaにも無いかなと探してみると、
<code>groovy.util.JavadocAssertionTestSuite</code>を使ってJavadocにtesting codeを書けるんだそう。
<a href="http://kyon-mm.bitbucket.org/blog/html/2013/05/29/use_javadocassertiontestsuite.html">うさぎ組 プロダクトコードのJavaDocにテストコードを書く方法</a>より。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>class Sample {
</span><span class='line'>
</span><span class='line'>    /**
</span><span class='line'>     * add prefix &#39;sample&#39;.
</span><span class='line'>     * <span class="nt">&lt;pre</span> <span class="na">class=</span><span class="s">&quot;groovyTestCase&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>     *    def sample = new org.kyon_mm.Sample()
</span><span class='line'>     *    assert &#39;sample foo&#39; == sample.prefixSample(&quot;foo&quot;)
</span><span class='line'>     * <span class="nt">&lt;/pre&gt;</span>
</span><span class='line'>     */
</span><span class='line'>    String prefixSample(aaa){
</span><span class='line'>        return &quot;sample $aaa&quot;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>と書いて、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import junit.framework.Test
</span><span class='line'>import junit.framework.TestCase
</span><span class='line'>import junit.framework.TestSuite
</span><span class='line'>
</span><span class='line'>class ReferenceTests extends TestCase {
</span><span class='line'>    static Test suite()  {
</span><span class='line'>        def suite = new TestSuite()
</span><span class='line'>        suite.addTest( JavadocAssertionTestSuite.suite( &#39;src/main&#39; ) )
</span><span class='line'>        suite
</span><span class='line'>    }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>と書けば、gradleでもtestしてくれるそう。
こんなのがあったなんてびっくりポンです。
<a href="http://cscott.net/Projects/JDoctest/">JDoctest</a>というのもありますが、
Javascriptで記述するというのでGroovyの方がいいですよね。</p>
]]></content></entry><entry><title type="html"><![CDATA[Debugging Groovy]]></title><link href="http://u-ryo.github.io//blog/2016/03/17/debugging-groovy/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2016/03/17/debugging-groovy/</id><content type="html"><![CDATA[<p>基本<code>println</code>で頑張るんですが、
Objectの中身を見るのって<code>.dump()</code>より<code>.inspect()</code>なんですね。</p>
]]></content></entry><entry><title type="html"><![CDATA[geb is great]]></title><link href="http://u-ryo.github.io//blog/2016/03/16/geb-is-great/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2016/03/16/geb-is-great/</id><content type="html"><![CDATA[<p><a href="http://www.gebish.org/">Geb</a>([jeb])が凄いです。
要はSeleniumのwrapperなんですが、
Page Modelとか駆使すると、
GUI testもspockのSpec本体には具体的なtag名出さずにlogicalに書けますね。
frameなpageでは、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;frameset&gt;</span>
</span><span class='line'>  <span class="nt">&lt;frame</span> <span class="na">id=</span><span class="s">&quot;head&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/frame&gt;</span>
</span><span class='line'>  <span class="nt">&lt;frame</span> <span class="na">id=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/frame&gt;</span>
</span><span class='line'><span class="nt">&lt;/frameset&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>とあったら、Page Objectに</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>static content = {
</span><span class='line'>  header(page: HeaderPage) { $(&#39;#head&#39;) }
</span><span class='line'>  main(page: MainPage) { $(&#39;#main&#39;) }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>と書いて、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>withFrame(main) {
</span><span class='line'>  ...
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>と使えます。</p>
<p>しかし、
そもそもイマドキframeなんか使う方がおかしいんですけどね。
html5ではaccessibilityの観点から廃止されてるのに。</p>
<p>最近よくある、mouse overしてmenuをdrop downさせるものについては、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>interact {
</span><span class='line'>  moveToElement(...)
</span><span class='line'>  click(...)
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p><code>&lt;select&gt;</code>やradio buttonsといったform関係要素については、
以下のようにmoduleを使って簡単に操れます。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import geb.module.RadioButtons
</span><span class='line'>import geb.module.Select
</span><span class='line'>import geb.module.Textarea
</span><span class='line'>$(&#39;select#...&#39;).module(Select).selected = &#39;some value&#39;
</span><span class='line'>$(&#39;select#...&#39;).module(Select).selectedText == &#39;label text&#39;
</span><span class='line'>$(&#39;select#...&#39;).module(RadioButtons) = &#39;some value&#39;
</span><span class='line'>$(&#39;select#...&#39;).module(RadioButtons).checked == &#39;some value&#39;
</span><span class='line'>$(&#39;select#...&#39;).module(Textarea).text = &#39;A sentence with\na new line.&#39;
</span></code></pre></td></tr></table></div></figure>
<p><code>withFrame</code>でのassertionは、末尾に<code>|| true</code>が必要でした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>withFrame(main) {
</span><span class='line'>  leaveRequest.approver.selectedText == &#39;è¥¿ãé¨é·&#39;
</span><span class='line'>  leaveRequest.approvalDate.text == new Date().format(&#39;yyyy/MM/dd&#39;)
</span><span class='line'>} || true
</span></code></pre></td></tr></table></div></figure>
<p>frame内の変化があるので、Page Module内要素は<code>required: false</code>つけまくりでした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>static content = {
</span><span class='line'>  requestType(wait: true, required: false) { $(&#39;input#rdo12&#39;).module(RadioButtons) }
</span><span class='line'>  requester(required: false) { $(&#39;span#select2-chosen-1&#39;) }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>あと適宜<code>waitFor {...}</code>が必要ですね。</p>
<p>browser alertの処理は厄介でした。
<code>driver.switchTo().alert().accept()</code>かと思ったら、<code>withAlert(wait: true){...}</code>でいいんですか。
普通の(javascriptによる)popup dialogに対しても。
「browser alertが出たら」ってどう書くんでしょう。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>withAlert(wait: true) {
</span><span class='line'>  ...
</span><span class='line'>} == &#39;modal dialog message&#39;
</span></code></pre></td></tr></table></div></figure>
<p>まぁ、<a href="http://www.gebish.org/manual/current/">geb manual</a>を読めってことですね。</p>
<p>これはgroovyのことですが、日付のformatが簡単です。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>leaveRequest.approvalDate.text == new Date().format(&#39;yyyy/MM/dd&#39;)
</span></code></pre></td></tr></table></div></figure>
<p>http accessはHttpURLClientを用い、またcookieの取得も簡単です。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@Grab(&#39;org.codehaus.groovy.modules.http-builder:http-builder&#39;)
</span><span class='line'>import groovyx.net.http.HttpURLClient
</span><span class='line'>def jsessionId = driver.manage().getCookieNamed(&quot;JSESSIONID&quot;).value
</span><span class='line'>def http = new HttpURLClient(url: &#39;https://my-ocr.herokuapp.com/&#39;)
</span><span class='line'>tryLogin(userId, password, http.request(path: jsessionId).data)
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[Post sample with code]]></title><link href="http://u-ryo.github.io//blog/2014/01/10/post-sample-with-code/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/10/post-sample-with-code/</id><content type="html"><![CDATA[<!--more-->
<h2>Example with line numbers:</h2>
<h4>Code:</h4>
<p>&#096;&#096;&#096;groovy HelloWorld.groovy<br>
println "Hello, world!"<br>
&#096;&#096;&#096;</p>
<h4>Result:</h4>
<figure class='code'><figcaption><span>HelloWorld.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">println</span> <span class="s2">&quot;Hello, world!&quot;</span>
</span></code></pre></td></tr></table></div></figure>
<h2>Example without line numbers:</h2>
<h4>Code:</h4>
<p>&#096;&#096;&#096;groovy<strong>:nl</strong> HelloWorld.groovy<br>
println "Hello, world!"<br>
&#096;&#096;&#096;</p>
<h4>Result:</h4>
<figure class='code'><figcaption><span>HelloWorld.groovy</span></figcaption><div class="highlight"><table><tr><td class='code'><pre><code class='groovy'><span class='line'><span class="n">println</span> <span class="s2">&quot;Hello, world!&quot;</span>
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[Gist tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/10/gist-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/10/gist-tag/</id><content type="html"><![CDATA[<!--more-->
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span>
</span><span class='line'>    <span class="n">gist</span> <span class="nl">id:</span> <span class="err">&#39;</span><span class="n">dc3bf4796acd6a1439bc</span><span class="err">&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<div id="gistdc3bf4796acd6a1439bc">
  <script src="https://gist.github.com/dc3bf4796acd6a1439bc.js"></script>
</div></p>
]]></content></entry><entry><title type="html"><![CDATA[jsFiddle tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/10/jsfiddle-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/10/jsfiddle-tag/</id><content type="html"><![CDATA[<!--more-->
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">jsfiddle</span> <span class="nl">shorttag:</span> <span class="err">&#39;</span><span class="mi">8</span><span class="n">wcwq</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">width:</span> <span class="err">&#39;</span><span class="mi">90</span><span class="o">%</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">skin:</span> <span class="err">&#39;</span><span class="n">light</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">tabs:</span> <span class="err">&#39;</span><span class="n">html</span><span class="o">,</span><span class="n">css</span><span class="o">,</span><span class="n">js</span><span class="o">,</span><span class="n">result</span><span class="err">&#39;</span> <span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<iframe style="width: 90%; height: 300px" frameborder="0" seamless="seamless"
        src="http://jsfiddle.net/8wcwq/embedded/html,css,js,result/light/"></iframe>
</p>
]]></content></entry><entry><title type="html"><![CDATA[Image tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/09/image-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/09/image-tag/</id><content type="html"><![CDATA[<!--more-->
<p>Note, that theme <code>img</code> tag can handle all the attributes of standard HTML 'img' tag, such as align, border, etc.</p>
<h2>Link to the internal image:</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">img</span> <span class="nl">src:</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">images</span><span class="o">/</span><span class="n">email</span><span class="o">.</span><span class="na">png</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">alt:</span> <span class="err">&#39;</span><span class="n">email</span> <span class="n">image</span><span class="err">&#39;</span> <span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p><img src='/images/email-ff20ad5e6f1ed897da7aecb635f40a52.png' alt='email image' >
</p>
<h2>Link to the external image:</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">img</span> <span class="nl">src:</span> <span class="err">&#39;</span><span class="nl">http:</span><span class="o">//</span><span class="n">cdn1</span><span class="o">.</span><span class="na">sysgears</span><span class="o">.</span><span class="na">com</span><span class="o">/</span><span class="n">images</span><span class="o">/</span><span class="n">grain</span><span class="o">/</span><span class="n">logo</span><span class="o">-</span><span class="n">cacd6d0f221a8f8cab3c46db5b0e730a</span><span class="o">.</span><span class="na">png</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">height:</span> <span class="mi">100</span><span class="o">,</span> <span class="nl">width:</span> <span class="mi">200</span> <span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p><img src='http://cdn1.sysgears.com/images/grain/logo-cacd6d0f221a8f8cab3c46db5b0e730a.png' height='100' width='200' >
</p>
]]></content></entry><entry><title type="html"><![CDATA[HTML5 Video tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/09/html5-video-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/09/html5-video-tag/</id><content type="html"><![CDATA[<!--more-->
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span>
</span><span class='line'>    <span class="n">video</span> <span class="nl">urls:</span> <span class="o">[</span>
</span><span class='line'>        <span class="err">&#39;</span><span class="nl">http:</span><span class="c1">//html5demos.com/assets/dizzy.mp4&#39;,</span>
</span><span class='line'>        <span class="err">&#39;</span><span class="nl">http:</span><span class="c1">//html5demos.com/assets/dizzy.webm&#39;,</span>
</span><span class='line'>        <span class="err">&#39;</span><span class="nl">http:</span><span class="c1">//html5demos.com/assets/dizzy.ogv&#39;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<video 
       
       controls="">
  
    <source src="http://html5demos.com/assets/dizzy.mp4" type="video/mp4">
  
    <source src="http://html5demos.com/assets/dizzy.webm" type="video/webm">
  
    <source src="http://html5demos.com/assets/dizzy.ogv" type="video/ogg">
  
</video>

</p>
]]></content></entry><entry><title type="html"><![CDATA[Raw tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/08/raw-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/08/raw-tag/</id><content type="html"><![CDATA[<!--more-->
<p>Raw tag is used here to prevent groovy code parsing.</p>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">raw</span> <span class="nl">text:</span> <span class="err">&#39;</span><span class="n">$</span><span class="o">{</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">}</span><span class="err">&#39;</span> <span class="k">%&gt;</span> = ${ 2 + 2 }
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>${ 2 + 2 } = 4</p>
]]></content></entry><entry><title type="html"><![CDATA[Pullquote tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/08/pullquote-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/08/pullquote-tag/</id><content type="html"><![CDATA[<!--more-->
<h2>Right-aligned Quote</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">pullquote</span> <span class="nl">content:</span>
</span><span class='line'><span class="sc">&#39;&#39;&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="o">,</span> <span class="n">consectetur</span> <span class="n">adipisicing</span> <span class="n">elit</span><span class="o">,</span> <span class="n">sed</span> <span class="k">do</span> <span class="n">eiusmod</span> <span class="n">tempor</span>
</span><span class='line'><span class="n">incididunt</span> <span class="n">ut</span> <span class="n">labore</span> <span class="n">et</span> <span class="n">dolore</span> <span class="n">magna</span> <span class="n">aliqua</span><span class="o">.</span> <span class="o">{/</span><span class="n">Ut</span> <span class="n">enim</span> <span class="n">ad</span> <span class="n">minim</span> <span class="n">veniam</span><span class="o">/}.</span> <span class="n">Quis</span> <span class="n">nostrud</span> <span class="n">exercitation</span> <span class="n">ullamco</span>
</span><span class='line'><span class="n">laboris</span> <span class="n">nisi</span> <span class="n">ut</span> <span class="n">aliquip</span> <span class="n">ex</span> <span class="n">ea</span> <span class="n">commodo</span> <span class="n">consequat</span><span class="o">.</span> <span class="n">Duis</span> <span class="n">aute</span> <span class="n">irure</span> <span class="n">dolor</span> <span class="n">in</span> <span class="n">reprehenderit</span> <span class="n">in</span> <span class="n">voluptate</span> <span class="n">velit</span>
</span><span class='line'><span class="n">esse</span> <span class="n">cillum</span> <span class="n">dolore</span> <span class="n">eu</span> <span class="n">fugiat</span> <span class="n">nulla</span> <span class="n">pariatur</span><span class="o">.</span> <span class="n">Excepteur</span> <span class="n">sint</span> <span class="n">occaecat</span> <span class="n">cupidatat</span> <span class="n">non</span> <span class="n">proident</span><span class="o">,</span> <span class="n">sunt</span> <span class="n">in</span> <span class="n">culpa</span>
</span><span class='line'><span class="n">qui</span> <span class="n">officia</span> <span class="n">deserunt</span> <span class="n">mollit</span> <span class="n">anim</span> <span class="n">id</span> <span class="n">est</span> <span class="n">laborum</span><span class="o">.</span><span class="sc">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>


    <span class="pullquote-right" data-pullquote="Ut enim ad minim veniam">
        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam. Quis nostrud exercitation ullamco
laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit
esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa
qui officia deserunt mollit anim id est laborum.
    </span>
</p>
<h2>Left-aligned Quote</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">pullquote</span> <span class="nl">align:</span> <span class="err">&#39;</span><span class="n">left</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">content:</span>
</span><span class='line'><span class="sc">&#39;&#39;&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="o">,</span> <span class="n">consectetur</span> <span class="n">adipisicing</span> <span class="n">elit</span><span class="o">,</span> <span class="n">sed</span> <span class="k">do</span> <span class="n">eiusmod</span> <span class="n">tempor</span>
</span><span class='line'><span class="n">incididunt</span> <span class="n">ut</span> <span class="n">labore</span> <span class="n">et</span> <span class="n">dolore</span> <span class="n">magna</span> <span class="n">aliqua</span><span class="o">.</span> <span class="o">{/</span><span class="n">Ut</span> <span class="n">enim</span> <span class="n">ad</span> <span class="n">minim</span> <span class="n">veniam</span><span class="o">/}.</span> <span class="n">Quis</span> <span class="n">nostrud</span> <span class="n">exercitation</span> <span class="n">ullamco</span>
</span><span class='line'><span class="n">laboris</span> <span class="n">nisi</span> <span class="n">ut</span> <span class="n">aliquip</span> <span class="n">ex</span> <span class="n">ea</span> <span class="n">commodo</span> <span class="n">consequat</span><span class="o">.</span> <span class="n">Duis</span> <span class="n">aute</span> <span class="n">irure</span> <span class="n">dolor</span> <span class="n">in</span> <span class="n">reprehenderit</span> <span class="n">in</span> <span class="n">voluptate</span> <span class="n">velit</span>
</span><span class='line'><span class="n">esse</span> <span class="n">cillum</span> <span class="n">dolore</span> <span class="n">eu</span> <span class="n">fugiat</span> <span class="n">nulla</span> <span class="n">pariatur</span><span class="o">.</span> <span class="n">Excepteur</span> <span class="n">sint</span> <span class="n">occaecat</span> <span class="n">cupidatat</span> <span class="n">non</span> <span class="n">proident</span><span class="o">,</span> <span class="n">sunt</span> <span class="n">in</span> <span class="n">culpa</span>
</span><span class='line'><span class="n">qui</span> <span class="n">officia</span> <span class="n">deserunt</span> <span class="n">mollit</span> <span class="n">anim</span> <span class="n">id</span> <span class="n">est</span> <span class="n">laborum</span><span class="o">.</span><span class="sc">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>


    <span class="pullquote-left" data-pullquote="Ut enim ad minim veniam">
        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam. Quis nostrud exercitation ullamco
laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit
esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa
qui officia deserunt mollit anim id est laborum.
    </span>
</p>
]]></content></entry><entry><title type="html"><![CDATA[Blockqoute tag]]></title><link href="http://u-ryo.github.io//blog/2014/01/08/blockqoute-tag/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2014/01/08/blockqoute-tag/</id><content type="html"><![CDATA[<!--more-->
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">blockquote</span> <span class="nl">content:</span>
</span><span class='line'><span class="sc">&#39;&#39;&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="o">,</span> <span class="n">consectetur</span> <span class="n">adipisicing</span> <span class="n">elit</span><span class="o">,</span> <span class="n">sed</span> <span class="k">do</span> <span class="n">eiusmod</span> <span class="n">tempor</span>
</span><span class='line'><span class="n">incididunt</span> <span class="n">ut</span> <span class="n">labore</span> <span class="n">et</span> <span class="n">dolore</span> <span class="n">magna</span> <span class="n">aliqua</span><span class="o">.</span><span class="sc">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<blockquote>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua.</p>
    <footer>
        
        
    </footer>
</blockquote></p>
<h2>Quote from a printed work</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">blockquote</span> <span class="nl">author:</span> <span class="err">&#39;</span><span class="n">John</span> <span class="n">Doe</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">sourceTitle:</span> <span class="err">&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">content:</span>
</span><span class='line'><span class="sc">&#39;&#39;&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="o">,</span> <span class="n">consectetur</span> <span class="n">adipisicing</span> <span class="n">elit</span><span class="o">,</span> <span class="n">sed</span> <span class="k">do</span> <span class="n">eiusmod</span> <span class="n">tempor</span>
</span><span class='line'><span class="n">incididunt</span> <span class="n">ut</span> <span class="n">labore</span> <span class="n">et</span> <span class="n">dolore</span> <span class="n">magna</span> <span class="n">aliqua</span><span class="o">.</span><span class="sc">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<blockquote>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua.</p>
    <footer>
        
            <strong>John Doe</strong>
        
        
            <cite>
                
                    Lorem ipsum
                
            </cite>
        
    </footer>
</blockquote></p>
<h2>Quote from Twitter</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">blockquote</span> <span class="nl">author:</span> <span class="err">&#39;</span><span class="n">John</span> <span class="n">Doe</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">sourceLink:</span> <span class="err">&#39;</span><span class="nl">http:</span><span class="c1">//example.com&#39;, content:</span>
</span><span class='line'><span class="sc">&#39;&#39;&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="o">,</span> <span class="n">consectetur</span> <span class="n">adipisicing</span> <span class="n">elit</span><span class="o">,</span> <span class="n">sed</span> <span class="k">do</span> <span class="n">eiusmod</span> <span class="n">tempor</span>
</span><span class='line'><span class="n">incididunt</span> <span class="n">ut</span> <span class="n">labore</span> <span class="n">et</span> <span class="n">dolore</span> <span class="n">magna</span> <span class="n">aliqua</span><span class="o">.</span><span class="sc">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<blockquote>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua.</p>
    <footer>
        
            <strong>John Doe</strong>
        
        
            <cite>
                
                    <a href="http://example.com" target="_blank">http://example.com</a>
                
            </cite>
        
    </footer>
</blockquote></p>
<h2>Quote from a post</h2>
<h4>Code:</h4>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%=</span> <span class="n">blockquote</span> <span class="nl">author:</span> <span class="err">&#39;</span><span class="n">John</span> <span class="n">Doe</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">sourceTitle:</span> <span class="err">&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">sourceLink:</span> <span class="err">&#39;</span><span class="nl">http:</span><span class="c1">//example.com&#39;, content:</span>
</span><span class='line'><span class="sc">&#39;&#39;&#39;</span><span class="n">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="o">,</span> <span class="n">consectetur</span> <span class="n">adipisicing</span> <span class="n">elit</span><span class="o">,</span> <span class="n">sed</span> <span class="k">do</span> <span class="n">eiusmod</span> <span class="n">tempor</span>
</span><span class='line'><span class="n">incididunt</span> <span class="n">ut</span> <span class="n">labore</span> <span class="n">et</span> <span class="n">dolore</span> <span class="n">magna</span> <span class="n">aliqua</span><span class="o">.</span><span class="sc">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Result:</h4>
<p>

<blockquote>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua.</p>
    <footer>
        
            <strong>John Doe</strong>
        
        
            <cite>
                
                    <a href="http://example.com" target="_blank">Lorem ipsum</a>
                
            </cite>
        
    </footer>
</blockquote></p>
]]></content></entry></feed>