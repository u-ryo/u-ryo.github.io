<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/bash/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2017-08-22T10:04:50+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Let's Encrypt without certbot-auto]]></title><link href="http://u-ryo.github.io//blog/2016/09/13/let-s-encrypt-without-certbot-auto/"/><updated>2017-08-22T10:04:50+09:00</updated><id>/blog/2016/09/13/let-s-encrypt-without-certbot-auto/</id><content type="html"><![CDATA[<p>Let's Encrypt、素晴らしいんだけど、
とあるserverで、使っているのがUbuntu 11.04(Natty)、
package systemが何か壊れてて、
依存関係がおかしくて解消できなくて、
というcaseがありました。
基本的にどこを調べても、
Let's Encryptを使うには既存のpackaging systemをbaseにしたものばかりで、
Stackoverflowなんかでも「backportsを使って既存のpackaging依存関係を
修築してから」なんていう話しかなくて。
なんかこう、<code>certobot-auto</code>を使わないで、
っていう話って意外となくて途方に暮れていると、
こんなのがありました。</p>
<p><a href="https://github.com/Neilpang/acme.sh">An ACME Shell script: acme.sh</a></p>
<p>要は、bashだけでLet's Encryptの証明書を使える、
というもので、
なーんだ最初から全部これでいーじゃん、
という感じです。</p>
<p><code>wget -O - https://get.acme.sh | sh</code>でも行けるというのですが、
何かserver certが違うらしく、<code>--no-check-certificate</code>を付けてもうまく行かず。
幸いgitはあってくれたので、cloneして<code>cd acme.sh</code> <code>./acme.sh --install</code>すると、
home直下に.acme.shというdirectoryを掘り、
その下にCSRやLet's Encryptからの証明書を自動で作ってくれる、
更に実行userでcron登録してくれる、
というものなので、実行だけならroot権限不要とはいえ、
証明書filesが一般user home directory以下というのもなんなので、
rootでやった方が良さげです。
というわけで、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'># git clone https://github.com/Neilpang/acme.sh
</span><span class='line'># cd acme.sh
</span><span class='line'># ./acme.sh --install
</span><span class='line'># ./acme.sh --issue -d dev.locationsupporter.info -w /var/lib/tomcat7/webapps/ROOT/
</span><span class='line'># vi /etc/apache2/sites-enabled/default-ssl
</span><span class='line'>=============================================
</span><span class='line'>SSLCertificateFile /root/.acme.sh/dev.locationsupporter.info.cer
</span><span class='line'>SSLCertificateKeyFile /root/.acme.sh/dev.locationsupporter.info.key
</span><span class='line'>SSLCertificateChainFile /root/.acme.sh/fullchain.cer
</span><span class='line'>=============================================
</span><span class='line'># crontab -l
</span></code></pre></td></tr></table></div></figure>
<p>これで、pytho2.7もpackage updateも不要だし、
更にお手軽にLet's Encryptを使えるというものでしょう。</p>
]]></content></entry></feed>