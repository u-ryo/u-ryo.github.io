<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/ssh/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-07-18T07:36:11+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[ssh with empty password]]></title><link href="http://u-ryo.github.io//blog/2018/10/10/ssh-with-empty-password/"/><updated>2018-10-10T20:35:28+09:00</updated><id>/blog/2018/10/10/ssh-with-empty-password/</id><content type="html"><![CDATA[<p>某ubuntu起動diskをmountして<code>/etc/passwd</code>のpasswordを潰して、
console login出来るようにはなったんですけれども、
sshでは入れません。
あーそっか、と思って、いい機会だからと後輩氏に課題として与えてみました。</p>
<p>新規user作って乗り越えてくれまして、それはそれで良い解だと思いますが、
<code>/etc/ssh/sshd_config</code>の<code>PermitEmptyPasswords yes</code>でも行けるよー
(このhostを繋ぐのは内部networkだし)、
と垂れて、試したところ、ものの見事に失敗。</p>
<p>あれー、なんでー?!</p>
<p>更に調べてみると、もう一つ施策が必要でした。</p>
<p><a href="https://qiita.com/FGtatsuro/items/4893dfb138f70d972904">公開鍵なし/パスワードなしでSSHログインする設定</a>にあるように<code>UsePAM no</code>にするか、
PAMを使っているということなのでならばPAMでempty passwordを許容するように
<code>/etc/pam.d/common-auth</code>の
<code>auth   [success=1 default=ignore]  pam_unix.so nullok_secure</code>の
<code>nullok_secure</code>を消す(<a href="https://www.redhat.com/archives/pam-list/2005-September/msg00001.html">Re: nullok_secure option</a>)か、
ですがPAMいじるのは怖いですよねぇ。</p>
]]></content></entry><entry><title type="html"><![CDATA[keep ssh connection]]></title><link href="http://u-ryo.github.io//blog/2017/08/22/keep-ssh-connection/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2017/08/22/keep-ssh-connection/</id><content type="html"><![CDATA[<p>sshがよく切れるサイトが多いのですが、基本的には諦めてました。
でも、こうすればよかったんですね。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ssh -L 8888:localhost:8080 -o &#39;TCPKeepAlive yes&#39; -o &#39;ServerAliveInterval 10&#39; r.umetsu@219.101.192.235
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[ssh access to Koding]]></title><link href="http://u-ryo.github.io//blog/2015/10/28/ssh-access-to-koding/"/><updated>2018-07-18T07:36:11+09:00</updated><id>/blog/2015/10/28/ssh-access-to-koding/</id><content type="html"><![CDATA[<p>Kodingなんですが、sshで繋げてログインすることが出来るんですね。
びっくりポンです。</p>
<ol>
<li>~/.ssh/authorized_keys に手元のマシンのpublic keyを記述</li>
<li>Koding上のマシン名を左側のVM Settingsで確認(毎日変わる模様)</li>
<li>手元からssh(公開鍵認証のみ)</li>
</ol>
<p>tmuxも使えるので超便利です。
ただ、デフォルトのコントロールキーがC-bになっているので、
最初は戸惑います。
慣れ親しんだC-aに変えるには、
~/.tmux.conf
に</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>set-option -g prefix C-a
</span></code></pre></td></tr></table></div></figure>
<p>ちゃんと公式ドキュメントに書いてありました。<br  />
<a href="http://learn.koding.com/guides/using-tmux-on-koding/">Using Tmux on Koding</a><br  />
(一旦tmuxを全て終了させないと反映されません)</p>
]]></content></entry></feed>