<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//categories/google-photos/atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-07-18T07:36:11+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[google photo api]]></title><link href="http://u-ryo.github.io//blog/2019/06/02/google-photo-api/"/><updated>2020-01-11T00:51:56+09:00</updated><id>/blog/2019/06/02/google-photo-api/</id><content type="html"><![CDATA[<p>一日千枚とか写真撮る人だと写真がすぐ溜まっちゃうんですよね。
backupは無限の<a href="https://photos.google.com">Google Photos</a>に、ということで、前はPicasaのAPI、<code>upload_gphots</code>を使ってたんですけど、もう無くなっちゃっていて。どうしよう、途方に暮れていました。暫くぶりに探すと、丁度1年程前からGoogle Photo APIが整備されたようで、良かったです。ずっと待っていました。
<a href="https://qiita.com/zaki-lknr/items/97c363c12ede4c1f25d2">[追記あり] Google Photos APIsでアルバム作成と写真のアップロード</a>と<a href="https://qiita.com/wo_k_harada/items/7327971a2414040e5a86">Google Photoを業務システムのクラウドストレージとして使った結果</a>、<a href="https://developers.google.com/photos/library/guides/list">本家API Document</a>を参考に早速使ってみます。</p>
<h2>ACCESS_TOKENの取得</h2>
<ul>
<li><a href="https://developers.google.com/photos/library/guides/get-started">APIの有効化</a></li>
<li><a href="https://console.developers.google.com/">Google Developer Console</a>から「認証情報」→「OAuth2.0クライアントID」無ければ上の「認証情報を作成」pulldown menuから「OAuthクライアントID」(「ウェブアプリケーションの種類」は「その他」)で作成</li>
<li>上記「クライアントID」「クライアント シークレット」をメモ</li>
<li>次のURLに<code>$CLIENT_ID</code>を入れてbrowserでaccess、AUTHORIZATION_CODEを取得 (<code>https://accounts.google.com/o/oauth2/v2/auth?response_type=code&amp;client_id=$CLIENT_ID&amp;redirect_uri=urn:ietf:wg:oauth:2.0:oob&amp;scope=https://www.googleapis.com/auth/photoslibrary&amp;access_type=offline</code> (SCOPEはGoogle PhotoでのR/W accessの場合は<code>https://www.googleapis.com/auth/photoslibrary</code>)</li>
<li>以下のようにして、<code>ACCESS_TOKEN</code>及び<code>REFRESH_TOKEN</code>を得る
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ AUTHORIZATION_CODE</span><span class="o">=</span>4/wnmGpTh__1zdrgdjmPWyetUI7C1mvsjRrA_IyZmwY7aSeYppD9X_9iB
</span><span class='line'><span class="nv">$ CLIENT_ID</span><span class="o">=</span>952391557281-s8b8ditnocfu590fi0ntsfk76rbmkm80.apps.googleusercontent.com
</span><span class='line'><span class="nv">$ CLIENT_SECRET</span><span class="o">=</span>k6XPLuryMWUtKDKmS1cYgW0r
</span><span class='line'><span class="nv">$ REDIRECT_URI</span><span class="o">=</span>urn:ietf:wg:oauth:2.0:oob
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl --data <span class="s2">&quot;code=$AUTHORIZATION_CODE&quot;</span> --data <span class="s2">&quot;client_id=$CLIENT_ID&quot;</span> --data <span class="s2">&quot;client_secret=$CLIENT_SECRET&quot;</span> --data <span class="s2">&quot;redirect_uri=$REDIRECT_URI&quot;</span> --data <span class="s2">&quot;grant_type=authorization_code&quot;</span> --data <span class="s2">&quot;access_type=offline&quot;</span> https://www.googleapis.com/oauth2/v4/token
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;access_token&quot;</span>: <span class="s2">&quot;ya29.GlsOB-ebr6NrI78UemOPHcm1-jdw0XkxD8iiSqE-Bh5xB_Sx8bhKsRhRyz7gqJy45A-HIF6s6GF0j5wz0dmNppVqEMhtUurAwfbe-xgEsR5MZFjoIY3ONOx8zd4Q&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;expires_in&quot;</span>: 3600,
</span><span class='line'>  <span class="s2">&quot;refresh_token&quot;</span>: <span class="s2">&quot;1/8LrGRLdBaFJYHlOr0rEAyZcgC9yDl2PcZZyrbqoxc7c&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;scope&quot;</span>: <span class="s2">&quot;https://www.googleapis.com/auth/photoslibrary&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;token_type&quot;</span>: <span class="s2">&quot;Bearer&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></li>
<li><code>ACCESS_TOKEN</code>は1時間しか有効でないので、適宜<code>REFRESH_TOKEN</code>を使って更新
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ REFRESH_TOKEN</span><span class="o">=</span>1/8LrGRLdBaFJYHlOr0rEAyZcgC9yDl2PcZZyrbqoxc7c
</span><span class='line'><span class="nv">$ CLIENT_ID</span><span class="o">=</span>952391557281-s8b8ditnocfu590fi0ntsfk76rbmkm80.apps.googleusercontent.com
</span><span class='line'><span class="nv">$ CLIENT_SECRET</span><span class="o">=</span>k6XPLuryMWUtKDKmS1cYgW0r
</span><span class='line'>
</span><span class='line'><span class="nv">$ ACCESS_TOKEN</span><span class="o">=</span><span class="sb">`</span>curl -s --data <span class="s2">&quot;refresh_token=$REFRESH_TOKEN&quot;</span> --data <span class="s2">&quot;client_id=$CLIENT_ID&quot;</span> --data <span class="s2">&quot;client_secret=$CLIENT_SECRET&quot;</span> --data <span class="s2">&quot;grant_type=refresh_token&quot;</span> https://www.googleapis.com/oauth2/v4/token|jq .access_token -r<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure></li>
</ul>
<p><code>REFRESH_TOKEN</code>を取得すれば、あと<code>CLIENT_ID</code>と<code>CLIENT_SECRET</code>が分かれば<code>ACCESS_TOKEN</code>は更新できます。</p>
<h2>ALBUMの作成</h2>
<ul>
<li>既存のAlbumの確認
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -s -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> https://photoslibrary.googleapis.com/v1/albums?pageSize<span class="o">=</span>50
</span></code></pre></td></tr></table></div></figure></li>
<li>既存のAlbumの確認(<code>nextPageToken</code>がある場合)
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -s -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> https://photoslibrary.googleapis.com/v1/albums?pageSize<span class="o">=</span>50&amp;pageToken<span class="o">=</span>...
</span></code></pre></td></tr></table></div></figure></li>
<li>新規Albumの作成
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ DIR</span><span class="o">=</span>20190428
</span><span class='line'><span class="nv">$ </span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{ &quot;album&quot;: { &quot;title&quot;:&quot;&#39;</span><span class="nv">$DIR</span><span class="s1">&#39;&quot; } }&#39;</span> https://photoslibrary.googleapis.com/v1/albums
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;ADIlBkAOcfB64a_Opnwdjgxeq6jhQv4GQ1pZQ-wse2o2hiBIofuhefmFycfTtIcLAG0inLt0FlZn&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;title&quot;</span>: <span class="s2">&quot;20190428&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;productUrl&quot;</span>: <span class="s2">&quot;https://photos.google.com/lr/album/ADIlBkAOcfB64a_Opnwdjgxeq6jhQv4GQ1pZQ-wse2o2hiBIofuhefmFycfTtIcLAG0inLt0FlZn&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;isWriteable&quot;</span>: <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></li>
</ul>
<h2>UPLOAD and adding to Album</h2>
<p>2段階になっていて、</p>
<ol>
<li>binary fileをuploadして<code>UPLOAD_TOKEN</code>を得る</li>
<li><code>UPLOAD_TOKEN</code>を元に<code>mediaItems:batchCreate</code>する(ALBUM名はここで渡す。batch処理なので複数の<code>UPLOAD_TOKEN</code>を渡せる)</li>
</ol>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">FILENAME</span><span class="o">=</span>20190428/img_0699.jpg
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s1">&#39;Content-type: application/octet-stream&#39;</span> -H <span class="s1">&#39;X-Goog-Upload-Protocol: raw&#39;</span> -H <span class="s2">&quot;X-Goog-Upload-File-Name: $FILENAME&quot;</span> --data-binary <span class="s2">&quot;@$FILENAME&quot;</span> https://photoslibrary.googleapis.com/v1/uploads
</span><span class='line'>CAIS+QIASsy4zFbu3IKGgbDXA5XshOGvHPOTLuqbqTN9MQxKRVCsxp3YHbus+qsDgA0GCjuqXdmGpv1uWFxKvf8GYa/8VJQ1S6FUcmGWgw6Hdj14QNYtBRVbXU/cdq/Jkx3ZblG5co3hnY6+yMxih26kB0vTWfWp9GwIE904y5yXEE1pm/V0bFduzA/CZvdlAU9EvWfqKnNO7c3nozWUalm5WUZHHatVQZT+H5+jD0Bq3YwMUdfC5KF048AxFa9auW1HpQGdboalYyXBCJksfzteWtU53wZ8rFnZgHwrui9uA2ptnTuDlin2m+WXU+HqaVRuKX1ou5BzalI4P0gVfWql41Af6nuvvEdMNZ39tEvK2EARUX0CUd8veDznZiWjtPcRqpJnvjDRCxaSgr/cn+JXf9k7SnD0DYVWOdM64lngcAuXxsKk6RJJOVxQBUi6XAG04dHnKxDndqjl+fcH9qWAmpXejPx8Kgn6GX7TgatiKHEG4ybvWjStWg1JPg
</span><span class='line'>
</span><span class='line'><span class="nv">$ UPLOAD_TOKEN</span><span class="o">=</span>CAIS+...
</span><span class='line'><span class="nv">$ ALBUM_ID</span><span class="o">=</span>ADIlBkAOcfB64a_Opnwdjgxeq6jhQv4GQ1pZQ-wse2o2hiBIofuhefmFycfTtIcLAG0inLt0FlZn
</span><span class='line'><span class="nv">$ </span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{ &quot;albumId&quot;: &quot;&#39;</span><span class="nv">$ALBUM_ID</span><span class="s1">&#39;&quot;, &quot;newMediaItems&quot;:[ { &quot;simpleMediaItem&quot;: { &quot;uploadToken&quot;: &quot;&#39;</span><span class="nv">$UPLOAD_TOKEN</span><span class="s1">&#39;&quot; }} ] }&#39;</span> https://photoslibrary.googleapis.com/v1/mediaItems:batchCreate
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;newMediaItemResults&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;uploadToken&quot;</span>: <span class="s2">&quot;CAIS+...&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;status&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;message&quot;</span>: <span class="s2">&quot;OK&quot;</span>
</span><span class='line'>      <span class="o">}</span>,
</span><span class='line'>      <span class="s2">&quot;mediaItem&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;ADIl...&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;productUrl&quot;</span>: <span class="s2">&quot;https://photos.google.com/lr/album/ADIl...&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;mimeType&quot;</span>: <span class="s2">&quot;image/jpeg&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;mediaMetadata&quot;</span>: <span class="o">{</span>
</span><span class='line'>          <span class="s2">&quot;creationTime&quot;</span>: <span class="s2">&quot;2019-04-28T02:40:35Z&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;width&quot;</span>: <span class="s2">&quot;5184&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;height&quot;</span>: <span class="s2">&quot;3456&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;filename&quot;</span>: <span class="s2">&quot;20190428/img_0699.jpg&quot;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<h2>folderまるっとupload</h2>
<ul>
<li>事前準備
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">REFRESH_TOKEN</span><span class="o">=</span>...
</span><span class='line'><span class="nv">CLIENT_ID</span><span class="o">=</span>...
</span><span class='line'><span class="nv">CLIENT_SECRET</span><span class="o">=</span>...
</span><span class='line'><span class="nv">ACCESS_TOKEN</span><span class="o">=</span><span class="sb">`</span>curl -s --data <span class="s2">&quot;refresh_token=$REFRESH_TOKEN&quot;</span> --data <span class="s2">&quot;client_id=$CLIENT_ID&quot;</span> --data <span class="s2">&quot;client_secret=$CLIENT_SECRET&quot;</span> --data <span class="s2">&quot;grant_type=refresh_token&quot;</span> https://www.googleapis.com/oauth2/v4/token|jq .access_token -r<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure></li>
<li>Album作成
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">DIR</span><span class="o">=</span>...
</span><span class='line'><span class="nv">ALBUM_ID</span><span class="o">=</span><span class="sb">`</span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;album&quot;:{&quot;title&quot;:&quot;&#39;</span><span class="nv">$DIR</span><span class="s1">&#39;&quot;}}&#39;</span> https://photoslibrary.googleapis.com/v1/albums|jq -r .id<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure></li>
<li><code>~/photo/$DIR</code>以下の<code>img_*.jpg</code> filesのuploadとalbum登録(約100 files毎に<code>ACCESS_TOKEN</code>のrefresh)</li>
</ul>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">for </span>i in ~/photo/<span class="nv">$DIR</span>/img_*.jpg; <span class="k">do if</span> <span class="o">[</span> ! <span class="k">${</span><span class="nv">i</span><span class="p">##*00.jpg</span><span class="k">}</span> <span class="o">]</span>;<span class="k">then </span><span class="nv">ACCESS_TOKEN</span><span class="o">=</span><span class="sb">`</span>curl -s --data <span class="s2">&quot;refresh_token=$REFRESH_TOKEN&quot;</span> --data <span class="s2">&quot;client_id=$CLIENT_ID&quot;</span> --data <span class="s2">&quot;client_secret=$CLIENT_SECRET&quot;</span> --data <span class="s2">&quot;grant_type=refresh_token&quot;</span> https://www.googleapis.com/oauth2/v4/token|jq .access_token -r<span class="sb">`</span>;<span class="k">fi</span>;<span class="nv">UPLOAD_TOKEN</span><span class="o">=</span><span class="sb">`</span><span class="nv">FILENAME</span><span class="o">=</span><span class="nv">$DIR</span>/<span class="k">${</span><span class="nv">i</span><span class="p">##*/</span><span class="k">}</span>; curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s1">&#39;Content-type: application/octet-stream&#39;</span> -H <span class="s1">&#39;X-Goog-Upload-Protocol: raw&#39;</span> -H <span class="s2">&quot;X-Goog-Upload-File-Name: $FILENAME&quot;</span> --data-binary <span class="s2">&quot;@$i&quot;</span> https://photoslibrary.googleapis.com/v1/uploads<span class="sb">`</span>;curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;albumId&quot;:&quot;&#39;</span><span class="nv">$ALBUM_ID</span><span class="s1">&#39;&quot;,&quot;newMediaItems&quot;:[{&quot;simpleMediaItem&quot;:{&quot;uploadToken&quot;:&quot;&#39;</span><span class="nv">$UPLOAD_TOKEN</span><span class="s1">&#39;&quot;}}]}&#39;</span> https://photoslibrary.googleapis.com/v1/mediaItems:batchCreate|tee -a /tmp/upload.log|grep -q error&amp;&amp;echo <span class="nv">$i</span>;<span class="k">done</span>|tee /tmp/upload_failed.log
</span></code></pre></td></tr></table></div></figure>
<p>uploadに失敗したfile namesが標準出力と<code>/tmp/upload_failed.log</code>に出てくるので、後刻それらをretry。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">for </span>i in <span class="sb">`</span>cat /tmp/upload_failed.log<span class="sb">`</span>; <span class="k">do if</span> <span class="o">[</span> ! <span class="k">${</span><span class="nv">i</span><span class="p">##*00.jpg</span><span class="k">}</span> <span class="o">]</span>;<span class="k">then </span><span class="nv">ACCESS_TOKEN</span><span class="o">=</span><span class="sb">`</span>curl -s --data <span class="s2">&quot;refresh_token=$REFRESH_TOKEN&quot;</span> --data <span class="s2">&quot;client_id=$CLIENT_ID&quot;</span> --data <span class="s2">&quot;client_secret=$CLIENT_SECRET&quot;</span> --data <span class="s2">&quot;grant_type=refresh_token&quot;</span> https://www.googleapis.com/oauth2/v4/token|jq .access_token -r<span class="sb">`</span>;<span class="k">fi</span>;<span class="nv">UPLOAD_TOKEN</span><span class="o">=</span><span class="sb">`</span><span class="nv">FILENAME</span><span class="o">=</span><span class="nv">$DIR</span>/<span class="k">${</span><span class="nv">i</span><span class="p">##*/</span><span class="k">}</span>; curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s1">&#39;Content-type: application/octet-stream&#39;</span> -H <span class="s1">&#39;X-Goog-Upload-Protocol: raw&#39;</span> -H <span class="s2">&quot;X-Goog-Upload-File-Name: $FILENAME&quot;</span> --data-binary <span class="s2">&quot;@$i&quot;</span> https://photoslibrary.googleapis.com/v1/uploads<span class="sb">`</span>;curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;albumId&quot;:&quot;&#39;</span><span class="nv">$ALBUM_ID</span><span class="s1">&#39;&quot;,&quot;newMediaItems&quot;:[{&quot;simpleMediaItem&quot;:{&quot;uploadToken&quot;:&quot;&#39;</span><span class="nv">$UPLOAD_TOKEN</span><span class="s1">&#39;&quot;}}]}&#39;</span> https://photoslibrary.googleapis.com/v1/mediaItems:batchCreate|tee -a /tmp/upload.log|grep -q error&amp;&amp;echo <span class="nv">$i</span>;<span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>
<p>これではbatch処理を活かしていない(複数の<code>UPLOAD_TOKEN</code>をbatchCreateしていない)のですが、Googleだけに割とすぐ終わること、error handlingがあまりにも複雑になることから、都度batchCreateすることにしました。</p>
<p>私の場合、1000 filesで約3GB弱、を目処に分割してuploadしています。
uploadしたfilesは全て「元のサイズ」で保存されてしまい、Google Driveの容量を消費してしまうので、<a href="https://photos.google.com/settings">設定</a>から「容量を解放」しなければなりません。これが「1日1回」となっているものの、だからといって24時間後に再度実行しても「ファイルを圧縮できませんでした。ストレージを復元できるのは 1 日 1 回だけです。」と言われて出来ず、困っています。実際に再度実行できるまでには1.5日〜2日かかるようで、これが最大のneckになっています。</p>
<h2>新規Albumへの既存files追加</h2>
<p>これはダメでした。
何度試してもダメだったので、調べてみると、公式Documentに、
<a href="https://developers.google.com/photos/library/guides/manage-albums">Note that you can only add media items that have been uploaded by your application to albums that your application has created.</a>とあります。
なんでやねん!
何で既存の画像とAPI経由の画像とを区別するのか、わけわかりません。
それじゃぁ、っていうんで、既にGoogle Photos上にある写真も改めてuploadしてalbumにaddしたら、それは出来ました。しかし、「元のサイズ」になってしまって容量を食ってしまいます。これについても「容量を解放」しなければなりません。
全く七面倒臭いものです。</p>
<p>ちなみに、以下のようにやりました。paginationが発生しない程度のAlbum限定で、
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ DIR</span><span class="o">=</span>20171005
</span><span class='line'><span class="nv">$ ALBUM_ID</span><span class="o">=</span><span class="sb">`</span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{ &quot;album&quot;: { &quot;title&quot;:&quot;&#39;</span><span class="nv">$DIR</span><span class="s1">&#39;&quot; } }&#39;</span> https://photoslibrary.googleapis.com/v1/albums|jq -r .id<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ MEDIA_ITEMS</span><span class="o">=</span><span class="sb">`</span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;pageSize&quot;:&quot;100&quot;,&quot;filters&quot;:{&quot;dateFilter&quot;:{&quot;dates&quot;:[{&quot;year&quot;:2017,&quot;month&quot;:10,&quot;day&quot;:5}]}}}&#39;</span> https://photoslibrary.googleapis.com/v1/mediaItems:search|jq .mediaItems<span class="o">[]</span>.id|sed -z <span class="s1">&#39;s/\n/,/g&#39;</span><span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;mediaItemIds&quot;:[&#39;</span><span class="nv">$MEDIA_ITEMS</span><span class="s1">&#39;]}&#39;</span> https://photoslibrary.googleapis.com/v1/albums/<span class="k">${</span><span class="nv">ALBUM_ID</span><span class="k">}</span>:batchAddMediaItems
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;error&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;code&quot;</span>: 400,
</span><span class='line'>    <span class="s2">&quot;message&quot;</span>: <span class="s2">&quot;Request contains an invalid media item id.&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;status&quot;</span>: <span class="s2">&quot;INVALID_ARGUMENT&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
なら既存のものは手でやればいいではないか?
やってみたのですが、微妙に手元のfilesと数が合わなかったりするので、困難です。手元に3282枚あってGoogle PhotosのAlbumに3281枚あった時、どうやって差分をあぶり出したらいいのですか?! 全downloadはなしで。もう一つでは、手元に5221枚、Google Photosに5230枚と増えてます! Manuallyでは限界を感じました。</p>
<h2>Album中の全file名取得</h2>
<p>自己解決しました。
<code>NEXT_PAGE_TOKEN</code>あると面倒くさいんですけど、これで何とか。</p>
<h3>Album探し</h3>
<p>最初のpageに目的のalbumがあるかをこれ↓で探す</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -s -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> <span class="s1">&#39;https://photoslibrary.googleapis.com/v1/albums?pageSize=50&#39;</span>|jq -r .albums<span class="o">[]</span>.title,.nextPageToken
</span></code></pre></td></tr></table></div></figure>
なければ次のpageへ。</p>
<p>``<code>
見付かれば、</code>ALBUM_ID`を同定。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -s -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> <span class="s1">&#39;https://photoslibrary.googleapis.com/v1/albums?pageSize=50&amp;pageToken=Ck...&#39;</span>|jq -r .albums<span class="o">[]</span>.title,.nextPageToken
</span></code></pre></td></tr></table></div></figure>
<p>そうしてから徐に、
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -s -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> <span class="s1">&#39;https://photoslibrary.googleapis.com/v1/albums?pageSize=50&amp;pageToken=Ck...&#39;</span>|grep -1 20080318
</span><span class='line'>      <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;ADI...&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;title&quot;</span>: <span class="s2">&quot;20080318&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;productUrl&quot;</span>: <span class="s2">&quot;https://photos.google.com/lr/album/ADI...&quot;</span>,
</span></code></pre></td></tr></table></div></figure>
<p>その後、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">ALBUM_ID</span><span class="o">=</span>...
</span><span class='line'><span class="nv">NEXT_PAGE_TOKEN</span><span class="o">=</span><span class="sb">`</span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;pageSize&quot;:&quot;100&quot;,&quot;albumId&quot;:&quot;&#39;</span><span class="nv">$ALBUM_ID</span><span class="s1">&#39;&quot;}&#39;</span> https://photoslibrary.googleapis.com/v1/mediaItems:search|jq -r <span class="s1">&#39;.mediaItems[].filename,.nextPageToken&#39;</span>|tee /tmp/files.txt|tail -1<span class="sb">`</span>;<span class="k">while</span> <span class="o">[</span> <span class="s2">&quot;$NEXT_PAGE_TOKEN&quot;</span> !<span class="o">=</span> null <span class="o">]</span>;<span class="k">do </span><span class="nv">NEXT_PAGE_TOKEN</span><span class="o">=</span><span class="sb">`</span>curl -s -X POST -H <span class="s2">&quot;Authorization: Bearer $ACCESS_TOKEN&quot;</span> -H <span class="s2">&quot;Content-type: application/json&quot;</span> -d <span class="s1">&#39;{&quot;pageSize&quot;:&quot;100&quot;,&quot;albumId&quot;:&quot;&#39;</span><span class="nv">$ALBUM_ID</span><span class="s1">&#39;&quot;,&quot;pageToken&quot;:&quot;&#39;</span><span class="nv">$NEXT_PAGE_TOKEN</span><span class="s1">&#39;&quot;}&#39;</span> https://photoslibrary.googleapis.com/v1/mediaItems:search|jq -r <span class="s1">&#39;.mediaItems[].filename,.nextPageToken&#39;</span>|tee -a /tmp/files.txt|tail -1<span class="sb">`</span>;<span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>
<p>で取り出せます。</p>
<p>それで比較(<code>diff &lt;(cd ~/photo;ls .../img_*) &lt;(grep -vE -e '.{300,}' -e null /tmp/files.txt)</code>)したところ、足りないものはわかりました。
ですが、何故かAPIで取ると3282個なのに
「コンテンツ 3283個」と表示されていたり...
よく精査すると、なるほど、Google Photosが勝手に?作った、
<a href="https://photos.google.com/assistant">アシスタント</a>にある
<code>MOVIE.mp4</code>(ムービー)や<code>...-EFFECTS.jpg</code>(スタイルを適用した写真)、
<code>...-PANO.jpg</code>(パノラマ)が含まれているから?
いや、一つ(5230個と表示)はそれが原因で9個多く数が表示されていたのですが、
もう一つ、「コンテンツ 3283個」は、APIで取得するといくら見ても
3282個しかない、自動生成物もない、です。謎です。</p>
<p>それと、EnrichmentとかいってTextやLocationとMapを入れられるんですけど、
それらを取得する術がなく、Textに書いたことを検索するとかも出来ず。
GUIから入れてみましたが、要素を追加する度にいちいち先頭に戻される、
移動すると他の要素もどこかに行ってしまうことがある、
等何だかなぁ、というものでした。
Googleならこんなもんじゃないだろー!</p>
]]></content></entry></feed>