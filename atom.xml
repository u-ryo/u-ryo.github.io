<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-09-04T14:29:05+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[How Secure Is My Password]]></title><link href="http://u-ryo.github.io//blog/2018/09/04/how-secure-is-my-password/"/><updated>2018-09-04T14:29:05+09:00</updated><id>/blog/2018/09/04/how-secure-is-my-password/</id><content type="html"><![CDATA[<p><a href="http://www.usupi.org/sysad/186.html">いますぐ実践! Linux システム管理 / Vol.186</a>に載ってたものなので、何を今更、ですが。</p>
<p><a href="http://howsecureismypassword.net/">How Secure Is My Password?</a>、
自分の常用passwordは1 Dayでした。
色々試してみると、
「長いことはいいことだ(10文字以上はないと)」
「最後に大文字アルファベットでも足すと劇的に良くなる」
みたいです。
でも多分これ、localにhashか何かがあってbrute forceを試せる、
という前提での解読時間かなと思います。
今はjs fileはugrifyされてて具体的にどう計算しているのかlogic(簡単には)追えないです。</p>
]]></content></entry><entry><title type="html"><![CDATA[Extract recent initramfs]]></title><link href="http://u-ryo.github.io//blog/2018/09/04/extract-recent-initramfs/"/><updated>2018-09-04T12:01:55+09:00</updated><id>/blog/2018/09/04/extract-recent-initramfs/</id><content type="html"><![CDATA[<p>よその会社に用意して貰ったLinux(ubuntu)のSSDがあって、
ちょっとhappy hackingしてみようと。
<code>initramfs</code>を展開しようと<code>zcat initrd.img|cpio -di</code>とかってやってみたところ、
「not in gzip format」と。
<code>file initrd.img</code>とすると「ASCII cpio archive (SVR4 with no CRC)」です。
圧縮fileじゃないのかとそのまま<code>cpio -id</code>しても、
何か<code>kernel/x86/microcode/AuthenticAMD.bin</code>しか出て来ません。
えー!? どうなってんのー?!
調べてみると、<code>lsinitramfs</code>というのでlistは出るらしい、です。
試してみると、確かに色々入ってそうです。
なのに出て来ません。えー。
<a href="http://neocat.hatenablog.com/entry/20150730/1438273548">FedoraやCentOS 6/7、RHEL 6/7のinitramfsを展開する</a>や<a href="http://nopipi.hatenablog.com/entry/2015/05/06/235615">RHEL7 initramfsの展開方法</a>を見ると、
きょうびの<code>initramfs</code>は違うんですねー。
びっくりです。</p>
<p>ちなみに、<code>skipcpio</code>は<code>apt install dracut</code>で入ります。
使うには、<code>/usr/lib/dracut/skipcpio</code>とfull path指定が必要です。
<code>binwalk</code>は<code>apt install binwalk</code>でした。</p>
<p>早速試したところ、上手く行くもの(<code>/boot/initrd.img-4.15.0-33-generic</code>)もありましたが、
下記のように上手く行かないものもありました。
そして、目的のものは上手く行かない方のものでした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ /usr/lib/dracut/skipcpio ~/initrd.img-4.15.0-33-generic|file -
</span><span class='line'>/dev/stdin: ASCII cpio archive (SVR4 with no CRC)
</span></code></pre></td></tr></table></div></figure>
<p><code>binwalk</code>で見てみると、全く同じ位置にあるのに。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ binwalk ~/initrd.img-4.15.0-33-generic
</span><span class='line'>
</span><span class='line'>DECIMAL       HEXADECIMAL     DESCRIPTION
</span><span class='line'>--------------------------------------------------------------------------------
</span><span class='line'>0             0x0             ASCII cpio archive (SVR4 with no CRC), file name: &quot;.&quot;, file name length: &quot;0x00000002&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>112           0x70            ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel&quot;, file name length: &quot;0x00000007&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>232           0xE8            ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>356           0x164           ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode&quot;, file name length: &quot;0x00000015&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>488           0x1E8           ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode/AuthenticAMD.bin&quot;, file name length: &quot;0x00000026&quot;, file size: &quot;0x00006B2A&quot;
</span><span class='line'>28072         0x6DA8          ASCII cpio archive (SVR4 with no CRC), file name: &quot;TRAILER!!!&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>28672         0x7000          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel&quot;, file name length: &quot;0x00000007&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>28792         0x7078          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>28916         0x70F4          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode&quot;, file name length: &quot;0x00000015&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>29048         0x7178          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode/.enuineIntel.align.0123456789abc&quot;, file name length: &quot;0x00000036&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>29212         0x721C          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode/GenuineIntel.bin&quot;, file name length: &quot;0x00000026&quot;, file size: &quot;0x00180C00&quot;
</span><span class='line'>1605296       0x187EB0        ASCII cpio archive (SVR4 with no CRC), file name: &quot;TRAILER!!!&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>1605632       0x188000        gzip compressed data, from Unix, last modified: 2018-08-30 06:15:36
</span><span class='line'>
</span><span class='line'>$ binwalk /boot/initrd.img-4.15.0-33-generic
</span><span class='line'>
</span><span class='line'>DECIMAL       HEXADECIMAL     DESCRIPTION
</span><span class='line'>--------------------------------------------------------------------------------
</span><span class='line'>0             0x0             ASCII cpio archive (SVR4 with no CRC), file name: &quot;.&quot;, file name length: &quot;0x00000002&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>112           0x70            ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel&quot;, file name length: &quot;0x00000007&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>232           0xE8            ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>356           0x164           ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode&quot;, file name length: &quot;0x00000015&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>488           0x1E8           ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode/AuthenticAMD.bin&quot;, file name length: &quot;0x00000026&quot;, file size: &quot;0x00006B2A&quot;
</span><span class='line'>28072         0x6DA8          ASCII cpio archive (SVR4 with no CRC), file name: &quot;TRAILER!!!&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>28672         0x7000          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel&quot;, file name length: &quot;0x00000007&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>28792         0x7078          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>28916         0x70F4          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode&quot;, file name length: &quot;0x00000015&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>29048         0x7178          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode/.enuineIntel.align.0123456789abc&quot;, file name length: &quot;0x00000036&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>29212         0x721C          ASCII cpio archive (SVR4 with no CRC), file name: &quot;kernel/x86/microcode/GenuineIntel.bin&quot;, file name length: &quot;0x00000026&quot;, file size: &quot;0x00180C00&quot;
</span><span class='line'>1605296       0x187EB0        ASCII cpio archive (SVR4 with no CRC), file name: &quot;TRAILER!!!&quot;, file name length: &quot;0x0000000B&quot;, file size: &quot;0x00000000&quot;
</span><span class='line'>1605632       0x188000        gzip compressed data, from Unix, last modified: 2018-08-28 05:01:31
</span></code></pre></td></tr></table></div></figure>
<p><code>TRAILER</code>が2つあるので、<code>skipcpio</code>を2回かけてみてもダメでした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ /usr/lib/dracut/skipcpio ~/initrd.img-4.15.0-33-generic|/usr/lib/dracut/skipcpio /dev/stdin|file -
</span><span class='line'>/dev/stdin: data
</span></code></pre></td></tr></table></div></figure>
<p>仕方ないので、<code>binwalk</code>で得られたbyte数を自分でskipしてやる手法で試すと、上手く解凍されました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ tail -c +1605632 ~/initrd.img-4.15.0-33-generic|file -
</span><span class='line'>/dev/stdin: data
</span><span class='line'>$ tail -c +1605633 ~/initrd.img-4.15.0-33-generic|file -
</span><span class='line'>/dev/stdin: gzip compressed data, last modified: Thu Aug 30 06:15:36 2018, from Unix
</span><span class='line'>$ tail -c +1605633 ~/initrd.img-4.15.0-33-generic|zcat|cpio -id
</span></code></pre></td></tr></table></div></figure>
<p><code>binwalk</code>で得られた1605632ではダメで、1605633でOKでした。
上記サイトには「得られたbyte数以降を<code>dd</code>で書き出せ」とかありましたが、
別にそんなことしなくても<code>tail -c +NNN</code>で十分です。</p>
]]></content></entry><entry><title type="html"><![CDATA[MySQL on JHipster]]></title><link href="http://u-ryo.github.io//blog/2018/09/02/mysql-on-jhipster/"/><updated>2018-09-04T11:17:10+09:00</updated><id>/blog/2018/09/02/mysql-on-jhipster/</id><content type="html"><![CDATA[<p>これはもう<a href="https://www.jhipster.tech/development/#using-mysql-mariadb-or-postgresql-in-development">書いてあります</a>けど、
実際、これまでdevだったのをprod環境にして、
Timastampを含むTableのあるMySQLをbackendに据えてみると、
<code>-Pdev</code>環境ではうまく立ち上がっていたのに、
<code>-Pprod</code>だと<code>ERROR 1067 (42000): Invalid default value for 'create_date'</code>
とかって言われて立ち上がりません。
エラーに直面すると、前書いてあったことなんて忘れてて、
改めて探し回っちゃいました。
結局、ですね、ubuntuの場合は、
<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>の<code>[mysqld]</code>のところに
以下を加えてrestartすれば済みます。特に2行目ですね。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>character-set-server=utf8
</span><span class='line'>explicit_defaults_for_timestamp=on
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[Communication between components on Angular]]></title><link href="http://u-ryo.github.io//blog/2018/09/02/communication-between-components-on-angular/"/><updated>2018-09-04T11:17:10+09:00</updated><id>/blog/2018/09/02/communication-between-components-on-angular/</id><content type="html"><![CDATA[<p><a href="https://angular.io/">Angular</a>でcomponent間通信しようと思いました。
これまで一つにしていたcontrol formとそれをはんえいするimage viewを
別componentにして、その間で情報伝達したり、
あるtimingで他方のfunctionを叩いたり、
とかしたくなるわけですね。
<a href="https://qiita.com/gambare/items/b75f9c9dc997ae45c092">コンポーネント間のデータ授受メモ</a>とか<a href="https://christina04.hatenablog.com/entry/2017/01/19/041235">Angular2でComponentをまたがったデータのやり取り</a>とか<a href="https://st40.xyz/one-run/article/200/">コンポーネント間でデータを共有する</a>とかちょっと調べればもう色々書いてあって、
親子だとどうとか兄弟間だとこうとかあるわけです。
今回は兄弟間だったので間を取り持つService作って兄から書いて弟で読むとかその逆とかやってたんですが、
<a href="https://www.npmjs.com/package/ngx-store">ngx-store</a>の<code>@SharedStorage</code>使えば一発ですよそんなの。
最初から知ってればもっともっと簡単に済んだのに。
<a href="https://www.jhipster.tech/">JHipster</a>では
<a href="https://www.npmjs.com/package/ngx-webstorage">ngx-webstorage</a>が
予め入っているのでこれを使えればいいんでしょうけど、
<code>this.$sessionStorage.store('key', 'value')</code>して
<code>this.$sessionStorage.retrieve('key')</code>取り出すというように、
<code>ngx-store</code>と比べてちょっと面倒です。
っていうか、JHipsterでも<code>ngx-store</code>使ってくれればよかったのに。
Local Storageにも保存できますし、ってそれはどちらも同じですが、
<code>ngx-store</code>の方は特にstore/retrieveとかしなくても、
意識しなくても変数に<code>@SharedStorage</code>とか<code>@LocalStorage</code>とすれば
他のcomponentでも変更された値がそのまま参照できるというスグレモノです。
全部これ使えばいーんですよ。</p>
]]></content></entry><entry><title type="html"><![CDATA[Logging on Angular]]></title><link href="http://u-ryo.github.io//blog/2018/09/02/logging-on-angular/"/><updated>2018-09-04T11:17:10+09:00</updated><id>/blog/2018/09/02/logging-on-angular/</id><content type="html"><![CDATA[<p>Angularでloggingをしようと思いました。
<a href="https://www.slf4j.org/">slf4j(Simple Logging Facade 4 Java)</a>みたいなのないかなー、って思って<a href="https://www.npmjs.com/package/ng2-logger">ng2-logger</a>使いました。
まぁ良かったんですけど、
logのlevel指定が、
指定level以下、とかではなく、
それぞれ指定しなくてはならないというのがちょっと不便です。
何でそんな設計にしたのかなー。
例えば、<code>Log.create('books', Level.WARN)</code>とすれば<code>Level.ERROR</code>も
出てくるというわけではなく、明示的にそれぞれ
<code>Log.create('books', Level.ERROR, Level.WARN)</code>と指定しなくてはならない、
というわけです。
<code>Log.setProductionMode()</code>で全てのlogは出て来なくなります。
これは、階層関係なくどこかに1箇所書いてあれば効くようです。
使う時はフツーに<code>log.d('object',obj)</code>と<code>i</code>、<code>w</code>ですが、
errorだけは<code>log.er('object',obj)</code>なので注意です。
あと出てくるlogの見た目はcolorfulできれいです。</p>
]]></content></entry><entry><title type="html"><![CDATA[Dont use the same image file in css and manifest.webapp on webpack]]></title><link href="http://u-ryo.github.io//blog/2018/09/01/dont-use-the-same-image-file-in-css-and-manifest-webapp-on-webpack/"/><updated>2018-09-04T11:17:10+09:00</updated><id>/blog/2018/09/01/dont-use-the-same-image-file-in-css-and-manifest-webapp-on-webpack/</id><content type="html"><![CDATA[<p>notificationに使っていたlogicを変えたいと思って、
アプリとしてinstallしていたPWAを一旦uninstallしてから
browserでそのpageを読んでも、「ホーム画面に追加」が現れなかったんですね。
何でんだろー、一旦uninstallしちゃうとダメなのかな?
いやそんなことないだろうな、とは思いつつも
明確に「uninstallしても大丈夫」だと書いてあるところもなく、
心配だったんです。
「ホーム画面に追加」が出ないのは何が悪いのか、わからないんですよね。</p>
<p>「ホーム画面に追加」が出る条件、というのがあって、
<a href="https://developers.google.com/web/fundamentals/app-install-banners/?hl=ja">公式ページ(ウェブアプリのインストール バナー)</a>によると、</p>
<ol>
<li><code>short_name</code>(ホーム画面で使用)</li>
<li><code>name</code>(バナーで使用)</li>
<li>192x192のpngアイコン(アイコンの宣言にはMIMEタイプ<code>image/png</code>の指定が必要)</li>
<li>読み込み先の<code>start_url</code></li>
</ol>
<p>というんですが、
<a href="https://qiita.com/narikei/items/4240f03542f29e313989">「ホーム画面に追加」からはじめる『PWA(Service Worker)』</a>には192のpngの話はなく、
また<a href="https://amymd.hatenablog.com/entry/2017/10/12/001612">【3ステップではじめる】PWAによる「ホーム画面に追加」バナーの実装</a>では<code>fetch</code> eventの定義が必要だとあります。
こちとら、一度は出来たわけだし、実際には
<a href="https://www.bunkei-programmer.net/entry/2018/04/09/125015">PWAで「ホーム画面に追加」が表示されない時に確認する事</a>にある「manifest.json内のアイコン画像が404である」といったところが一番多いんじゃないでしょうか。
この人もそうだったといいますし、ぼくもそうでした。</p>
<p>ただ、その原因は困ったものでした。
webpackでhash化された名前の付いたpng fileが壊れていたからです。
とても悩みました。調べてもそんな事例、出てきません。
色々試行錯誤した挙句わかったのは、
<code>css</code>内と<code>manifest.webapp</code>(<code>manifest.json</code>)内で
指定しているpngが同じだと、
webpackがpng fileをhash名化する時にバッティングするようで、
生成後のpng fileはviewerで見えないし、
<code>file</code>コマンドで見ると「data」とか出るし。
<code>css</code>でのpng fileを<code>../../../../../../webpack/logo-jhipster.png</code>
といったようにして<code>manifest.webpack</code>と別物にすると、うまく行きました。
<code>./src/...</code>以下でなくてもいいんですね!</p>
]]></content></entry><entry><title type="html"><![CDATA[illegal forward reference]]></title><link href="http://u-ryo.github.io//blog/2018/08/30/illegal-forward-reference/"/><updated>2018-08-30T10:20:35+09:00</updated><id>/blog/2018/08/30/illegal-forward-reference/</id><content type="html"><![CDATA[<p>Javaの珍しいcompile error messageに、
<code>illegal forward reference</code>というのがあります。
これを題材に、後輩氏に課題を出しました。</p>
<p>最も単純な形にして挙例すると、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import java.util.function.Function;
</span><span class='line'>class Test {
</span><span class='line'>    Function f = new Function() {
</span><span class='line'>            @Override
</span><span class='line'>            public Object apply(Object t) {
</span><span class='line'>                return o;
</span><span class='line'>            }
</span><span class='line'>        };
</span><span class='line'>    Object o;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>↑これをlambda式に直しなさい、といったようなものです。</p>
<p>実はこれ、単純にlambda式にすると、compile errorになります。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>class Test {
</span><span class='line'>    java.util.function.Function f = t -&gt; o;
</span><span class='line'>    Object o;
</span><span class='line'>}
</span><span class='line'>$ javac /tmp/Test.java
</span><span class='line'>/tmp/Test.java:2: error: illegal forward reference
</span><span class='line'>    java.util.function.Function f = t -&gt; o;
</span><span class='line'>                                         ^
</span><span class='line'>1 error
</span></code></pre></td></tr></table></div></figure>
<p>error messageからしてどう直せばいいかは自明かと思ったんですが、
英語が不自由な後輩氏の1日弱かけた答えはこうでした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>class Test {
</span><span class='line'>    java.util.function.Function f = t -&gt; o;
</span><span class='line'>    static Object o;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>流石に「何でもかんでも<code>static</code>にすればいいってもんじゃない」
ってことはわかってて、「これがFA」とまでは言ってませんでしたけど、
<a href="https://stackoverflow.com/questions/1746758/illegal-forward-reference-in-java">ここ</a>をみて、
「<code>static</code>にすればいいんじゃね、って書いてある」と思ったんだそう。
そうは書いてないんだけどなー。</p>
<p>でも、こういう回答は想像してなくて、新鮮でした。</p>
<p>そもそもdeclarationが後ろに書いてあったこと自体がおかしい、とは思いますけどね。
そういう「色々おかしい」ソフトを直しています。</p>
]]></content></entry><entry><title type="html"><![CDATA[service worker on JHipster]]></title><link href="http://u-ryo.github.io//blog/2018/08/28/service-worker-on-jhipster/"/><updated>2018-08-28T14:16:41+09:00</updated><id>/blog/2018/08/28/service-worker-on-jhipster/</id><content type="html"><![CDATA[<p><a href="https://jhipster.tech">JHipster</a>でService WorkerでWeb Pushを、
と思っていて、<a href="https://angular.io/">Angular</a>だから、
<a href="https://u-ryo.github.io/blog/2018/03/19/push-notification-on-angular5/">前やった</a>ように
<code>app.modules.ts</code>で<code>ServiceWorkerModule.register('./service-worker.js',...);</code>してから<code>@angular/service-worker</code>で<code>SwPush</code>をinjectして、
って思ってたんですが、違うんですね。
JHipsterでは<a href="https://developers.google.com/web/tools/workbox/">workbox</a>でService Worker使うようになってるんですね予め。
確かに<code>index.html</code>で<code>service-worker.js</code>を有効にして挙動を見てると、
cachingは綺麗に行っている様子です。
えーでも調べてみると、workboxってWeb Pushはないじゃーないですかー。</p>
<blockquote><p>特に私の知っている範囲ではworkboxはプッシュ通知のロジックを作ってくれないので、そこは自分で書いてやる必要があります。
<a href="https://qiita.com/nazonohito51/items/32b61cabdac8b24769bd">ServiceWorkerを簡単に書けるworkbox-swの使い方</a></p>
</blockquote>
<p>しかも、自分のcodeとmergeする、
即ち<code>workboxPlugin(...)</code>に<code>swSrc:</code>を追加すると、
<code>generateSW</code>が使えず自分で書かないといけないの!? ですか?
いやー、jhipsterで生成される<code>service-worker.js</code>とか見ると、
色んなfilesにhash値?が付与されているから、
これを自分で作るというのはあり得ないでしょー。
どーしたらいーのー?!</p>
<p>と、途方に暮れました。</p>
<p>workboxを捨ててAngularのSwPushにする?
いやー、でもjhipsterでのbuildでは<code>ng</code>実行されないので、
いくら<code>.angular-cli.json</code>に<code>"serviceWorker": true</code>と書いても効かないんですよー。
Angularのservice workerは生成されないわけですね。</p>
<p>jhipsterで生成された<code>build/www/service-worker.js</code>を見ていると、
上部のコメントに、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> * The rest of the code is auto-generated. Please don&#39;t update this file
</span><span class='line'> * directly; instead, make changes to your Workbox build configuration
</span><span class='line'> * and re-run your build process.
</span><span class='line'> * See https://goo.gl/2aRDsh
</span></code></pre></td></tr></table></div></figure>
<p>とあります。言われるままに<a href="https://goo.gl/2aRDsh">そのURL</a>を見てみると、
<code>importScripts</code>というoptionがあることがわかりました。
これを指定するとどうなるのかなー、試してみます。
指定する場所は、webpackでworkboxのservice worker生成をやっているので、
<code>webpack/webpack.prod.js</code>になります。
それの最下段、<code>new WorkboxPlugin.GenerateSW({...})</code>の中に
<code>importScripts: ['push-notifications.js']</code>と書いてみると、
自動生成された<code>build/www/service-worker.js</code>中に、
<code>importScripts("push-notifications.js",...)</code>と出ます。
なるほど。
ではこの<code>push-notifications.js</code>というのを作ってwww root folderに置き、
そこにpush notificationのlogicを書いておけばいいんじゃーん。
でも、基本的には全てのfile名はhash化?されてしまいます。
どうやって名前をhash化されないようにするの?!
<code>favicon.ico</code>等の例から手探りで探し当てました。
<code>webpack/webpack.common.js</code>の<code>new CopyWebpackPlugin([..])</code>に
書いておけばいーんですね。なるほど。</p>
<p>結局要するにworkboxの<code>importScripts</code>を使うということで、具体的には、</p>
<ol>
<li><code>src/main/webapp/push-notification.js</code>にWeb Push通知時の処理<code>addEventListener('push', function(event) {...});</code>と通知をclickした時の処理<code>addEventListener('notificationclick', function(event) {...});</code>を書いておく</li>
<li><code>webpack/webpack.prod.js</code>の<code>new WorkboxPlugin.GenerateSW({...})</code>に<code>importScripts: ['push-notifications.js']</code>を書く</li>
<li><code>webpack/webpack.common.js</code>の<code>new CopyWebpackPlugin([..])</code>に<code>{ from: './src/main/webapp/push-notifications.js', to: 'push-notifications.js' },</code>を書く</li>
</ol>
<p>で目出度くJHipster application上でのWeb Push通知が出来ました。</p>
<p>尚、通知の許可を求める処理やendpoint、auth、publicKeyを求める処理では、
Angularの<code>SwPush</code>を使うことが出来ます。
JavaScriptでゴリゴリ書かなくても<code>this.swPush.requestSubscription()</code>だけで済むのでラクです。</p>
]]></content></entry><entry><title type="html"><![CDATA[service worker in private browsing mode]]></title><link href="http://u-ryo.github.io//blog/2018/08/28/service-worker-in-private-browsing-mode/"/><updated>2018-08-28T10:23:45+09:00</updated><id>/blog/2018/08/28/service-worker-in-private-browsing-mode/</id><content type="html"><![CDATA[<p>Service WorkerでWeb Pushを色々試していて、
違うaccountでloginしてみようとprivate browsing mode用いると、
何か出来ないんですねこれ。
<code>https</code>か<code>localhost</code>じゃないとダメ、というのは知ってましたが。
気を付けましょう。
以上。</p>
<blockquote><p>Firefox ではプライベートブラウジングモードでサービスワーカー API を利用することはできません。
<a href="https://developer.mozilla.org/ja/docs/Web/API/ServiceWorker_API#Service_worker_concepts_and_usage">サービスワーカーの概念と使い方</a></p>
</blockquote>
<p>chromeはsecret mode(private window)でのService Workerも大丈夫、のようですか。</p>
]]></content></entry><entry><title type="html"><![CDATA[Spring Auth and JWT behind the reverse proxy]]></title><link href="http://u-ryo.github.io//blog/2018/08/27/spring-auth-and-jwt-behind-the-reverse-proxy/"/><updated>2018-08-28T10:08:27+09:00</updated><id>/blog/2018/08/27/spring-auth-and-jwt-behind-the-reverse-proxy/</id><content type="html"><![CDATA[<p>JHipsterのSpring Authなapplicationを
httpsのreverse proxy(nginx)の後ろに置いて、
GoogleのOAuth2でJWTな認証をしようとしました。
当然、backend serverからはGoogle APIに自分のhost名でaccessするような
URLを返してしまい、Google APIから戻ってきたところでJWT認証は弾かれます。
backend serverはfrontend serverの名前を知らないんですから、
そりゃあ当然です。
こういうreverse proxyの後ろにbackend server置いてOAuth2 + JWTなんて
そもそもダメなの? 何とかならないの?
と調べてみると、
<a href="https://stackoverflow.com/questions/31834278/spring-boot-and-oauth2-redirect-url-over-reverse-proxy">Spring Boot and OAuth2: redirect url over reverse proxy</a>に、
reverse proxy側で<code>X-Forwarded-Port</code>とかのproxy用HTTP Response Headerを設定し、
Spring application側で<code>server.use-forward-headers=true</code>にすればいいよ、
とあったので、
じゃぁnginxではどうやるのだろうと調べると、
<a href="https://qiita.com/HeRo/items/7063b86b5e8a2efde0f4">Nginx のリバースプロキシ設定のメモ</a>にありました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>server {
</span><span class='line'>  listen 80;
</span><span class='line'>  server_name hoge.com;
</span><span class='line'>
</span><span class='line'>  location / {
</span><span class='line'>    proxy_set_header X-Real-IP $remote_addr;
</span><span class='line'>    index index.html index.htm;
</span><span class='line'>    proxy_set_header X-Forwarded-Proto $scheme;
</span><span class='line'>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
</span><span class='line'>    proxy_set_header Host $http_host;
</span><span class='line'>    proxy_redirect off;
</span><span class='line'>    proxy_pass http://127.0.0.1:3000;
</span><span class='line'>  }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>この通りやってみると、
何故かGoogle APIには<code>http://proxy-server/...</code>で渡っており、
じゃぁっていうんで<code>proxy_set_header X-Forwarded-Proto https;</code>
とベタ書きしてみてもダメで、
うーんとか思っていると、
<a href="https://blog.akagi.jp/archives/3883.html">nginx でリバースプロキシするときの Tips</a>に<code>off</code>じゃなくて<code>proxy_redirect http:// https://;</code>という記述があったので、
試してみると、上手く行きました。
あーちなみに、<code>proxy_set_header X-Forwarded-Proto https;</code>も
ベタ書きじゃないとダメでした。
結局うちの場合は、以下の通りになりました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>server {
</span><span class='line'>        listen 80 default_server;
</span><span class='line'>        listen [::]:80 default_server;
</span><span class='line'>
</span><span class='line'>        # Everything is a 404
</span><span class='line'>        location / {
</span><span class='line'>                proxy_set_header X-Real-IP $remote_addr;
</span><span class='line'>                proxy_set_header X-Forwarded-Proto https;
</span><span class='line'>                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
</span><span class='line'>                proxy_set_header Host $http_host;
</span><span class='line'>                proxy_redirect http:// https://;
</span><span class='line'>                proxy_pass http://walt.mydns.bz:10022/;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        # You may need this to prevent return 404 recursion.
</span><span class='line'>        location = /404.html {
</span><span class='line'>                internal;
</span><span class='line'>        }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>で、<code>sudo /usr/sbin/nginx -s reload</code>です。</p>
<p>でも、これでGoogle APIから無事戻ってくるようにはなったものの、
その後「No-providerで登録」になってしまい、
まだ完成しません。
ただ、その問題は別のもののようで、一歩は進んだと思うので、記事にしました。</p>
<p>↑その「No-providerで登録」になってしまうのは、
backendで以下のようなerrorが出ていて。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>javax.validation.ConstraintViolationException: Validation failed for classes [bz.mydns.walt.canmatch.domain.User] during persist time for groups [javax.validation.groups.Default, ]
</span><span class='line'>List of constraint violations:[
</span><span class='line'>        ConstraintViolationImpl{interpolatedMessage=&#39;must match &quot;^[_&#39;.@A-Za-z0-9-]*$&quot;&#39;, propertyPath=login, rootBeanClass=class bz.mydns.walt.canmatch.domain.User, messageTemplate=&#39;{javax.validation.constraints.Pattern.message}&#39;}
</span><span class='line'>]
</span><span class='line'>        at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
</span><span class='line'>        at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
</span><span class='line'>        at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:197)
</span><span class='line'>        at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)
</span><span class='line'>        at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:626)
</span><span class='line'>   :
</span><span class='line'>   :
</span></code></pre></td></tr></table></div></figure>
<p>何なんでしょうね。
これは、account mail addressが「w.disney@somecompany.co.jp」みたいな
「.」が入るものなんですが、それがいけないとかなのでしょうか。
というのも、フツーの「gepetto@gmail.com」みたいなmail accountなら
全く同じcodeで何の問題もなく入れるのです。
「must match」の対象が何なのか、よく分かりません。</p>
]]></content></entry><entry><title type="html"><![CDATA[Groovy Grape fails]]></title><link href="http://u-ryo.github.io//blog/2018/08/27/groovy-grape-fails/"/><updated>2018-08-27T14:28:16+09:00</updated><id>/blog/2018/08/27/groovy-grape-fails/</id><content type="html"><![CDATA[<p>時々、「全く同じgroovy scriptなのにあるマシンでだけ
起動に失敗する」ことがあります。
error messageはcaseによりますが、例えば直近では以下のようなものでした。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ groovy webpush.groovy
</span><span class='line'>org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
</span><span class='line'>General error during conversion: Error grabbing Grapes -- [download failed: com.google.guava#guava;19.0!guava.jar(bundle)]
</span><span class='line'>
</span><span class='line'>java.lang.RuntimeException: Error grabbing Grapes -- [download failed: com.google.guava#guava;19.0!guava.jar(bundle)]
</span><span class='line'>        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
</span><span class='line'>        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
</span><span class='line'>        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
</span><span class='line'>        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
</span><span class='line'>        at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
</span><span class='line'>        at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
</span><span class='line'>        at groovy.grape.GrapeIvy.getDependencies(GrapeIvy.groovy:464)
</span><span class='line'>   :
</span><span class='line'>   :
</span></code></pre></td></tr></table></div></figure>
<p>要するに「guava-19.0.jarのdownloadに失敗した」と。
<code>~/.groovy/grapes/com.google.guava/guava/</code>を見ると、
確かに他のlibrariesのように<code>jars</code> directoryがありませんし、
当然jar fileもありません。
じゃぁっていうんで、自分で<code>guava-19.0.jar</code>を落としてきて、
<code>jars/</code>作ってその下に置いても、同じ結果です。
Groovyが悪いのかJavaが悪いのかGrapeが悪いのか設定が悪いのか
versionが悪いのか、何なのか全然分かりません。
普通に動くマシンでのJava/Groovyとversionを合わせてもダメ、
Grapeする各libraryのversionを上げてもダメ、
Guava 19.0を明示的に<code>@Grab</code>に入れてもダメ、
<a href="https://stackoverflow.com/questions/16871792/groovy-grab-download-failed">Groovy - Grab - download failed</a>を見て<code>~/.groovy</code>以下や<code>~/.groovy/grapes</code>を削除してもダメ、
と途方に暮れました。
いつもは面倒なので諦めて、
その動くマシンでやっていつのですけれども、
今回は粘って原因究明してみました。</p>
<p>結局、以下のどちらかの方法で立ち上がるようになりました。</p>
<ol>
<li><code>~/.groovy/grapes/com.google.guava/guava/jars</code>ではなく<code>~/.groovy/grapes/com.google.guava/guava/bundles</code>にして、その下に落としてきた<code>guava-19.0.jar</code>を置く</li>
<li>他の多くのlibrariesと同様に<code>~/.groovy/grapes/com.google.guava/guava/jars</code>に落としてきた<code>guava-19.0.jar</code>を置き、<code>~/.groovy/grapes/com.google.guava/guava/ivy-19.0.xml</code>の<code>&lt;publications&gt;</code>下の<code>&lt;artifact name="guava" type="bundle" ext="jar" conf="master"/&gt;</code>の<code>type</code> attributeを<code>bundle</code>から<code>jar</code>にする</li>
</ol>
<p>上手く行っていたマシンでは、
<code>~/.groovy/grapes/com.google.guava/guava/bundles</code>が出来ており、
その下に<code>guava-19.0.jar</code>もフツーにありました。
上手く行かないマシンではなぜ<code>bundles</code>が出来ないのか、は未だ不明ですが、
取り敢えず前に進める方法がわかったので記しています。</p>
<p>あぁ、あと、このようにGrapeに失敗すると、
<code>~/.groovy/grapes/</code>以下に<code>resolved-caller-all-caller-working73.properties</code>と<code>resolved-caller-all-caller-working73.xml</code>といったfilesが澱のように溜まっていくので、都度削除した方がいいです。</p>
]]></content></entry><entry><title type="html"><![CDATA[Push Notification from command line by ntfy]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/push-notification-from-command-line-by-ntfy/"/><updated>2018-08-24T14:30:43+09:00</updated><id>/blog/2018/08/24/push-notification-from-command-line-by-ntfy/</id><content type="html"><![CDATA[<p>コマンドラインからPush通知が出来るというのでやってみました。
(<a href="https://qiita.com/kjtanaka/items/8b0c90d28909e50e4a6d">Linuxのコマンドラインやスクリプトからスマホにプッシュ通知する。（ntfyというツールの紹介）</a>)
<a href="https://www.pushbullet.com/">PushBullet</a>を使ってみました。
ChromeやFirefoxだとextension、
スマホだとアプリを入れます。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>sudo apt install python-pip
</span><span class='line'>pip install ntfy
</span></code></pre></td></tr></table></div></figure>
<p>で<code>ntfy</code>を入れ、<code>~/.ntfy.yml</code>にPushBulletのaccess_tokenを入れ、
<code>~/.local/bin/ntfy -t 'Title' send 'notification contents'</code>
とすると、送れました。
スマホ側の音とか振動は、アプリでの設定にて調整可能です。</p>
<p>最初よくわかってなかったのですが、
PushBulletのアプリを入れると、
電話帳やSMS(Short Message Service)もぶっこ抜いてくるんですね。
それと知らずにSMS送ってしまい、相手に不審がられてしまいました。</p>
]]></content></entry><entry><title type="html"><![CDATA[CSV download on Spring Boot REST]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/csv-download-on-spring-boot-rest/"/><updated>2018-08-24T14:00:35+09:00</updated><id>/blog/2018/08/24/csv-download-on-spring-boot-rest/</id><content type="html"><![CDATA[<p>Spring BootでCSV downloadを実現するのに、
<a href="https://qiita.com/yo1000/items/050c5c47daabf7a10e10">Spring MVC で CSV をダウンロードさせる</a>を参考にしました。
要するに、</p>
<ul>
<li><code>compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv"</code> in <code>build.gradle</code></li>
<li>Bean classの各fieldに<code>@JsonProperty</code></li>
<li>field出力順を制御したいので<code>@JsonPropertyOrder({"login", "filename",...})</code></li>
<li><code>CsvMapper mapper = new CsvMapper();</code>して<code>CsvSchema schema = mapper.schemaFor(SomeBean.class).withHeader();</code>して<code>return mapper.writer(schema).writeValueAsString(beans);</code></li>
<li><code>compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"</code>を入れて<code>@JsonFormat(pattern="yyyy/MM/dd HH:mm:ss")</code>して<code>mapper.registerModule(new JavaTimeModule());</code>すると、<code>ZonedDateTime</code>を如意に表示できる?<a href="http://lewandowski.io/2016/02/formatting-java-time-with-spring-boot-using-json/">Formatting Java Time with Spring Boot using JSON</a></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[fluent on Lombok]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/fluent-on-lombok/"/><updated>2018-08-24T11:23:29+09:00</updated><id>/blog/2018/08/24/fluent-on-lombok/</id><content type="html"><![CDATA[<p><a href="https://projectlombok.org">Lombok</a>で<code>@Accessors(fluent=true)</code>にしたら、
setterのみならず<a href="https://projectlombok.org/features/experimental/Accessors">getterもfluentになる</a>んですね。
<code>getXxx()</code>がないと言われて焦りました。</p>
]]></content></entry><entry><title type="html"><![CDATA[Returning XML from Spring Boot REST]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/returning-xml-from-spring-boot-rest/"/><updated>2018-08-24T11:13:28+09:00</updated><id>/blog/2018/08/24/returning-xml-from-spring-boot-rest/</id><content type="html"><![CDATA[<p>Spring BootでRESTやってて、XMLでdataを返したいと。
<a href="http://blog.rakugakibox.net/entry/2014/11/23/java_spring_boot_rest">Java: Spring Boot で REST なアプリを作ってみる</a>を見てみて、
<code>@XmlRootElement</code>を付ければいい?
ついでにtag名がclass名と違うので、
<code>@XmlRootElement(name="annotation")</code>としました。</p>
<p>あと、<a href="https://projectlombok.org">Lombok</a>を使ったせいなのか、
各fieldに<code>@XmlElement</code>を付けないと、出て来ませんでした。
そういうもの?!</p>
]]></content></entry><entry><title type="html"><![CDATA[Java8 DateTime API]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/java8-datetime-api/"/><updated>2018-08-24T12:00:05+09:00</updated><id>/blog/2018/08/24/java8-datetime-api/</id><content type="html"><![CDATA[<p>Java8から入ったDateTime API(<code>java.time</code> package)では、
<code>a.plusMinutes(3).isBefore(now)</code>
なんていう感じで日付時刻計算や比較が出来ます、
という話です。現在時刻は<code>ZonedDateTime.now(ZoneId.of("Asia/Tokyo"))</code>。
あ、<code>ZonedDateTime.now()</code>でもいいんじゃーんdefaultのtimezoneでいぃなら。</p>
<ul>
<li><a href="https://qiita.com/kurukurupapa@github/items/f55395758eba03d749c9">Javaで日時を扱う（Java8）</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1501/29/news016_2.html">Java 8日時APIの主なメソッドとフォーマット用のパターン文字の使い方 (2/6)</a></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[GroovyFX]]></title><link href="http://u-ryo.github.io//blog/2018/08/23/groovyfx/"/><updated>2018-08-27T13:53:03+09:00</updated><id>/blog/2018/08/23/groovyfx/</id><content type="html"><![CDATA[<p>SwingからJavaのGUIの座を引き継いだとはいえ、
<a href="http://jdk.java.net/11/">Java11</a>ではJava本体から削除され、
<a href="http://jdk.java.net/openjfx/">OpenJFX</a>となるJavaFX、
でもGUI作るならJavaFXだろうなぁ、
簡単に描けるようにGroovyでないかなー、
と思ったら、ありました<a href="http://groovyfx.org/">GroovyFX</a>。
早速試してみると、
本家に書いてある「Hello, World」すら以下のように失敗しました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Caught: java.lang.ExceptionInInitializerError
</span><span class='line'>java.lang.ExceptionInInitializerError
</span><span class='line'>        at java_lang_Class$isAssignableFrom$1.call(Unknown Source)
</span><span class='line'>        at com.sun.proxy.$Proxy8.onClassInfo(Unknown Source)
</span><span class='line'>Caused by: java.lang.IllegalStateException: Toolkit not initialized
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.runLater(PlatformImpl.java:273)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.runLater(PlatformImpl.java:268)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.setPlatformUserAgentStylesheet(PlatformImpl.java:550)
</span><span class='line'>        at com.sun.javafx.application.PlatformImpl.setDefaultPlatformUserAgentStylesheet(PlatformImpl.java:512)
</span><span class='line'>        at javafx.scene.control.Control.<span class="nt">&lt;clinit&gt;</span>(Control.java:87)
</span><span class='line'>        ... 2 more
</span></code></pre></td></tr></table></div></figure>
<p>色々試すと、以下のような最低限のscriptでもaaaを出力もせず
全く同じerror messageを出すので、
もうGrapeでgroovyfxを読み込んでいる時点でダメなんでしょう。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@Grab(&#39;org.groovyfx:groovyfx:8.0.0&#39;)
</span><span class='line'>import java.lang.*
</span><span class='line'>println(&#39;aaa&#39;)
</span></code></pre></td></tr></table></div></figure>
<p>scriptに何を書いても無視される(そこまで到達しない)わけなので、
事前に<code>new javafx.embed.swing.JFXPanel()</code>して
JavaFX environmentを初期化する、ということも当然効きません。
Grapeに拘っていたので、
古いversion(<code>@Grab('org.codehaus.groovyfx:groovyfx:0.4.0')</code>)に
して<code>new javafx.embed.swing.JFXPanel()</code>しておけば、
<code>start{...}</code>が動くことがわかりversion落としてやってましたが、
今改めて試してみると、
Grapeじゃなくて<code>groovy -cp groovyfx-8.0.0.jar test.groovy</code>と
Class Pathを指定すれば、
<code>new javafx.embed.swing.JFXPanel()</code>もなしに
「Hello World」もその通り動くことが確認できました。
そっかー、Grape諦めればよかったのかー。
<code>-cp</code>を指定しても足りないところはGrapeも効くので、
そぃでよかったでもんそ。</p>
<p>あと、MySQLからdata読む必要があったので、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@GrabConfig(systemClassLoader=true)
</span><span class='line'>@Grab(&#39;mysql:mysql-connector-java&#39;)
</span><span class='line'>import groovy.sql.*
</span><span class='line'>
</span><span class='line'>def sql = Sql.newInstance(&#39;jdbc:mysql://localhost:3306/database?useSSL=false&#39;, &#39;user&#39;, &#39;password&#39;, &#39;com.mysql.cj.jdbc.Driver&#39;)
</span><span class='line'>sql.eachRow(&#39;SELECT * FROM table WHERE filename LIKE ?&#39;, [&#39;%&#39; + filename]) { r -&gt;
</span><span class='line'>  ...
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>とすればよいと。</p>
<p>今回の目的は、画像を読み込んで、それにDBから読み込んだ値で四角形を描き、
そぃを画像fileとして出力する、ちゅうもんじゃった。
<code>scene.snapshot()</code>してから<code>SwingFXUtils.fromFXImage(scene, null)</code>で
描画画像をbitmap化出来ます。
それを<code>ImageIO.write()</code>で一発でfileに書けるがじゃっどん、
そぃだと何か出来た画像が赤みがかっちゃっちょるんですよね。
どげんしたもんか、試行錯誤の挙句、ImageMagickのfrontend、
<a href="http://im4java.sourceforge.net/">im4java</a>を通すとうまく行きました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import org.im4java.core.*
</span><span class='line'>
</span><span class='line'>color = new Color(0.753, 0.302, 0.314, 0.4)
</span><span class='line'>op = new IMOperation().addImage().quality(100.0).strip().addImage()
</span><span class='line'>convert = new ConvertCmd()
</span><span class='line'>
</span><span class='line'>start {
</span><span class='line'>  st = stage(title: &#39;any words OK&#39;, visible: true) {
</span><span class='line'>    s = scene(fill: BLACK, width: w, height: h) {
</span><span class='line'>      imageView(new Image(Paths.get(imageFileName).toUri().toString()))
</span><span class='line'>      rectangles.values().forEach { v -&gt;
</span><span class='line'>        rectangle(x:v[0], y:v[1], width:v[2], height:v[3], fill:color)
</span><span class='line'>      }
</span><span class='line'>    }.snapshot(new WritableImage(w, h))
</span><span class='line'>    convert.run(op, SwingFXUtils.fromFXImage(s, null), imageFileName.replace(&#39;.jpg&#39;, &#39;_.jpg&#39;))
</span><span class='line'>    // ImageIO.write(SwingFXUtils.fromFXImage(s, null), &#39;jpg&#39;, new File(imageFileName.replace(&#39;.jpg&#39;, &#39;_.jpg&#39;)))
</span><span class='line'>  }
</span><span class='line'>  st.close()
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>最後、<code>stage.close()</code>すればwindowは開かずに済みます。</p>
]]></content></entry><entry><title type="html"><![CDATA[Getting the first in Spring DATA JPA]]></title><link href="http://u-ryo.github.io//blog/2018/08/23/getting-the-first-in-spring-data-jpa/"/><updated>2018-08-23T18:27:06+09:00</updated><id>/blog/2018/08/23/getting-the-first-in-spring-data-jpa/</id><content type="html"><![CDATA[<p>Spring DATA JPAで、「最新のもの一つ」を取得したかったんです。
Spring DATA JPAは、<code>findFirstBy...</code>とかってmethodに命名すれば
自動的にSQL作ってくれるらしいんですが(<a href="https://qiita.com/sndr/items/af7d12be264c2cc4b252">【Spring Data JPA】自動実装されるメソッドの命名ルール</a>)、
目的のものではlogin userを自動的にparameterizeしたかったので、
それが出来ませんでした。←<code>User</code> objectは別途取得しておいて、
それをparameterに入れれば良かったかも、ですけど。
ともあれ、<code>findFirstBy...</code>で出来ないなら、
<code>Pageable</code>を付けるしかなさそうだ、ということで、
SQL文にはMySQLでいうところの<code>limit=1</code>などはつけずに引数の最後に<code>Pageable</code>を添え、
<code>new PageRequest(0, 1, DESC, "to")</code>として範囲を指定しました(<code>org.springframework.data.domain.Sort.Direction.DESC</code>)。</p>
<h3>参考URLs</h3>
<ol>
<li><a href="https://github.com/yamkazu/springdata-jpa-example/blob/pageable/src/test/java/org/yamkazu/springdata/EmpRepositoryTest.java">yamkazu/springdata-jpa-example</a></li>
<li><a href="https://www.petrikainulainen.net/programming/spring-framework/spring-data-jpa-tutorial-part-seven-pagination/">Spring Data JPA Tutorial: Pagination</a></li>
<li><a href="https://stackoverflow.com/questions/9314078/setmaxresults-for-spring-data-jpa-annotation?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa">setMaxResults for Spring-Data-JPA annotation?</a></li>
</ol>
]]></content></entry><entry><title type="html"><![CDATA[Arukas Cloud]]></title><link href="http://u-ryo.github.io//blog/2018/08/22/arukas-cloud/"/><updated>2018-08-28T11:15:14+09:00</updated><id>/blog/2018/08/22/arukas-cloud/</id><content type="html"><![CDATA[<p><a href="https://www.sakura.ad.jp/">Sakura</a>がやっているからそのreverse spellingだという<a href="https://arukas.io/">Arukas</a>、
docker hostingをやっていて、
credit card登録は強制されますが1 containerなら無料というので、
専用SSH machine作って<a href="https://jhipster.tech/">JHipster</a>の開発/buildに使おうと企みました。</p>
<ul>
<li><a href="https://blog.stormcat.io/post/entry/arukas-development/">arukas cloudとDockerでお手軽に開発環境をゲットする #Arukas</a></li>
<li><a href="https://qiita.com/ProjectEuropa/items/3909bd51454fcf4ef16d">Arukas.ioを使ってWEBページを公開する</a></li>
</ul>
<p>無料枠では<a href="https://hub.docker.com/">Docker Hub</a>にあるものしか使えないとはいえ、
SSH serverの入ったdocker imageなんて色々あります。
でも使ってみると、基本的にはrootでlogin、
当然root loginをpermitしていて、
securityを維持するにはrootのpasswordを変える、
userを作って<code>.ssh/authorized_keys</code>を作る、
とかなわけですが、けどroot loginのpermissionを切って
sshdをrestartすると、docker終わっちゃうんですよね当たり前ですが。
何かもっとこう、最初からUser作ってrootは禁止して、
とかっていうの無いかなー、
と物色していると、どれだったか忘れましたがgithub.comから
自分が登録したkeyを<code>ADD</code>してるものがあって、
あーなるほどー、と思って。
<code>ADD https://github.com/$GITHUB_USER.keys /home/$GITHUB_USER/.ssh/authorized_keys</code>ということですね。</p>
<p>で、結局どうしても自分の欲しいものがなかったので、
<code>Dockerfile</code>自作することにしました。
元になるimageはDocker Hub上になければいけないので、
<a href="https://simple-it-life.com/2016/03/27/dockerhub/">Docker Hubを使ってGitHubにあるDockerfileからimageを自動生成する</a>を参考に、
Github → Docker Hub → Arukasという流れになるように、
<a href="https://github.com/u-ryo/docker_alpine_sshd/">自分のGithub repository</a>
→ <a href="https://hub.docker.com/r/uryooo/docker_alpine_sshd/">自分のDocker Hub repository</a>
→ <a href="https://app.arukas.io/apps/e45aaaa5-df9d-474d-ad42-d3eff1702d76">自分のArukas App</a>
と繋げて、
回るようにします。</p>
<p>Arukasでは変数定義が出来るというので<code>Dockerfile</code>でGithub user名を<code>ENV</code>定義して、
でもそうするとDocker Hubではbuildにコケるので<code>ENV</code>には何かdefault値がないとダメで、
でもdefault値を付けちゃうとそのdefault値がArukas Appまで残っちゃうんですよね。
<a href="https://blog.amedama.jp/entry/2018/01/30/230221">Docker コンテナの動作に必要な設定を起動時に渡す</a>などを見て、
え、shell script内じゃないとダメ?
じゃぁっていうんで<code>entrypoint.sh</code>作って試してみたんですけど、
Arukasで起動に失敗しました。Docker Hubではbuild通ったのに。
Arukasでは起動時のmessageとかは出ないので、何が悪いのか分かりません。
困り果ててArukasのchatで相談投げると、翌営業日にはすぐreplyをくれて、
動作確認のためということでpull requestまで作ってくれました。
まずは早速そのまま取り込んで起動してみたんですが、
やはり起動に失敗。
けれども、別のaccountの方で<code>ENV</code>を編集することで再起動させてみたところ
うまく行ったので、何だったんでしょう?
結局今はどちらでも上手く立ち上がるようになりました。
ありがとうございました。</p>
<p>他、Arukasでハマったのは、開放するPort、
後で色々service立ち上げようと思って3000番とか8080番とか色々書いておいたら、
Endpointが有効にならないんですね。
これもArukasのchatで聞いて教えてもらったんですが、
確かによく読むと、「Docker image立ち上がった時点で
書いたPortが全て開いてないとEndpointが有効にならない」
と書いてありますね。
「一番上に書いたPortだけEndpointに繋がる」というのは
「アプリ編集」画面のEndpointのinfoに書いてあるからわかったんですが。</p>
<p>baseとなるdistributionは、
軽いという<a href="https://www.alpinelinux.org">Alpine Linux</a>に。
アプリの管理も<code>apk add ...</code>コマンドで出来ますし、
packageも<code>screen</code>やら<code>openjdk8</code>やら<code>gradle</code>やら
結構色々あってびっくりです。
何かubuntuじゃなくてalpineで十分な気がしてきました。</p>
<p>目的としていたjhipster applicationのbuildは失敗しました。
specがしょぼい(128MB memory)のか通信量に制限があるのか、
<code>jhipster</code>コマンドの途中で止まり、
applicationのscaffoldingが出来ません。
まー、無料枠なのでmachine specについては文句言えませんから、
しょーがないのかなーと。</p>
<p>ただ、Endpointが<code>https</code>で手に入るので、
<a href="https://qiita.com/schwarz471/items/9b44adfbec006eab60b0">Nginxによるリバースプロキシの設定方法</a>を参考に、
nginxによるreverse proxyとして使おうかなー、
と思っています。
custom domainも使えるとのことですが、
CDNと同じくDNSを自分でcontrol出来ねばならないので、
dynamic DNSでは使えず、custom domainは諦めました。</p>
<ul>
<li><a href="https://hub.docker.com/r/uryooo/docker_alpine_sshd/builds/">docker hubの成果物</a>(といってもpull requestくれた山田さんのおかげモノですが。山田さんありがとうございます!)</li>
</ul>
<p>Githubにkeyを登録してあれば、Arukas AppでImageにこれ↑を指定し、
<code>ENV</code>で<code>GITHUB_USER</code>をGithubのuser名、
<code>PROXY_PASS</code>をreverse proxyしたいURL、
にして立ち上げると、
当該hostにssh出来、
またEndpointで指定したURLでreverse proxy出来ます。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ln -sf /dev/stdout /var/log/nginx/access.log
</span><span class='line'>ln -sf /dev/stderr /var/log/nginx/error.log
</span></code></pre></td></tr></table></div></figure>
<p>こんな技があるんですねーなるほどー。</p>
]]></content></entry><entry><title type="html"><![CDATA[Stubbing in Spock]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/stubbing-in-spock/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/stubbing-in-spock/</id><content type="html"><![CDATA[<p><a href="http://spockframework.org/">Spock</a>でstubbingして
methodのcall回数をassertする必要がありまして。
<code>someClass = Spy(SomeClass)</code>でspyにすると、
<code>3 * someClass.targetMethod(_, _)</code>といったようにassert出来るのですが、
そのtargetMethodを呼ぶ大元のmethodのcallは、
<code>then:</code>ではなく<code>when:</code>になければならなかった、という話です。</p>
<p>即ち、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>when:
</span><span class='line'>  ...
</span><span class='line'>then:
</span><span class='line'>  someClass.method() == &#39;answer&#39;
</span><span class='line'>  3 * someClass.targetMethod(_, _)
</span></code></pre></td></tr></table></div></figure>
<p>ではダメで、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>when:
</span><span class='line'>  ans = someClass.method()
</span><span class='line'>then:
</span><span class='line'>  ans == &#39;answer&#39;
</span><span class='line'>  3 * someClass.targetMethod(_, _)
</span></code></pre></td></tr></table></div></figure>
<p>でないとなりませんでした、と。</p>
<p>あと、
<code>3 * someClass.targetMethod(_, _)</code>の部分には、
変数とか入れられません。即ち、
<code>(3 + n) * someClass.targetMethod(_, _)</code>とかはダメでした。</p>
]]></content></entry></feed>