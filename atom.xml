<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2019-01-24T05:13:51+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Omega3 fatty acids]]></title><link href="http://u-ryo.github.io//blog/2019/01/24/omega3-fatty-acids/"/><updated>2019-01-24T05:13:51+09:00</updated><id>/blog/2019/01/24/omega3-fatty-acids/</id><content type="html"><![CDATA[<p>去年11月の<a href="http://www9.nhk.or.jp/gatten/articles/20181121/">ためしてガッテン</a>や一昨年の<a href="http://www.nhk.or.jp/beautyscience-blog/2017/101/">美と若さの新常識</a>でもやってたように、
オメガ3脂肪酸として亜麻仁油スプーン一杯を始めてみたところ、
1ヶ月経たずしてホントに効果がありました。
というのも、鼻血が出やすくなったり、
痔核からの血便が出たりと、
「血液サラサラ」ってこういうことかーとの自覚が。
血小板の働きが抑えられるみたいです。
あと、この寒い中、未だにストーブ付けてなくても頑張っていられる、
というのも効果の一つかと。
最近お魚を選択できるめし処減っちゃったので、
オメガ3脂肪酸の強制摂取は必要なんだろうなぁ。
それにしても高いですねえごま油とか亜麻仁油って。
それでも西友でえごま油なんか絶えて久しいです。</p>
<h3>参考:</h3>
<ul>
<li><a href="http://www.sciencecomlabo.jp/">疑似科学とされるものの科学性評定サイト</a>の<a href="http://www.sciencecomlabo.jp/healthy_food/dha.epa">DHA・EPA</a></li>
<li><a href="https://www.umablo.net/entry/亜麻仁油の働きと危険性">イラスト徹底解説！ダイエットに人気の亜麻仁油の効能と副作用・注意点とは？</a></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[Deeplooks]]></title><link href="http://u-ryo.github.io//blog/2019/01/24/deeplooks/"/><updated>2019-01-24T04:57:31+09:00</updated><id>/blog/2019/01/24/deeplooks/</id><content type="html"><![CDATA[<p><a href="https://deeplooks.com/">Deeplooks</a>という、
顔の良さ?を冷厳に判定するsiteがあるのを知りました。
アプリとかだと顔のpartsの対称性や黄金比などから算出するみたいですが、
これはdeep learningの蓄積によるものだと。
試してみると、ぼくの写真ではどうやっても2.5〜2.7がせいぜい。
同じ写真でも拡大率によって2.5〜2.7の間でぶれますね。
笑顔など表情では変わらないようです。
また、女性の方が高めに出るようです。
なので、0.2程度は誤差があるものと。
それにしても、ぼく如きでは3とか4は出そうにありません。
確かに「この人美人だなぁ」という人を入れれば高得点なので、
客観的指標になりそうです。
Deeplooksのスマホアプリはないですが、
普通にbrowserでaccessすれば、その場で撮った写真で判定できるので十分です。
ただこれ、submitした写真は蓄積されていくようで、しまった!</p>
]]></content></entry><entry><title type="html"><![CDATA[Positive Psychology]]></title><link href="http://u-ryo.github.io//blog/2019/01/24/positive-psychology/"/><updated>2019-01-24T04:49:26+09:00</updated><id>/blog/2019/01/24/positive-psychology/</id><content type="html"><![CDATA[<p>ポジティブ心理学について調べてて、
<a href="https://lightworks-blog.com/pos-psych-strength">〔ポジティブ心理学〕あなたが気づかなかった「強み」を引き出す方法</a>を読んでいたら、
CS(Character Strength)を測る(『どれが自分の「強み」なのかを簡単に調べられるサーベイを無料で受けることができ』る)<a href="https://www.viacharacter.org/Survey/Account/Register">VIA Institute on Character</a>というのがあるというのでやってみました。</p>
<ol>
<li>向学心</li>
<li>勇敢さ</li>
<li>好奇心</li>
</ol>
<p>だそうです。
審美眼、思慮深さ、と続きます。</p>
<p>うー。</p>
<p>下位は、下(24位)から、</p>
<ol>
<li>愛情</li>
<li>感謝</li>
<li>慎み深さ</li>
<li>熱意</li>
</ol>
<p>耳が痛いです。
team workは14番目。
あうー。
もうしょうがないのかなぁ。</p>
]]></content></entry><entry><title type="html"><![CDATA[Funny Patents]]></title><link href="http://u-ryo.github.io//blog/2019/01/24/funny-patents/"/><updated>2019-01-24T04:42:06+09:00</updated><id>/blog/2019/01/24/funny-patents/</id><content type="html"><![CDATA[<p>弁理士さんの話が出て、
特許と言えば赤城徳川埋蔵金とか変なのありますよねー、
って話で、さらっと調べてみる(<a href="https://anond.hatelabo.jp/20120202011001">ヤバい特許</a>)と色々あるんですねぇ他にも。
「太陽の壺」とかって殆ど小説ですか?
っていう感じですけど、どうしてこういうの通るんでしょうか?
役人がザルだから??
不思議でなりません。</p>
]]></content></entry><entry><title type="html"><![CDATA[Learn Python 3 the Hard Way]]></title><link href="http://u-ryo.github.io//blog/2019/01/24/learn-python-3-the-hard-way/"/><updated>2019-01-24T04:34:38+09:00</updated><id>/blog/2019/01/24/learn-python-3-the-hard-way/</id><content type="html"><![CDATA[<p>知人が<a href="https://www.amazon.co.jp/Learn-Python-Hard-Way-Introduction-ebook/dp/B07378P8W6">Learn Python 3 the Hard Way</a>を<a href="https://www.amazon.co.jp/Learn-Python-Hard-Way-%E6%9B%B8%E3%81%84%E3%81%A6%E8%A6%9A%E3%81%88%E3%82%8BPython%E5%85%A5%E9%96%80/dp/4621303287">翻訳しました</a>。
凄いなぁと思うと同時に、
見てみると既に<a href="https://learnpythonthehardway.org/">英語版</a>で<a href="http://blog.sayajewels.com/posts/janiota-python-practice/">勉強した人がいる</a>というので、
その人がやったという初心者用練習問題を、
ジャニヲタじゃないので、
というか初心者ではないので「一行で」やってみました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>&gt;&gt;&gt; def average_age(members):
</span><span class='line'>...  return sum([x[2] for x in members])/len(members)
</span><span class='line'>...
</span><span class='line'>&gt;&gt;&gt; average_age([(&#39;s&#39;,&#39;s&#39;,35),(&#39;a&#39;,&#39;a&#39;,34),(&#39;n&#39;,&#39;n&#39;,34),(&#39;d&#39;,&#39;o&#39;,36),(&#39;j&#39;,&#39;j&#39;,34)])
</span><span class='line'>34.6
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt; def oldest_member(members):
</span><span class='line'>...  return max(members, key=(lambda x:x[2]))[0]
</span><span class='line'>...
</span><span class='line'>&gt;&gt;&gt; oldest_member([(&#39;s&#39;,&#39;s&#39;,35),(&#39;a&#39;,&#39;a&#39;,34),(&#39;n&#39;,&#39;n&#39;,34),(&#39;d&#39;,&#39;o&#39;,36),(&#39;j&#39;,&#39;j&#39;,34)])
</span><span class='line'>&#39;d&#39;
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt; def second_oldest_member(members):
</span><span class='line'>...  return sorted(members, key=(lambda x:x[2]))[1][0]
</span><span class='line'>...
</span><span class='line'>&gt;&gt;&gt; second_oldest_member([(&#39;s&#39;,&#39;s&#39;,35),(&#39;a&#39;,&#39;a&#39;,34),(&#39;n&#39;,&#39;n&#39;,34),(&#39;d&#39;,&#39;o&#39;,36),(&#39;j&#39;,&#39;j&#39;,34)])
</span><span class='line'>&#39;n&#39;
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt; def next_older_member(members, nickname):
</span><span class='line'>...  return min([a for a in members if a[2] &gt; [b for b in members if b[0]==nickname][0][2]],key=(lambda x:x[2]))[0]
</span><span class='line'>...
</span><span class='line'>&gt;&gt;&gt; next_older_member([(&#39;st&#39;,&#39;ms&#39;,19),(&#39;m&#39;,&#39;my&#39;,17),(&#39;k&#39;,&#39;nk&#39;,23),(&#39;f&#39;,&#39;kf&#39;,22),(&#39;sh&#39;,&#39;ss&#39;,20)],&#39;f&#39;)
</span><span class='line'>&#39;k&#39;
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt; def check_future_age(current_members, future_members):
</span><span class='line'>...  return len({i[2]-j[2] for i,j in zip(current_members,future_members)}) == 1
</span><span class='line'>...
</span><span class='line'>&gt;&gt;&gt; check_future_age([(&#39;st&#39;,&#39;ms&#39;,19),(&#39;m&#39;,&#39;my&#39;,17),(&#39;k&#39;,&#39;nk&#39;,23),(&#39;f&#39;,&#39;kf&#39;,22),(&#39;sh&#39;,&#39;ss&#39;,20)],[(&#39;st&#39;,&#39;ms&#39;,22),(&#39;m&#39;,&#39;my&#39;,20),(&#39;k&#39;,&#39;nk&#39;,26),(&#39;f&#39;,&#39;kf&#39;,25),(&#39;sh&#39;,&#39;ss&#39;,23)])
</span><span class='line'>True
</span><span class='line'>&gt;&gt;&gt; check_future_age([(&#39;st&#39;,&#39;ms&#39;,19),(&#39;m&#39;,&#39;my&#39;,17),(&#39;k&#39;,&#39;nk&#39;,23),(&#39;f&#39;,&#39;kf&#39;,22),(&#39;sh&#39;,&#39;ss&#39;,20)],[(&#39;st&#39;,&#39;ms&#39;,22),(&#39;m&#39;,&#39;my&#39;,20),(&#39;k&#39;,&#39;nk&#39;,26),(&#39;f&#39;,&#39;kf&#39;,25),(&#39;sh&#39;,&#39;ss&#39;,24)])
</span><span class='line'>False
</span></code></pre></td></tr></table></div></figure>
<p>あぁ、なんてアホなことに時間と頭を使ってしまった...</p>
<p><code>min</code>、<code>max</code>、<code>sorted</code>ってリスト内包表記で出来ないんですか?</p>
<p>印税は初版で20〜30万、あとは増刷でガッポガッポ、だそうです。
1年半かかったって。お疲れさまでした。
ぼくも販促に協力しましょうかね。
そしておこぼれにあずかれれば!</p>
]]></content></entry><entry><title type="html"><![CDATA[lualatex error]]></title><link href="http://u-ryo.github.io//blog/2019/01/23/lualatex-error/"/><updated>2019-01-23T22:34:34+09:00</updated><id>/blog/2019/01/23/lualatex-error/</id><content type="html"><![CDATA[<p>Ubuntu 18.04になってからか、これまで難なく通っていたLuaLaTeXが
通らなくなっていました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>(/usr/share/texlive/texmf-dist/tex/luatex/luatexja/patches/lltjp-stfloats.sty)
</span><span class='line'>ABD: EverySelectfont initializing macros
</span><span class='line'>! Undefined control sequence.
</span><span class='line'><span class="nt">&lt;argument&gt;</span> ...x \ifdim \paperheight &gt;0pt\relax \pdfpagewidth
</span><span class='line'>                                                  =\paperwidth \pdfpageheigh...
</span><span class='line'>
</span><span class='line'>l.5 \begin{document}
</span><span class='line'>?
</span></code></pre></td></tr></table></div></figure>
<p>version upしたからかな、
そのうち通るようになるかな、
それまでは16.04捨てられないな、
とか思ってほっぽっておいてたんですが、
一向に良くならないので、ちょっと調べてみました。
LuaLaTeX追ってる人には何でもない情報でしょうが、
色々変わってたんですね。</p>
<p>結論から示しますと、
<code>graphicx</code>のdriverを<code>pdftex</code>から<code>luatex</code>にする
(→defaultの自動判定に任せる)ようにすれば良かったです。
具体的には、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>\usepackage[pdftex]{graphicx}
</span><span class='line'>   â
</span><span class='line'>\usepackage{graphicx}
</span></code></pre></td></tr></table></div></figure>
<p>だけでした(ref.<a href="http://acetaminophen.hatenablog.com/entry/2016/04/23/141922">TeX Live 2016 の新しい LuaTeX あれこれ</a>)。
primitive名が色々変わって、
LuaTeXのprimitiveに対応した<code>luatex.def</code>が出来て、
graphicx driverの<code>luatex</code>への自動判定(<code>pdftex</code>ではなく)が
導入されていました。</p>
]]></content></entry><entry><title type="html"><![CDATA[3 good things in this week]]></title><link href="http://u-ryo.github.io//blog/2019/01/13/3-good-things-in-this-week/"/><updated>2019-01-15T01:06:52+09:00</updated><id>/blog/2019/01/13/3-good-things-in-this-week/</id><content type="html"><![CDATA[<p>とっても今更ですが、凄い本に出会いました。
情報処理学会誌のビブリオトークで紹介されていた「データの見えざる手」、
帰りに池袋三省堂で100頁ちょっと立ち読みしたら止まらくなっちゃって、
もう本を買うのはやめようと思ってたのに、買っちゃいました。
もう出版から4年経って手軽な文庫になってましたし。
発刊が2014、文庫化が2018年、でも内容は古くない、
というか聞いたことなかったです。
このdog yearな技術進歩の中で!
調べてみると<a href="https://industry-co-creation.com/industry-trend/6539">論文として出してないでClosedだ</a>って言ってましたから、
そのせい?</p>
<p>この本の凄いのは、data分析に留まらず、
「幸せは、加速度センサで測れる」と喝破しているところ。
そういう考察まで進めるというのが、そこらのAI、big dataの話と
違うところ、です。
(よく見ると、「組織の」happiness?)</p>
<p>その中で、
今週あったよかったこと3つを10分で書き出すと
happiness levelが高まった、という話がありました(p.81)。
3つ書き出す手法自体は共同研究者でHappinessの心理学(Positive心理学)が専門で
<a href="http://www.positivepsych.jp/pp6/book10.html">The How of Happiness: A Scientific Approach to Getting the Life You Want</a>の著者
<a href="https://en.wikipedia.org/wiki/Sonja_Lyubomirsky">リュボミルスキ(リュボミアスキー)教授</a>の
ものだそうですが、
それをwearable sensorの比較実験で裏付けたと。
そして言います。</p>
<blockquote><p>人のハピネスは、意外に小さなことが決めていることが実証された。(p.82)</p>
</blockquote>
<p>あぁ、でもよく読むと、</p>
<ul>
<li>幸せは、およそ半分は遺伝的に決まっている</li>
<li>驚くべきことに、これら環境要因をすべて合わせても、幸せに対する影響は、全体の10%にすぎない</li>
<li>残りの40%は何だろう。...たとえば、人に感謝を表す、困っている人を助けてあげる、という一見簡単なことでも、実はハピネスは格段に高まる</li>
</ul>
<p>といった辺り(p.72〜74)は、<a href="https://ja.wikipedia.org/wiki/ポジティブ心理学">ポジティブ心理学</a>の成果なんですね。</p>
<p>なるほど、要するに、
こういった心理学(や経営学?)の成果を、
アンケートではなくwearable sensorによる行動履歴から実証した、
更に押し進めて、人間行動もmassの視点から見ると一般の物理法則に従う、
と主張しているものなんですかね。
あ、いや、コールセンタやホームセンタの話などは、
兎に角やってみたらわかった、という話ですか。
だから「仮説を立てることも学習できるマシンに任せた方がいい」
([<a href="https://cakes.mu/posts/7372">どっちが最強！？ 物理学VS統計学——矢野和男×西内啓 対談 データ分析で「過失」という概念が進化を遂げてしまう？</a>])のですね。
(但しGoalは人間が設定する必要がある、と)</p>
<p>まぁいいです。
「幸せ」になるために、ぼくも3つ、書き出してみましょう。
* 転職して3週間、研修とは言えsource codeが書けたこと(でも今更AngularJSとは... 昔取った杵柄とはいえ)
* 会社の初詣・昼食会でお昼ご飯がタダだったこと(家計が助かります... でも周囲とはまだまだ馴染めず)
* 金曜昼の会社の食事会でタダ飯が食べられたこと(家計が助かります... ご飯のことばっかり。でもそれって大事ですよ)
あれ? オチは付けちゃいけないんですかね?</p>
<p>あとは「mindfulness」、寝る前の瞑想深呼吸でしょうか。</p>
<p>あぁ、幸せ。</p>
<p>...ホント?!</p>
<p>何の心配もなく寝ていれば、それで幸せ、デス。</p>
<p>って、死んでるのと然程変わらないのでは。</p>
<p>...あー、これも、<a href="https://lightworks-blog.com/happiness-formula">〔ポジティブ心理学〕「意図的行動」で仕事の幸せ度を上げる方法</a>によると、
それぞれの「よいこと」について、「なぜ起きたのか」「どんな意味があるのか」「自分/他人がどんな働きかけをしたからか」「もっと得るためにはどうしたらよいか」を書き加えるそう。
うーむ、幸せへの道はそう容易くはないのですね。
そういえば随所に書かれてますか。
幸せとは能動的なもので受動的なものではない、と。
HappinessというよりWell-being?</p>
<h3>矢野さん related links</h3>
<ul>
<li><a href="https://cakes.mu/posts/6945">人間の行動を支配する隠れた法則とは——『データの見えざる手』矢野和男インタビュー 【 前編】人間を測る新しいものさしの誕生</a></li>
<li><a href="https://cakes.mu/posts/6946">人間の行動を支配する隠れた法則とは——『データの見えざる手』矢野和男インタビュー 【 中編】人間はエネルギー保存則から逃れられない！</a></li>
<li><a href="https://cakes.mu/posts/6947">人間の行動を支配する隠れた法則とは——『データの見えざる手』矢野和男インタビュー 【 後編】体を動かすと幸福に、幸福になると生産性が上がるという事実</a></li>
<li><a href="https://cakes.mu/series/3235">どっちが最強！？ 物理学VS統計学——矢野和男×西内啓 対談</a></li>
<li><a href="https://cakes.mu/posts/7370">どっちが最強！？ 物理学VS統計学——矢野和男×西内啓 対談 「人の行動を自発的に変えることを命令する」という矛盾のそばで</a></li>
<li><a href="https://cakes.mu/posts/7371">どっちが最強！？ 物理学VS統計学——矢野和男×西内啓 対談 人生はお金と時間と制御資源のマネジメントである</a></li>
<li><a href="https://cakes.mu/posts/7372">どっちが最強！？ 物理学VS統計学——矢野和男×西内啓 対談 データ分析で「過失」という概念が進化を遂げてしまう？</a></li>
<li><a href="https://cakes.mu/posts/7373">どっちが最強！？ 物理学VS統計学——矢野和男×西内啓 対談 コンピュータもデータも、最終的に人間中心であるべきである。</a></li>
<li><a href="http://www.soshisha.com/book_wadai/books/2068.html">データの見えざる手--ウェアラブルセンサが明かす人間・組織・社会の法則 「知り合いの知り合い」が増えると仕事がうまくいく!</a></li>
<li><a href="https://industry-co-creation.com/industry-trend/6539">人工知能”Hくん”はものすごく少ないデータで学習し、最適解を導く(日立 矢野）【K16-1A #6】</a></li>
<li><a href="https://industry-co-creation.com/industry-trend/6541">組織のハピネスは加速度センサーで測れる(日立 矢野)【K16-1A #7】</a></li>
<li><a href="https://industry-co-creation.com/industry-trend/6543">人工知能が生む出す新たな職業「AIer」とは何か？【K16-1A #8】</a></li>
<li><a href="http://www.hitachi.co.jp/products/it/it-pf/mag/pf/pr_ai_jump/">日立の人工知能とは</a></li>
</ul>
<p>Hくん、今は<a href="http://www.hitachi.co.jp/products/it/lumada/">Lumada</a>になっているようですね。</p>
]]></content></entry><entry><title type="html"><![CDATA[Nengajo Rhapsody]]></title><link href="http://u-ryo.github.io//blog/2019/01/07/nengajo-rhapsody/"/><updated>2019-01-15T00:49:28+09:00</updated><id>/blog/2019/01/07/nengajo-rhapsody/</id><content type="html"><![CDATA[<p>いつも年賀状で苦労しています。
毎年微妙に変わりますので。
今年苦労した点をメモしておきます。年末の自分のために。</p>
<p><code>LuaLaTeX</code>になってから、fontの扱いは大分楽になりました。
<a href="https://arxiv.hatenablog.com/entry/2016/11/30/183000">LuaLaTeXのフォントの取り扱いについて</a>を参考に、
<code>*.ttf/otf</code>を<code>/usr/share/fonts/[true|open]type/xxx/</code>以下にcopyして、
<code>.tex</code>fileに
<code>\newfontfamily\Text任意名{英文フォントファイル名}</code>や
<code>\newjfontfamily\Text任意名{和文フォントファイル名}</code>と書けば、
<code>\Text任意名 happy new year!</code>や<code>\Text任意名 謹賀新年</code>というように使えました。</p>
<p>class fileは香田温人さんの<code>ltjhagaki.cls</code>を長年使わせて貰っています。
探してみたら今はもう見付からないようですね。</p>
<p>0.81や0.85でLuaLaTeXが少し変わって(<a href="https://zrbabbler.hatenablog.com/entry/20151013/1444700367">LuaTeX や LaTeX や LuaLaTeX が新しくなってアレ(1)</a>)、
<code>\pdfpagewidth</code>も未定義になっちゃってて、
はがき自体の表示位置もA4のupper centerになっちゃってて。
去年はハガキサイズでPDF出てたのに。
これだと印刷にどうにも苦労したので、
<a href="https://org-technology.com/posts/lualatex-geometry.html#">LuaLaTeX での余白の設定</a>を参考に
geometryを導入してはがきサイズでpdfを出力するようにしたら
ようやっとうまく行きました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>\usepackage[paperwidth=100mm, paperheight=149mm]{geometry}
</span><span class='line'>\geometry{top=0truemm,bottom=0truemm,inner=0truemm,outer=0truemm}
</span></code></pre></td></tr></table></div></figure>
<p>これですね。良かったです。</p>
<p><a href="http://www.easydrawingtutorials.com/index.php/disney/414-mickey-mouse-body">Easy Drawing Tutorials</a>、<a href="http://www.easydrawingtutorials.com/index.php/88-disney/81-draw-mickey-mouse">顔の描き方</a>なんてあるんですね凄いなぁ。</p>
]]></content></entry><entry><title type="html"><![CDATA[creating executable war on JHipster]]></title><link href="http://u-ryo.github.io//blog/2018/12/03/creating-executable-war-on-jhipster/"/><updated>2018-12-03T02:19:42+09:00</updated><id>/blog/2018/12/03/creating-executable-war-on-jhipster/</id><content type="html"><![CDATA[<p>いつも忘れちゃうんで。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ gradle bootRepackage -Pprod
</span></code></pre></td></tr></table></div></figure>
<p><code>build.gradle</code>に中に定義があります。</p>
]]></content></entry><entry><title type="html"><![CDATA[mat-spinner in Angular Material]]></title><link href="http://u-ryo.github.io//blog/2018/12/02/mat-spinner-in-angular-material/"/><updated>2018-12-02T09:56:25+09:00</updated><id>/blog/2018/12/02/mat-spinner-in-angular-material/</id><content type="html"><![CDATA[<p>Angularで「ロード中」を簡単に実現する方法を探していて、
<a href="https://material.angular.io/components/progress-spinner/overview">Angular Material</a>にあるんですね。<code>&lt;mat-spinner&gt;&lt;/mat-spinner&gt;</code>だけ。凄く簡単。
でも、実際にやってみても出て来なかったので不思議でした。
いや、<a href="https://stackblitz.com/angular/qyqovrjarbx?file=app%2Fprogress-spinner-overview-example.html">sample</a>とかいくら見ても、特に何も<code>import</code>しなくてもいきなりtag書くだけで使えるよ、っていうんですけど、自分のには出て来ません。なぜ??
<a href="https://www.youtube.com/watch?v=Z6JdFWXh1Nc">動画</a>見てやっとわかりました。
確かに当該component fileではimportの必要ありませんけど、
<code>app.module.ts</code>なりで<code>MatProgressSpinnerModule</code>のimport/importsが必要なんですね。
もし入ってなければ<code>BrowserAnimationsModule</code>も。
sampleはdefaultでMat系Module全部入りだからよくわかんなかったんですよ。</p>
]]></content></entry><entry><title type="html"><![CDATA[Using where and join in mysqldump]]></title><link href="http://u-ryo.github.io//blog/2018/11/28/using-where-and-join-in-mysqldump/"/><updated>2018-11-28T00:37:50+09:00</updated><id>/blog/2018/11/28/using-where-and-join-in-mysqldump/</id><content type="html"><![CDATA[<p>基本的には<a href="https://qiita.com/asigochan/items/fec45efff78045b33b90">mysqldumpでwhereにjoinを使う</a>にある通り、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>mysqldump -uusername -p DatabaseName tableA --single-transaction --were &#39;id IN (SELECT a.id FROM tableA a JOIN tableB b ON a.b_id=b.id WHERE b.name LIKE &quot;%someone%&quot;)&#39;
</span></code></pre></td></tr></table></div></figure>
<p>というわけですが、肝は、</p>
<ul>
<li><code>--where</code>中で<code>JOIN</code>を使うためにsubqueryにする</li>
<li><code>--single-transaction</code>を付けることで<code>mysqldump: Couldn't execute 'SELECT... Table 'a' was not locked with LOCK TABLES (1100)</code>と言われるのを防ぐ</li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[Suddenly failed to parse DateTime on JHipster Angular]]></title><link href="http://u-ryo.github.io//blog/2018/11/25/suddenly-failed-to-parse-datetime-on-jhipster-angular/"/><updated>2018-11-25T01:23:33+09:00</updated><id>/blog/2018/11/25/suddenly-failed-to-parse-datetime-on-jhipster-angular/</id><content type="html"><![CDATA[<p>ある時、JHipsterのAngularのUser Managementを久し振りに見てみると、user名など表示されるのが物凄く遅いことがありました。ポツ、また数秒してポツ、という具合に一つ一つの行が表示されていきます。あれぇ? こんなもんだったかなぁ? あまり気にしなかったのですが、流石に新規Userを作成しようとして失敗する段になって、これは何とかしなければと思い始めました。browserでF12を押してみると、どうやらDate Pipeでのparseに失敗している様子。どうして? 前は出来てたのに。serverから来ているJSONをよく見ると、DBからのDateTime部分のObjectが<code>epochSecond</code>とかnano何とかになっていました。検索すると、
<a href="https://stackoverflow.com/questions/37999762/efficient-way-to-have-jackson-serialize-java-8-instant-as-epoch-milliseconds/38004044">Efficient way to have Jackson serialize Java 8 Instant as epoch milliseconds?</a>を見付けて、中身読んでないですが「jackson-datatype-jsr310」を見掛けてあぁー!っと。</p>
<p>jhipsterで新規application作ってその<code>build.gradle</code>見てみると、確かにありました<code>compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'</code>。
これを、なくてもいいじゃん、と大分前に取っちゃってたんですね。確かにWebアプリ本体には影響なかったので気付きませんでした。あーあ。こういう影響が出てくるですか。なるほど。</p>
]]></content></entry><entry><title type="html"><![CDATA[Setting password for unreachable mail user on JHipster]]></title><link href="http://u-ryo.github.io//blog/2018/11/24/setting-password-for-unreachable-mail-user-on-jhipster/"/><updated>2018-11-28T04:32:45+09:00</updated><id>/blog/2018/11/24/setting-password-for-unreachable-mail-user-on-jhipster/</id><content type="html"><![CDATA[<p>JHipsterでuserを作る時にmail addressは必須で、
基本的にはnew user作るとJHipsterは裏でmailを投げています。
投げて失敗してもnew userは作れるんですが、passwordを設定できません。
どうしたらいいんだろう? と思ってlog見ていたら、
<code>http(s)://ホスト名/#/reset/finish?key=XXXXXXXXXXXXXXX</code>にaccessすれば通常の手続きに乗れるんですね。
このkeyはどこで規定されるのかと思ったら、<code>JHI_USER.RESET_KEY</code>の値です。
ここだけではダメで、<code>JHI_USER.RESET_DATE</code>に<code>now()</code>等で日付時刻をsetしないと、そしてその時刻から24時間以内にaccessしないと、ならないです。
あるuserのpassword強制resetにも使える、と思います。</p>
<p>ただこれをやると、<code>UserService#completePasswordReset</code>の中の<code>cacheManager.getCache</code>でヌルポが出るようでどうしようもなかったです。なので、<code>UserService.java</code>中の<code>cacheManager.getCache(...)</code>を(当該method以外でも)全て<code>try...catch</code>で囲いました。だって無害でしょう?</p>
<p>追記: JHipsterでのlogin dialogには「パスワードを忘れましたか」というlinkがあって、
それを踏むと<code>http://127.0.0.1:8080/#/reset/request</code>というpageに遷移し、
mail addressを入れると、上記初期登録時同様にActivateを要求するmailが飛びます。
初めてやってみました。へぇよく出来てますね。
そのmailに書いてあるURLも初期登録時同様<code>http://127.0.0.1:8080/#/reset/finish?key=XXXXXXXXXX</code>です。</p>
]]></content></entry><entry><title type="html"><![CDATA[Adding a new column on JHipster]]></title><link href="http://u-ryo.github.io//blog/2018/11/24/adding-a-new-column-on-jhipster/"/><updated>2018-11-24T05:56:26+09:00</updated><id>/blog/2018/11/24/adding-a-new-column-on-jhipster/</id><content type="html"><![CDATA[<p>JHipsterでdatabaseのtableに新しいcolumnを足したいと思いました。
Liquibaseで管理されているので、直接DBを変えちゃうと立ち上がらなくなっちゃいます。
結構面倒臭いんですよねLiquibase。</p>
<p>基本的には<a href="https://www.jhipster.tech/development/#database-updates">Using JHipster in developmentのDatabase updates</a>に書いてある通り、です。
3通り紹介されていますが、最初に書かれている<code>entity sub-generator</code>を使った方が、testやi18n、angular側の面倒も見てくれるので楽です。
但し、generateされるjava/json/ts filesについては、面倒でも一つ一つdiffを見て上書きするか考えた方がいいです。場合によっては上書きしない方がいいcaseもありました(repository class、即ちDBを直接叩くclassとかresource class、即ちRest Controllerとか、i18nのglobal.jsonとか、独自に書いたところがあるものは特に)。</p>
<p>新規にtableごと加える時はこれでいいのかもしれません(以前やってうまく行った薄い記憶がありますがよく覚えてません)。
けれども、既存tableにcolumnを足す、となると、
<code>年月日_changelog.xml</code>を作ってくれないので、
いくら<code>gradle</code>かけてもDBのtableを変更してくれないんです。
更に、checksumが合わないといって起動しなくなります。
困ります。</p>
<p>なので、2番目の策を合わせて<code>changelog.xml</code>を作ってもらいます。
そのためには上記ページに書いてあるように、<strong>一旦buildしてから</strong>、
<code>gradle liquibaseDiffChangelog -PrunList=diffLog</code>すると、
class fileのdiffを取って<code>src/main/resources/config/liquibase/changelog/</code>以下にchangelogを作ってくれます。
それを<code>src/main/resources/config/liquibase/master.xml</code>に手で書き入れてからbuildすると、changelogが働いて<code>alter table</code>してくれます。
但しその際、元のtableのxml(<code>年月日_added_entity_テーブル名.xml</code>)をもとに戻しておかないと、「checksumが合わない」と言われるでしょう。</p>
<p>...というように、1番目と2番目の合わせ技的なところが最良のように思います。</p>
<p>どうしてもうまく行かない時、最後は以下の手で何とかなります。なりました。</p>
<ul>
<li>DBは自分で<code>alter table</code></li>
<li>checksumは<code>DATABASECHANGELOG.MD5CHECKSUM</code>にあるので自分で<code>update table set ...</code></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[number to string on Angular/TypeScript]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/number-to-string-on-angular-typescript/"/><updated>2018-11-13T12:48:50+09:00</updated><id>/blog/2018/11/13/number-to-string-on-angular-typescript/</id><content type="html"><![CDATA[<p>Angularを書いていて、
<code>Type 'string' is not assignable to type 'number'.</code>と言われて驚いたので調べました。
えー、そのくらいよしなに変換してくれるんじゃないのー?!
結構型に厳しいんですね。
<a href="https://stackoverflow.com/questions/39956988/typescript-tofixed-type-string-is-not-assignable-to-type-number">Typescript, toFixed. Type 'string' is not assignable to type 'number'</a>に<code>(12.32).toFixed(2)</code>とあるので試すとその通りでした。
この2ってなんだろう? と思ったら、「小数点以下第2位までの表示(第3位で四捨五入、無ければ0埋め)」ってことなんですね。</p>
]]></content></entry><entry><title type="html"><![CDATA[grape on groovysh]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/grape-on-groovysh/"/><updated>2018-11-13T12:35:59+09:00</updated><id>/blog/2018/11/13/grape-on-groovysh/</id><content type="html"><![CDATA[<p>groovyshでgrapeを使ってlibraryを使いたい時がありました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>groovy:000&gt; :i groovy.grape.*
</span><span class='line'>===&gt; groovy.grape.*
</span><span class='line'>groovy:000&gt; Grape.grab(group:&#39;mysql&#39;,module:&#39;mysql-connector-java&#39;,version:&#39;8.0.11&#39;)
</span><span class='line'>===&gt; null
</span><span class='line'>groovy:000&gt; Grape.grab(&#39;mysql:mysql-connector-java:8.0.11&#39;)
</span><span class='line'>ERROR java.lang.RuntimeException:
</span><span class='line'>Error grabbing Grapes -- [unresolved dependency: groovy.endorsed#mysql:mysql-connector-java:8.0.11;2.5.0: not found]
</span></code></pre></td></tr></table></div></figure>
<p>versionも文字列でないとならないのに気を付けます。
いつもの<code>'mysql:mysql-connector-java:8.0.11'</code>の形式はダメでした。</p>
<p><code>@GrabConfig(systemClassLoader=true)</code>はどうやってもダメっぽいので、
結局groovyshからのMySQL accessは諦めましたが。</p>
<p>参考: <a href="https://qiita.com/yukung/items/6e1f62e7c2d0aae95bee">groovysh で Maven リポジトリにあるライブラリを使う</a></p>
]]></content></entry><entry><title type="html"><![CDATA[drawing rectangles on an image for groovy]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/drawing-rectangles-on-an-image-for-groovy/"/><updated>2018-11-13T12:27:15+09:00</updated><id>/blog/2018/11/13/drawing-rectangles-on-an-image-for-groovy/</id><content type="html"><![CDATA[<p>今まで、「画像を読み込んで線や図形を描く」というのはGroovyFXでやってたんですが、
JavaFXってheadlessで出来ないんですね!?
びっくりポンです。
<code>java.awt.headless=true</code>もそういやAWTなんですね。
うーむ、流石は廃止されるJavaFX、と思ったんですが、
どうせ<code>im4java</code>使ってるなら、なんだImageMagickだけで出来るじゃーん、
ということに遅ればせながら気付きました。
ImageMagickってdrawも出来るんですね。</p>
<p>大体、以下の要領です。</p>
<ol>
<li><code>import org.im4java.core.*</code></li>
<li><code>op = new IMOperation()</code></li>
<li><code>op.addImage(...)</code>で画像fileを読み込む</li>
<li><code>op.fill('rgba(255,100,0,0.5)')</code>等と塗り潰す色を指定</li>
<li><code>op.stroke('white')</code>等と線の色を指定</li>
<li><code>op.draw('rectangle 0,10,30,30')</code>で長方形を描画</li>
<li><code>op.draw('text 0,10 ABCD')</code>で文字を描画</li>
<li><code>op.quality(80)</code>で圧縮率(品質)指定</li>
<li>もう一度<code>op.addImage(...)</code>で出力画像の名前と形式を指定</li>
<li><code>new ConvertCmd().run(op)</code>で実行</li>
</ol>
<p><a href="http://im4java.sourceforge.net/docs/dev-guide.html">公式page</a>にありますけどね。</p>
]]></content></entry><entry><title type="html"><![CDATA[chomp for groovy]]></title><link href="http://u-ryo.github.io//blog/2018/11/13/chomp-for-groovy/"/><updated>2018-11-13T12:27:08+09:00</updated><id>/blog/2018/11/13/chomp-for-groovy/</id><content type="html"><![CDATA[<p>groovyでcommand executionの結果を拾った(<code>'command args'.execute().text</code>)ところ改行がついてたので、除去しようと<code>.replace('\n', '')</code>としてたんですが、そっか、<code>.trim()</code>でいいんですね。勿論目的にもよりますが。</p>
<p>cf. <a href="http://orangeclover.hatenablog.com/entry/20110524/1306164109">Groovyで文字列の先頭・末尾から空白を取り除く</a></p>
]]></content></entry><entry><title type="html"><![CDATA[Schedulers.newThread() or Schedulers.io()]]></title><link href="http://u-ryo.github.io//blog/2018/10/10/schedulers-newthread-or-schedulers-io/"/><updated>2018-10-10T20:35:28+09:00</updated><id>/blog/2018/10/10/schedulers-newthread-or-schedulers-io/</id><content type="html"><![CDATA[<p>Robolectricでtestを書いていて、
どうも上手く行かないところがありました。
「上手く行かない」というのは「Test class内で(RxJava1系なので)<code>RxJavaHooks.setOnIOScheduler(s -&gt; Schedulers.immediate());</code>しているにも関わらず、
test対象classで<code>subscriber</code>が動いてしまう」というものです。</p>
<p>どうしてかなぁ、<code>.subscribe(...)</code>の中で<code>.subscribe(...)</code>してるからかなぁ、
<a href="https://hydrakecat.hatenablog.jp/entry/2016/12/12/RxJava_のテスト(1):_TestSubscriber,_test(),_TestScheduler">RxJava のテスト(1): TestSubscriber, test(), TestScheduler</a>を見て、
じゃぁっていうんで<code>TestScheduler scheduler = Schedulers.test();</code>して何度か<code>scheduler.triggerActions();</code>しても現象変わらずでした。</p>
<p>悩んだ末、わかったのは、
test対象classでは<code>.subscribeOn(Schedulers.newThread())</code>していた、
ということでした。
なぁんだ。</p>
<p>そういえばちょっと前に書いたところだったので、
まだ<code>Schedulers.newThread()</code>にしちゃってたんですね。
今回<code>Schedulers.io()</code>に変えました。
Androidでも効くんでしょうか。</p>
]]></content></entry><entry><title type="html"><![CDATA[Viewing/Recording TV (Hiden no Tare)]]></title><link href="http://u-ryo.github.io//blog/2018/09/17/viewing-recording-tv-hiden-no-tare/"/><updated>2018-09-19T20:01:57+09:00</updated><id>/blog/2018/09/17/viewing-recording-tv-hiden-no-tare/</id><content type="html"><![CDATA[<p>何を今更ですが、ここ15年、以下のようにTVを見たり録画したりしています。
3000円くらいで買ったUSB Video Capture Box(LiveView:絶版)を使い続けています。
画像と音声は別々だしsizeも320x240と凄く小さいんですけど、
1秒2MBとfile sizeもcompactだし細かい字は読めないものの話の筋は十分わかるので、
いっかなぁと。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>echo &#39;ffmpeg -s 320x240 -r 12 -vd /dev/video -ad /dev/dsp -y -t 0:15:00 ~/avi/hanbun_aoi_146.avi <span class="err">&amp;</span>&gt; /dev/null&#39; |at 8:00
</span><span class='line'>
</span><span class='line'>vlc --color -I dummy v4l:/dev/video:norm=ntsc:size=640x480:adev=/dev/dsp:audio=0:channel=0:fps=12 --sout &quot;#transcode{vcodec=mp4v,acodec=mpga,vb=3000,ab=256,venc=ffmpeg{keyint=80,vt=800000},deinterlace}:std{access=http,mux=asf,url=0.0.0.0:8080}&quot; --ttl 2
</span><span class='line'>
</span><span class='line'>echo &#39;(sleep 45;pkill -f ffmpeg) <span class="err">&amp;</span>&gt; /dev/null&#39;|at 7:59
</span></code></pre></td></tr></table></div></figure>
<p>vlcのこんなparameter、もう探し当てられません。
vlcのversionは古い(0.8.2)ので注意です。
上記USB Boxに適合するkernel drvierのため、Debian sarge限定です。
最後のは、朝ドラ始まる前まで安心してTVを見ていられるように、です。</p>
<p>ついでに、いつもsargeをinstallしている手順です。
自分用のメモです。</p>
<h3>/etc/rc.local</h3>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>#!/bin/sh
</span><span class='line'>modprobe tda7313
</span><span class='line'>modprobe saa7111-new
</span><span class='line'>#insmod ~u-ryo/ov511-2.31/tuner.o
</span><span class='line'>sleep 3
</span><span class='line'>#v4lctl setchannel 1
</span><span class='line'>#v4lctl setinput CVBS-0
</span><span class='line'>v4lctl setinput S-Video-0
</span><span class='line'>v4lctl volume 50000
</span></code></pre></td></tr></table></div></figure>
<p>kernel2.6なら<code>tuner.o</code>は出来ないので不要。</p>
<h3>INSTALL Sarge</h3>
<ol>
<li><code>unetbootin</code>でUSB作成可</li>
<li>boot直後、<code>linux26</code>を選択</li>
<li>cdrom mountに失敗するのでmountは手で。<code>mount /dev/disks/scsi/disk0/lun0/part0 /cdrom</code>とか何とか</li>
<li>symlink張れないので、自分で<code>rm /cdrom/dists/stable;cp -rp /cdrom/dists/sarge /cdrom/dists/stable</code></li>
<li>source URLは、<code>deb http://ftp.riken.jp/Linux/debian/debian-archive/debian sarge main contrib non-free</code>を自分でedit</li>
</ol>
<h3>/etc/apt/sources.list</h3>
<p>backportを付加。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>deb http://ftp.riken.jp/Linux/debian/debian-archive/debian sarge main contrib non-free
</span><span class='line'>deb http://archive.debian.org/backports.org/ sarge-backports main contrib non-free
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ sudo apt-get install -t sarge-backports debhelper dh-make build-essential
</span><span class='line'>$ sudo m-a a-i madwifi
</span><span class='line'>$ sudo apt-get install alsa-tools ntp ntpdate ntp-server screen sudo ffmpeg vlc bzip2 wpasupplicant
</span><span class='line'>$ sudo m-a a-i alsa
</span><span class='line'>$ sudo m-a a-i thinkpad
</span><span class='line'>$ sudo /sbin/modprobe thinkpad
</span><span class='line'>$ sudo /sbin/modprobe thinkpadpm
</span><span class='line'>$ sudo /sbin/modprobe rtcmosram
</span><span class='line'>$ sudo /sbin/modprobe smapi
</span></code></pre></td></tr></table></div></figure>
<p><code>ffmpeg</code>は<code>sarge-backports</code>のに上げるとVideo4Linux2(V4L2)を入力に要求するようになるのでダメポ。</p>
<h3>alsa</h3>
<p>alsaでないと声が割れる。
後から入れても有効にならないので、
<code>sudo /sbin/modprobe -r i810_audio</code>
そうすると<code>/dev/audio</code>が無くなるので、sndを入れ直し。
<code>for i in snd_mpu_401 snd_rawmidi snd_seq_device snd_intel8x0 snd_intel8x0m snd_ac97_codec snd_pcm_oss snd_mixer_oss snd_pcm snd_timer snd snd_page_alloc;do sudo /sbin/modprobe -r $i;done</code>
再度<code>snd</code>を<code>modprobe</code>
<code>sudo /sbin/modprobe snd</code></p>
<h3>for wpa_supplicant</h3>
<p>cf. <a href="http://near-unix.blogspot.jp/2010/09/thinkpad-535x-debian-sarge-lan_29.html">ThinkPad 535X Debian Sarge の 無線LANのまとめ</a></p>
<h3><code>/etc/default/wpasupplicant</code></h3>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ENABLED=1
</span><span class='line'>OPTIONS=&quot;-w -i ath0 -D madwifi -c /etc/wpa_supplicant.conf -dd&quot;
</span></code></pre></td></tr></table></div></figure>
<h3><code>/etc/wpa_supplicant.conf</code></h3>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ctrl_interface=/var/run/wpa_supplicant
</span><span class='line'>ctrl_interface_group=0
</span><span class='line'>eapol_version=1
</span><span class='line'>ap_scan=1
</span><span class='line'>fast_reauth=1
</span><span class='line'>
</span><span class='line'>network={
</span><span class='line'>        ssid=&quot;YOUR_SSID&quot;
</span><span class='line'>        psk=&quot;YOUR_PreSharedKey&quot;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>sudo apt-get install -t sarge-backports wpasupplicant
</span><span class='line'>sudo mv /etc/init.d/wpasupplicant.dpkg-bak /etc/init.d/wpasupplicant
</span><span class='line'>sudo mv /etc/default/wpasupplicant.dpkg-bak /etc/default/wpasupplicant
</span><span class='line'>sudo mv /etc/wpa_supplicant.conf.dpkg-bak /etc/wpa_supplicant.conf
</span><span class='line'>sudo ln -s /sbin/wpa_supplicant /usr/sbin/wpa_supplicant
</span><span class='line'>sudo /usr/sbin/update-rc.d wpasupplicant defaults
</span></code></pre></td></tr></table></div></figure>
<h3><code>/etc/network/interfaces</code></h3>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet dhcp
</span><span class='line'>
</span><span class='line'>auto ath0
</span><span class='line'>iface ath0 inet dhcp
</span><span class='line'>  wpa-driver madwifi
</span><span class='line'>  wpa-conf /etc/wpa_supplicant.conf
</span><span class='line'>  wpa-scan-ssid 1
</span><span class='line'>  wpa-proto RSN
</span><span class='line'>  wpa-pairwise CCMP
</span><span class='line'>  wpa-group CCMP
</span><span class='line'>  wpa-key-mgmt WPA-PSK
</span><span class='line'>  wpa-ssid Disney
</span><span class='line'>  wpa-psk ru011415
</span></code></pre></td></tr></table></div></figure>
<p><code>wpa-driver</code>と<code>wpa-conf</code>が無いとダメだった。</p>
<h3>for mosh</h3>
<p>色々試したがmoshはダメだった。諦めた。</p>
]]></content></entry></feed>