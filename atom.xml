<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[u-ryo's blog]]></title><link href="http://u-ryo.github.io//atom.xml" rel="self"/><link href="http://u-ryo.github.io//"/><updated>2018-08-24T14:09:00+09:00</updated><id>http://u-ryo.github.io//</id><author><name><![CDATA[u-ryo]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[CSV download on Spring Boot REST]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/csv-download-on-spring-boot-rest/"/><updated>2018-08-24T14:00:35+09:00</updated><id>/blog/2018/08/24/csv-download-on-spring-boot-rest/</id><content type="html"><![CDATA[<p>Spring BootでCSV downloadを実現するのに、
<a href="https://qiita.com/yo1000/items/050c5c47daabf7a10e10">Spring MVC で CSV をダウンロードさせる</a>を参考にしました。
要するに、</p>
<ul>
<li><code>compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv"</code> in <code>build.gradle</code></li>
<li>Bean classの各fieldに<code>@JsonProperty</code></li>
<li>field出力順を制御したいので<code>@JsonPropertyOrder({"login", "filename",...})</code></li>
<li><code>CsvMapper mapper = new CsvMapper();</code>して<code>CsvSchema schema = mapper.schemaFor(SomeBean.class).withHeader();</code>して<code>return mapper.writer(schema).writeValueAsString(beans);</code></li>
<li><code>compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"</code>を入れて<code>@JsonFormat(pattern="yyyy/MM/dd HH:mm:ss")</code>して<code>mapper.registerModule(new JavaTimeModule());</code>すると、<code>ZonedDateTime</code>を如意に表示できる?<a href="http://lewandowski.io/2016/02/formatting-java-time-with-spring-boot-using-json/">Formatting Java Time with Spring Boot using JSON</a></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[fluent on Lombok]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/fluent-on-lombok/"/><updated>2018-08-24T11:23:29+09:00</updated><id>/blog/2018/08/24/fluent-on-lombok/</id><content type="html"><![CDATA[<p><a href="https://projectlombok.org">Lombok</a>で<code>@Accessors(fluent=true)</code>にしたら、
setterのみならず<a href="https://projectlombok.org/features/experimental/Accessors">getterもfluentになる</a>んですね。
<code>getXxx()</code>がないと言われて焦りました。</p>
]]></content></entry><entry><title type="html"><![CDATA[Returning XML from Spring Boot REST]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/returning-xml-from-spring-boot-rest/"/><updated>2018-08-24T11:13:28+09:00</updated><id>/blog/2018/08/24/returning-xml-from-spring-boot-rest/</id><content type="html"><![CDATA[<p>Spring BootでRESTやってて、XMLでdataを返したいと。
<a href="http://blog.rakugakibox.net/entry/2014/11/23/java_spring_boot_rest">Java: Spring Boot で REST なアプリを作ってみる</a>を見てみて、
<code>@XmlRootElement</code>を付ければいい?
ついでにtag名がclass名と違うので、
<code>@XmlRootElement(name="annotation")</code>としました。</p>
<p>あと、<a href="https://projectlombok.org">Lombok</a>を使ったせいなのか、
各fieldに<code>@XmlElement</code>を付けないと、出て来ませんでした。
そういうもの?!</p>
]]></content></entry><entry><title type="html"><![CDATA[Java8 DateTime API]]></title><link href="http://u-ryo.github.io//blog/2018/08/24/java8-datetime-api/"/><updated>2018-08-24T12:00:05+09:00</updated><id>/blog/2018/08/24/java8-datetime-api/</id><content type="html"><![CDATA[<p>Java8から入ったDateTime API(<code>java.time</code> package)では、
<code>a.plusMinutes(3).isBefore(now)</code>
なんていう感じで日付時刻計算や比較が出来ます、
という話です。現在時刻は<code>ZonedDateTime.now(ZoneId.of("Asia/Tokyo"))</code>。
あ、<code>ZonedDateTime.now()</code>でもいいんじゃーんdefaultのtimezoneでいぃなら。</p>
<ul>
<li><a href="https://qiita.com/kurukurupapa@github/items/f55395758eba03d749c9">Javaで日時を扱う（Java8）</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1501/29/news016_2.html">Java 8日時APIの主なメソッドとフォーマット用のパターン文字の使い方 (2/6)</a></li>
</ul>
]]></content></entry><entry><title type="html"><![CDATA[Getting the first in Spring DATA JPA]]></title><link href="http://u-ryo.github.io//blog/2018/08/23/getting-the-first-in-spring-data-jpa/"/><updated>2018-08-23T18:27:06+09:00</updated><id>/blog/2018/08/23/getting-the-first-in-spring-data-jpa/</id><content type="html"><![CDATA[<p>Spring DATA JPAで、「最新のもの一つ」を取得したかったんです。
Spring DATA JPAは、<code>findFirstBy...</code>とかってmethodに命名すれば
自動的にSQL作ってくれるらしいんですが(<a href="https://qiita.com/sndr/items/af7d12be264c2cc4b252">【Spring Data JPA】自動実装されるメソッドの命名ルール</a>)、
目的のものではlogin userを自動的にparameterizeしたかったので、
それが出来ませんでした。←<code>User</code> objectは別途取得しておいて、
それをparameterに入れれば良かったかも、ですけど。
ともあれ、<code>findFirstBy...</code>で出来ないなら、
<code>Pageable</code>を付けるしかなさそうだ、ということで、
SQL文にはMySQLでいうところの<code>limit=1</code>などはつけずに引数の最後に<code>Pageable</code>を添え、
<code>new PageRequest(0, 1, DESC, "to")</code>として範囲を指定しました(<code>org.springframework.data.domain.Sort.Direction.DESC</code>)。</p>
<h3>参考URLs</h3>
<ol>
<li><a href="https://github.com/yamkazu/springdata-jpa-example/blob/pageable/src/test/java/org/yamkazu/springdata/EmpRepositoryTest.java">yamkazu/springdata-jpa-example</a></li>
<li><a href="https://www.petrikainulainen.net/programming/spring-framework/spring-data-jpa-tutorial-part-seven-pagination/">Spring Data JPA Tutorial: Pagination</a></li>
<li><a href="https://stackoverflow.com/questions/9314078/setmaxresults-for-spring-data-jpa-annotation?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa">setMaxResults for Spring-Data-JPA annotation?</a></li>
</ol>
]]></content></entry><entry><title type="html"><![CDATA[Arukas Cloud]]></title><link href="http://u-ryo.github.io//blog/2018/08/22/arukas-cloud/"/><updated>2018-08-24T14:09:00+09:00</updated><id>/blog/2018/08/22/arukas-cloud/</id><content type="html"><![CDATA[<p><a href="https://www.sakura.ad.jp/">Sakura</a>がやっているからそのreverse spellingだという<a href="https://arukas.io/">Arukas</a>、
docker hostingをやっていて、
credit card登録は強制されますが1 containerなら無料というので、
専用SSH machine作って<a href="https://jhipster.tech/">JHipster</a>の開発/buildに使おうと企みました。</p>
<p>cf. <a href="https://blog.stormcat.io/post/entry/arukas-development/">arukas cloudとDockerでお手軽に開発環境をゲットする #Arukas</a>,
<a href="https://qiita.com/ProjectEuropa/items/3909bd51454fcf4ef16d">Arukas.ioを使ってWEBページを公開する</a></p>
<p>無料枠では<a href="https://hub.docker.com/">Docker Hub</a>にあるものしか使えないとはいえ、
SSH serverの入ったdocker imageなんて色々あります。
でも使ってみると、基本的にはrootでlogin、
当然root loginをpermitしていて、
securityを維持するにはrootのpasswordを変える、
userを作って<code>.ssh/authorized_keys</code>を作る、
なわけですが、けどroot loginのpermissionを切って
sshdをrestartすると、docker終わっちゃうんですよね。
何かもっとこう、最初からUser作ってrootは禁止して、
とかっていうの無いかなー、
と物色していると、どれだったか忘れましたがgithub.comから
自分が登録したkeyを<code>ADD</code>してるものがあって、
あーなるほどー、と思って。
<code>ADD https://github.com/$GITHUB_USER.keys /home/$GITHUB_USER/.ssh/authorized_keys</code>ということですね。</p>
<p>で、結局どうしても自分の欲しいものがなかったので、
<code>Dockerfile</code>自作することにしました。
元になるimageはDocker Hub上になければいけないので、
<a href="https://simple-it-life.com/2016/03/27/dockerhub/">Docker Hubを使ってGitHubにあるDockerfileからimageを自動生成する</a>を参考に、
Github → Docker Hub → Arukasという流れになるように、
<a href="https://github.com/u-ryo/docker_alpine_sshd/">自分のGithub repository</a>
→ <a href="https://hub.docker.com/r/uryooo/docker_alpine_sshd/">自分のDocker Hub repository</a>
→ <a href="https://app.arukas.io/apps/e45aaaa5-df9d-474d-ad42-d3eff1702d76">自分のArukas App</a>
と繋げて、
回るようにします。</p>
<p>Arukasでは変数定義が出来るというので<code>Dockerfile</code>でGithub user名を<code>ENV</code>定義して、
でもそうするとDocker Hubではbuildにコケるので<code>ENV</code>には何かdefault値がないとダメで、
でもdefault値を付けちゃうとそのdefault値がArukas Appまで残っちゃうんですよね。
<a href="https://blog.amedama.jp/entry/2018/01/30/230221">Docker コンテナの動作に必要な設定を起動時に渡す</a>などを見て、
え、shell script内じゃないとダメ?
じゃぁっていうんで<code>entrypoint.sh</code>作って試してみたんですけど、
Arukasで起動に失敗しました。Docker Hubではbuild通ったのに。
起動時のmessageとかは出ないので、何が悪いのか分かりません。
困り果ててArukasのchatで相談投げると、翌営業日にはすぐreplyをくれて、
動作確認のためということでpull requestまで作ってくれました。
まずは早速そのまま取り込んで起動してみたんですが、
やはり起動に失敗しました。
けれども、別のaccountの方でENVを編集することで再起動させてみたところ
うまく行ったので、何だったんでしょう?
要するにどちらでも上手く立ち上がるようになりました。
ありがとうございました。</p>
<p>他、Arukasでハマったのは、開放するPort、
後で色々開けようと思って3000番とか8080番とか色々書いておいたら、
Endpointが有効にならないんですね。
これもArukasのchatで聞いて教えてもらったんですが、
確かによく読むと、Docker image立ち上がった時点で
書いたPortが全て開いてないとEndpointが有効にならない、
と書いてありますね。
「一番上に書いたPortだけEndpointに繋がる」というのは
「アプリ編集」画面のEndpointのinfoに書いてあるからわかったんですが。</p>
<p>baseとなるdistributionは、
軽いという<a href="https://www.alpinelinux.org">Alpine Linux</a>に。
アプリの管理も<code>apk add ...</code>コマンドで出来ますし、
packageも<code>screen</code>やら<code>openjdk8</code>やら<code>gradle</code>やら
結構色々あってびっくりです。
何かubuntuじゃなくてalpineで十分な気がしてきました。</p>
<p>目的としていたjhipster applicationのbuildは失敗しました。
specがしょぼい(128MB memory)のか通信量に制限があるのか、
<code>jhipster</code>コマンドの途中で止まり、
applicationのscaffoldingが出来ません。
まー、無料枠なのでmachine specについては文句言えませんから、
しょーがないのかなーと。</p>
<p>ただ、Endpointが<code>https</code>で手に入るので、
<a href="https://qiita.com/schwarz471/items/9b44adfbec006eab60b0">Nginxによるリバースプロキシの設定方法</a>を参考に、
nginxによるreverse proxyとして使おうかなー、
と思っています。
custom domainも使えるとのことですが、
CDNと同じくDNSを自分でcontrol出来ねばならないので、
dynamic DNSでは使えず、custom domainは諦めました。</p>
<p>成果物(といってもpull requestくれた山田さんのおかげモノですが。山田さんありがとうございます!):
<a href="https://hub.docker.com/r/uryooo/docker_alpine_sshd/builds/">uryooo/docker<em>alpine</em>sshd</a></p>
<p>Githubにkeyを登録してあれば、Arukas AppでImageにこれ↑を指定し、
<code>ENV</code>で<code>GITHUB_USER</code>をGithubのuser名、
<code>PROXY_PASS</code>をreverse proxyしたいURL、
にして立ち上げると、
当該hostにssh出来、
またEndpointで指定したURLでreverse proxy出来ます。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ln -sf /dev/stdout /var/log/nginx/access.log
</span><span class='line'>ln -sf /dev/stderr /var/log/nginx/error.log
</span></code></pre></td></tr></table></div></figure>
<p>こんな技があるんですねーなるほどー。</p>
]]></content></entry><entry><title type="html"><![CDATA[Stubbing in Spock]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/stubbing-in-spock/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/stubbing-in-spock/</id><content type="html"><![CDATA[<p><a href="http://spockframework.org/">Spock</a>でstubbingして
methodのcall回数をassertする必要がありまして。
<code>someClass = Spy(SomeClass)</code>でspyにすると、
<code>3 * someClass.targetMethod(_, _)</code>といったようにassert出来るのですが、
そのtargetMethodを呼ぶ大元のmethodのcallは、
<code>then:</code>ではなく<code>when:</code>になければならなかった、という話です。</p>
<p>即ち、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>when:
</span><span class='line'>  ...
</span><span class='line'>then:
</span><span class='line'>  someClass.method() == &#39;answer&#39;
</span><span class='line'>  3 * someClass.targetMethod(_, _)
</span></code></pre></td></tr></table></div></figure>
<p>ではダメで、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>when:
</span><span class='line'>  ans = someClass.method()
</span><span class='line'>then:
</span><span class='line'>  ans == &#39;answer&#39;
</span><span class='line'>  3 * someClass.targetMethod(_, _)
</span></code></pre></td></tr></table></div></figure>
<p>でないとなりませんでした、と。</p>
<p>あと、
<code>3 * someClass.targetMethod(_, _)</code>の部分には、
変数とか入れられません。即ち、
<code>(3 + n) * someClass.targetMethod(_, _)</code>とかはダメでした。</p>
]]></content></entry><entry><title type="html"><![CDATA[ZipOutputStream in Java]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/zipoutputstream-in-java/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/zipoutputstream-in-java/</id><content type="html"><![CDATA[<p>Javaで複数filesをまとめてzipにして出力する(=downloadさせる)必要があり、
何かlibraryないかなーと探したところ、あまりなくて。
ということは、標準的な手法でもさほど手間はかからないということですね。
確かに、<code>new ZipOutputStream(response.getOutputStream())</code>してから
<code>new ZipEntry("file/name")</code>して<code>zos.putNextEntry(entry)</code>して
<code>zos.write(...)</code>していけばいいだけですもんね。
<a href="http://www.ne.jp/asahi/hishidama/home/tech/java/zip.html">Zipファイル</a>によりますと、
<code>new ZipOutputStream(new BufferedOutputStream(...))</code>というように
<code>new BufferedOutputStream()</code>でくくった方が3.6倍速い(110ms→30ms)とのこと。
ホント?!</p>
]]></content></entry><entry><title type="html"><![CDATA[Downloading a file on Angular]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/downloading-a-file-on-angular/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/downloading-a-file-on-angular/</id><content type="html"><![CDATA[<p>JHipsterのAngularでfileをdownloadするUIを作っていました。
AタグlinkからserverのAPI叩いて、
<code>Content-Disposition: attachment;filename=...</code>
と返せば済むだろう、
と思ってたんですが、そういえば認証通さねばなりません。
となると一旦browserで全部受けてblobにしてから返さないとならなさそうです。
認証header自体は、JHipsterならHTTPのinterceptorがあって、
フツーに<code>this.http.get(...)</code>とかすれば勝手に付けてくれます。
HTTP Headerの付け方は<a href="https://angular.io/guide/http#adding-headers">公式document</a>にある通りです。
<a href="https://stackoverflow.com/questions/40966096/angular-2-download-csv-file-click-event-with-authentication?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa">Angular 2 download .CSV file click event with authentication</a>を参考に、
service化しました。
<a href="https://github.com/eligrey/FileSaver.js">FileSaver.js</a>を使うと楽そうですけど、
そんなに互換性が重視されるわけではないことと大したcode量ではないことから、
自分で書きました。
最後、<code>window.open(url);</code>だとwindowが上がってきてしまうので、
<a href="http://takasdev.hatenablog.com/entry/2017/06/15/211725">AngularでCSVをAPIからDLするときに色々したお話</a>にあるように、
裏で自分で<code>&lt;a href="..."&gt;</code>作って自分で叩いて自分で消す、
というように書いたら、うまく行きました。</p>
]]></content></entry><entry><title type="html"><![CDATA[Path Parameter for DateTime in Spring Boot REST]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/path-parameter-for-datetime-in-spring-boot-rest/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/path-parameter-for-datetime-in-spring-boot-rest/</id><content type="html"><![CDATA[<p>Spring BootのRESTで、
日付をPath Parameterで受け取りたかったんですね。
<a href="https://qiita.com/Tsukuru/items/1c872f51d25c6d452fbc">GetMappingでURLパラメータからValueを取得する～LocalDate編～</a>に書いてある通りですけど、
<code>@DateTimeFormat(pattern="yyyy-MM-dd")</code>なんて使えるんですね。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>@GetMapping(value=&quot;/element/{since}&quot;)
</span><span class='line'>public Element getElement(@DateTimeFormat(pattern=&quot;yyyyMMdd&quot;) @PathVariable LocalDate since) {...
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[List to Map in Java]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/list-to-map-in-java/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/list-to-map-in-java/</id><content type="html"><![CDATA[<p>Javaで<code>List</code>を<code>Map</code>にしたかったんですね。
<a href="https://www.sejuku.net/blog/15900">【Java入門】List⇔Map変換でJava8のStreamを使う方法</a>を見ました。
ここは、いいこと書いてあるんですけど能書きが長い、Java8以前の話は不要(at least for me)、広告が多い感じがする、のが...</p>
<p>基本は単純に<code>Collectors.toMap(s-&gt;key, s-&gt;value)</code>でいけますと。
但し、duplicated keyがあった場合即Exceptionに。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>jshell&gt; Stream.of(&quot;A quick brown fox jumps over the lazy dog.&quot;.split(&quot; &quot;)).collect(Collectors.toMap(s-&gt;s.length(),s-&gt;s)
</span><span class='line'>   ...&gt; )
</span><span class='line'>|  java.lang.IllegalStateException thrown: Duplicate key 5 (attempted merging values quick and brown)
</span><span class='line'>|        at Collectors.duplicateKeyException (Collectors.java:131)
</span><span class='line'>|        at Collectors.lambda$uniqKeysMapAccumulator$1 (Collectors.java:178)
</span><span class='line'>|        at ReduceOps$3ReducingSink.accept (ReduceOps.java:169)
</span><span class='line'>|        at Spliterators$ArraySpliterator.forEachRemaining (Spliterators.java:948)
</span><span class='line'>|        at AbstractPipeline.copyInto (AbstractPipeline.java:484)
</span><span class='line'>|        at AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:474)
</span><span class='line'>|        at ReduceOps$ReduceOp.evaluateSequential (ReduceOps.java:913)
</span><span class='line'>|        at AbstractPipeline.evaluate (AbstractPipeline.java:234)
</span><span class='line'>|        at ReferencePipeline.collect (ReferencePipeline.java:511)
</span><span class='line'>|        at (#9:1)
</span></code></pre></td></tr></table></div></figure>
<p>なので、<code>Collectors.toMap(s-&gt;key, s-&gt;value, (s1,s2)-&gt;do)</code>のようにduplicated keyがあった場合の処理もlambdaとして第三引数に書けます。
後勝ちの例↓</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>jshell&gt; Stream.of(&quot;A quick brown fox jumps over the lazy dog.&quot;.split(&quot; &quot;)).collect(Collectors.toMap(s-&gt;s.length(),s-&gt;s,(s1,s2)-&gt;s2))
</span><span class='line'>$11 ==&gt; {1=A, 3=the, 4=dog., 5=jumps}
</span></code></pre></td></tr></table></div></figure>
<p>SQLっぽく<code>Collectors.groupingBy(s-&gt;key)</code>を使うと、重複valuesはListに込めてくれるので楽です。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>jshell&gt; Stream.of(&quot;A quick brown fox jumps over the lazy dog.&quot;.split(&quot; &quot;)).collect(Collectors.groupingBy(s-&gt;s.length()))
</span><span class='line'>$12 ==&gt; {1=[A], 3=[fox, the], 4=[over, lazy, dog.], 5=[quick, brown, jumps]}
</span></code></pre></td></tr></table></div></figure>
]]></content></entry><entry><title type="html"><![CDATA[Flatten lists in a list in Java]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/flatten-lists-in-a-list-in-java/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/flatten-lists-in-a-list-in-java/</id><content type="html"><![CDATA[<p>Javaでlistの中にlistが複数あるものを、
一つのflatなlistにしたい時、どうするのかなー、と。
<a href="https://qiita.com/macoshita/items/4d4aaf5cea9848ff9dbf">Java 8 で ruby の flatten</a>に書いてありました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>jshell&gt; List.of(List.of(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;),List.of(&quot;d&quot;,&quot;e&quot;),List.of(&quot;f&quot;,&quot;g&quot;)).stream().flatMap(Collection::stream).collect(Collectors.toList())
</span><span class='line'>$7 ==&gt; [a, b, c, d, e, f, g]
</span></code></pre></td></tr></table></div></figure>
<p><code>flatMap(Collection::stream)</code>がキモですね。
こんなの思い付かないですよ。</p>
]]></content></entry><entry><title type="html"><![CDATA[Comparable of Java]]></title><link href="http://u-ryo.github.io//blog/2018/08/21/comparable-of-java/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/21/comparable-of-java/</id><content type="html"><![CDATA[<p>小数と分数を表すclassなど似たような役割なら、
classを超えて<code>Comparable</code>でもいっか、
とか思ってしまって反省しています。</p>
<p>Effective Javaにあるんですね、
<a href="https://www.thekingsmuseum.info/entry/2015/09/04/003117">【Effective Java】項目１２：Comparable の実装を検討する</a>って。
<code>compareTo</code>を定義するなら<code>equals</code>と<code>hashCode</code>も定義すべきだし、
<code>a.compareTo(b)==0</code>と<code>a.equals(b)==true</code>が違うなら、
<code>compareTo</code>で比較する<code>TreeSet</code>と<code>equals</code>で比較する<code>HashSet</code>で
結果が違っちゃうんですね。
<code>compareTo</code>が違うclassの比較を許すなら、
<code>equals</code>でも許さねばならず、
流石にそれはおかしいだろう、
ということでしょうか。
実際、</p>
<blockquote><p>クラスが適切にパラメータ化されていれば、ClassCastExceptionがスローされます。
契約は、クラス間の比較を排除してはいませんが、
リリース1.6では、Javaプラットフォームライブラリーのどのクラスも、
クラス間の比較をサポートしません。</p>
</blockquote>
<p><a href="http://tatsuyamuku.hatenablog.com/entry/2015/06/14/164803">【Effective Java】項目12 Comparableの実装を検討する</a></p>
]]></content></entry><entry><title type="html"><![CDATA[daemonizing jhipster application]]></title><link href="http://u-ryo.github.io//blog/2018/08/19/daemonizing-jhipster-application/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/19/daemonizing-jhipster-application/</id><content type="html"><![CDATA[<p><a href="https://www.jhipster.tech/">JHipster</a>のapplicationで、
OS(Ubuntu 18.04)起動時にapplicationもdaemonとして自動起動するようにするには。</p>
<p>きっとSpring Bootでdaemonizeする方法を探ればいいと思って、
<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/deployment-install.html">61. Installing Spring Boot Applications</a>にあるように、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>bootJar {
</span><span class='line'>	launchScript()
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>でもこれ、Spring Boot 2での話で、
こちとらまだJHipster 4.14.4、Spring Bootは1.5です。
そんなものはない、と当然失敗します。
なのでもうちょっと古い記事を探しました。</p>
<p><a href="https://ishiis.net/2016/09/27/spring-boot-init-script/">spring bootアプリの起動スクリプトを作る</a>を見て、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>apply plugin: &#39;spring-boot&#39;
</span><span class='line'>
</span><span class='line'>springBoot {
</span><span class='line'>    executable = true
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>としたんですが、<code>plugin 'spring-boot'</code>はないと言われ、
<code>executable = true</code>は<code>build.gradle</code>に既に書いてありました。</p>
<p>そもそもそんなことしなくても、
<a href="https://www.jhipster.tech/production/">Using in Production</a>
にあるように、</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ gradle -Pprod bootWar
</span></code></pre></td></tr></table></div></figure>
<p>でexecutable war作れるんですね。
で、それを<code>/etc/init.d/</code>にsymlinkすればいいだけという。
<code>-Pprod</code>を付けないとdevelopment versionになってしまいます。
あとは、<code>update-rc.d appname defaults</code>で登録すれば良いです。</p>
]]></content></entry><entry><title type="html"><![CDATA[Time/Date Display Format on GNOME Shell]]></title><link href="http://u-ryo.github.io//blog/2018/08/19/time-date-display-format-on-gnome-shell/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/19/time-date-display-format-on-gnome-shell/</id><content type="html"><![CDATA[<p>Ubuntu 18.04使ってるんですが、
Unityから変わったGNOME Shellの真ん中に出てるのが
曜日と時分だけなので、不便でした。
日付を確認したくなることもあるし、
秒がないと動いているのか止まっているのかよくわからなかったりとかするんですよね。
どうするのかなー、と思って調べたら、一発でした。
<a href="https://linuxfan.info/gnome-shell-clock-show-date">GNOME Shellのパネルに日付を表示する方法</a></p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ gsettings set org.gnome.desktop.interface clock-show-date true
</span><span class='line'>$ gsettings set org.gnome.desktop.interface clock-show-seconds true
</span></code></pre></td></tr></table></div></figure>
<p>tabによる補完で調べると、他には<code>clock-show-weekday</code>があり、
それは既に<code>true</code>になってるんでしょうね。</p>
]]></content></entry><entry><title type="html"><![CDATA[XML marshaling in Spring Boot]]></title><link href="http://u-ryo.github.io//blog/2018/08/17/xml-marshaling-in-spring-boot/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/17/xml-marshaling-in-spring-boot/</id><content type="html"><![CDATA[<p>Spring Boot applicationで単一xml fileを返すREST作ってあって、
そこではxmlと同じ構造のJava bean作って返すだけで、
marshalingについてはframework側がよしなにやってくれました。
client側がHTTP Request Headerに<code>Accept: application/xml</code>とすれば。
そうでないとjsonになります。まぁそれはそれでいいんです。いいと思いました。</p>
<p>その後、複数xmlをまとめてZIPにして返すRESTを求められました。
そうすると、自分でXMLにmarshalingしなければなりません。
と、Gson?
でも<code>build.gradle</code>見ると折角jackson読み込んでいるようなので、
jacksonでmarshalしました。<code>new ObjectMapper()</code>して、
<code>mapper.write(ZipOutputStream)</code>みたいなことすると、
一回(=one file)書いただけでstreamを勝手に? closeするようなので、
一旦<code>String</code>にしてから<code>zos.write()</code>しました。
また、<code>build.gradle</code>に<code>compile "...jackson-dataformat-xml"</code>も必要でした。</p>
<p>しかしそうすると、今度はXMLを返すRESTの方で、
返されるXMLの形が微妙に違っていました。具体的には、</p>
<ol>
<li><code>@XmlRootElement(name=...)</code>で指定した名前が効かない</li>
<li>XML Object中で<code>List</code>要素がnestされる
(<code>&lt;object&gt;&lt;/object&gt;&lt;object&gt;&lt;/object&gt;...</code>だったのが
<code>&lt;object&gt;&lt;object&gt;&lt;/object&gt;&lt;object&gt;&lt;/object&gt;...&lt;/object&gt;</code>に)</li>
</ol>
<p><code>@XmlRootElement</code>はJAXBのannotation
(<code>javax.xml.bind.annotation.XmlRootElement</code>)で、
これが効かないというのだからJAXBが効いてないのだろうと思い、
そういえば<code>build.gradle</code>に<code>jackson-dataformat-xml</code>って書いたな、
というのを思い出し、
ZIP中でのXMLのmarshallingをJAXBのものでやるようにして
<code>build.gradle</code>から<code>jackson-dataformat-xml</code>を追い出したら、
元に戻りました。</p>
<p>JAXBでのmarshalling、ちょこっと面倒ですが、
<code>context = JAXBContext.newInstance(Bean.class)</code>して
<code>marshaller = context.createMarshaller()</code>作って、
<code>marshaller.marshal(bean, zipOutputStream)</code>すればいいんですね。</p>
]]></content></entry><entry><title type="html"><![CDATA[new Map on Typescript]]></title><link href="http://u-ryo.github.io//blog/2018/08/17/new-map-on-typescript/"/><updated>2018-08-17T16:23:20+09:00</updated><id>/blog/2018/08/17/new-map-on-typescript/</id><content type="html"><![CDATA[<p>Angular5で、といいますかTypescriptで、
<code>Map</code>を一度にnewしたかったんですが、
どうするのかなーって。</p>
<p><code>new Map()</code>して<code>.set()</code>でmethod chainで繋いで行くのもありますが、
一番簡単なのは、
<code>new Map([['key1','val1'],['key2','val2'],['key3','val3']])</code>という
ようなnested arrayでしょうか。
cf. <a href="https://codecraft.tv/courses/angular/es6-typescript/mapset/">Map &amp; Set</a></p>
<p>ただ、こうすると<code>map['key1']</code>や<code>delete(map['key2'])</code>は効かず、
<code>map.get('key1')</code>や<code>map.delete('key2')</code>としないとならない、
というのにハマりました。</p>
]]></content></entry><entry><title type="html"><![CDATA[Negate Method Reference]]></title><link href="http://u-ryo.github.io//blog/2018/08/17/negate-method-reference/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/17/negate-method-reference/</id><content type="html"><![CDATA[<p>Javaのstreamで、<code>filter(s -&gt; !s.isEmpty())</code>を
method referenceに出来ないかなー、と思ったんですが、
<code>java.util.function.Predicate</code>を使って、</p>
<ol>
<li>Java11だと<code>filter(Predicate.not(String::isEmpty))</code></li>
<li>現状では<code>filter(((Predicate&lt;String&gt;) String::isEmpty).negate())</code>と長くなる</li>
<li>下記のように自分で定義して<code>filter(not(String::isEmpty))</code></li>
</ol>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>public static <span class="nt">&lt;T&gt;</span> Predicate<span class="nt">&lt;T&gt;</span> not(Predicate<span class="nt">&lt;T&gt;</span> t) {
</span><span class='line'>    return t.negate();
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>
<p>cf. <a href="https://stackoverflow.com/questions/21488056/how-to-negate-a-method-reference-predicate">stack overflow: How to negate a method reference predicate</a></p>
<p>現状では長くなるので、やめました。</p>
]]></content></entry><entry><title type="html"><![CDATA[LocalDate to ZoneDateTime]]></title><link href="http://u-ryo.github.io//blog/2018/08/17/localdate-to-zonedatetime/"/><updated>2018-08-22T15:57:11+09:00</updated><id>/blog/2018/08/17/localdate-to-zonedatetime/</id><content type="html"><![CDATA[<p>調べれば出てきますが。</p>
<p><code>LocalDate</code>で指定された日付だけの情報を、
<code>ZonedDateTime</code>と日付時刻情報にconvertするには。</p>
<p><a href="https://stackoverflow.com/questions/32001716/java-8-convert-localdate-to-zoneddatetime#">stack overflow: Java 8 - Convert LocalDate to ZonedDateTime</a></p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ZonedDateTime zdt = localDate.atStartOfDay(ZoneId.of(&quot;Asia/Tokyo&quot;));
</span></code></pre></td></tr></table></div></figure>
<p>method名通り、当該日の0:00になります。</p>
]]></content></entry><entry><title type="html"><![CDATA[Android petite tips]]></title><link href="http://u-ryo.github.io//blog/2018/07/30/android-petite-tips/"/><updated>2018-08-17T18:34:45+09:00</updated><id>/blog/2018/07/30/android-petite-tips/</id><content type="html"><![CDATA[<p>お仕事で極悪Androidアプリを改修していて、
今日得た知見をば。</p>
<h3>getTextSize/setTextSize</h3>
<p>あるActivityの画面で、
本文とボタンのtext sizeを揃えようとして、
<code>TextView#getTextSize</code>してから<code>setTextSize</code>したら、
大きくなるんですよね。何でだろう、調べると、
<a href="http://yamato-iphone.blogspot.com/2012/02/gettextsizesettextsize.html"><code>TextView#getTextSize</code>と<code>setTextSize</code>のデフォルト単位が違う</a>
のだそう。びっくりです。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>renewalButton.setTextSize(TypedValue.COMPLEX_UNIT_PX, caution.getTextSize());
</span></code></pre></td></tr></table></div></figure>
<p>というように、単位を明示する必要があるそう。</p>
<h3>サイズ自動調整TextView</h3>
<p><code>TextView</code>で、指示通りに改行位置を固定しようと思って。
指示中の、禁則処理に失敗しているところも含めて忠実に再現しようと。
そのためにはtext sizeを随意にせねばならず。
<a href="https://gist.github.com/STAR-ZERO/2934490">【Android】横幅に合わせてテキストサイズを調整するTextView</a>そのままで上手く行きました。
あーでも<code>onLayout()</code>の最初の引数<code>changed</code>が<code>true</code>の時だけ
<code>resize()</code>すればよかとです。</p>
<p>今は<a href="https://developer.android.com/guide/topics/ui/look-and-feel/autosizing-textview">Autosizing TextViews</a>というのがあるそう。
ただ、API 26からなのでまだなかなか使えないでしょうか。</p>
<h3>onLayout後の値の取得</h3>
<p>上記のようにtext sizeを変えてから、
その結果のtext sizeに合わせて他のViewのtext sizeを
決定しようとすると、
<code>onLayout()</code>が呼ばれ終わってからでないと
目的の値が取得出来ないんですね。
そこで、
<a href="https://stackoverflow.com/questions/8418868/how-to-know-when-an-activity-finishes-a-layout-pass">How to know when an activity finishes a layout pass?</a>
にあるように、
<code>myView.getViewTreeObserver().addOnGlobalLayoutListener(() -&gt; {...});</code>
とすれば良いです。</p>
<h4>補足</h4>
<p>RobolectricでUnit Test書いてたら、
このclass、testが終わらないんです。
何でかなー、とbreakpointで追ってみると、
延々と<code>onGlobalLayout()</code>が呼ばれ続けてるんですね。
えーっと思って。
<code>RxJavaHooks.setOnIOScheduler(s -&gt; Schedulers.immediate());</code>
しても、
<code>ShadowApplication.runBackgroundTasks();</code>
しても効き目はなく。
<a href="http://shim0mura.hatenadiary.jp/entry/2016/01/11/013000">androidでheightやwidthが0になって取得できない時</a>
を見ると、用が済んだらすぐremoveするんですね。そっか。
というわけで、Android SDKのversionによって分けて、
<code>removeOnGlobalLayoutListener(this)</code>と
<code>removeGlobalOnLayoutListener(this)</code>でremoveするように
したんですけど、今度は<code>this</code>が効かない。
なるほど、lambdaだと<code>this</code>は外側のclass instanceになるんですね。
じゃぁっていうんでlambda自体をListener instanceとして名前付けて、
lambdaの中で<code>this</code>じゃなくてその名前で参照しようとしたんですが、
<code>might not have been initialized</code>とか言われ、
<code>null</code>で初期化すると今度は<code>effectively final</code>じゃないと言われて、
うー、とか思って仕方なく諦めて、
初めてlambdaを解いてinner classの記述に戻しました。</p>
<h3>Rx Androidにmaxはない?</h3>
<p>探したんですけど見つからなかったので自分で集計しました。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>float textWidth = rx.Observable
</span><span class='line'>        .from(getText().toString().split(&quot;\n&quot;))
</span><span class='line'>        .map(paint::measureText)
</span><span class='line'>        .reduce(Math::max)
</span><span class='line'>        .toBlocking()
</span><span class='line'>        .single();
</span></code></pre></td></tr></table></div></figure>
<h3>TextViewで白枠</h3>
<p>ある段落を白枠で囲って欲しいと言われました。
調べると、<a href="https://qiita.com/Yuki_Yamada/items/15fc68dc88b57734149b">[android]xmlで枠を指定する</a>というのがあり、
それ用のdrawable XMLを作ってやって<code>android:background="@drawable/..."</code>で、
それを指定すれば、望み通りのものが得られました。
背景色は、これも書いてありますが<code>#00ffffff</code>で透明になります。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;shape</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">android:shape=</span><span class="s">&quot;rectangle&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- background --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;#00ffffff&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- rounded corners --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;stroke</span> <span class="na">android:width=</span><span class="s">&quot;1dp&quot;</span>
</span><span class='line'>        <span class="na">android:color=</span><span class="s">&quot;@color/white&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;corners</span> <span class="na">android:radius=</span><span class="s">&quot;1dp&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/shape&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h3>Robolectricで次のActivityへの遷移の確認</h3>
<p><code>shadowOf(activity).peekNextStartedActivity()</code>で<code>Intent</code>を取得、
<code>getComponent().getClassName()</code>が目的のclass nameかをassert。</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Intent intent = shadowOf(activity).peekNextStartedActivity();
</span><span class='line'>assertThat(Objects.requireNonNull(intent.getComponent()).getClassName(),
</span><span class='line'>        is(MainActivity.class.getName()));
</span></code></pre></td></tr></table></div></figure>
<h3>Local PushでNotification</h3>
<p>Local PushでNotificationをして欲しい、と言われました。
調べてみると、要するに、
<code>AlarmManager</code>に<code>PendingIntent</code>をsetして、
それが<code>set</code>時の引数のUnix Time(millisec)になると、
これも<code>set</code>時引数の<code>BroadcastReceiver</code>の子classの
<code>onReceive(context, intent)</code>が呼ばれるので、
そこで<code>NotificationManager.notify()</code>をする、と。</p>
<p>AndroidのNotificationについては、
sample applicationを作って色々と試してみました。</p>
<ol>
<li>uninstall/端末再起動すれば登録済みのalarmは解除される</li>
<li>多重登録しても<code>PendingIntent.FLAG_UPDATE_CURRENT</code>なら最後のNotificationに上書きされる</li>
<li>過去の時日のalarmを登録するとすぐNotifyされてしまう</li>
<li>機種によっては挙動が違う(Huaweiでは、アプリが起動していない時/Sleep時にAlarmを発動させるには「保護されたアプリ」でないとならない、等)</li>
<li>長いtextは全文出ないで端折られる。出したいなら、<code>.setStyle(new NotificationCompat.BigTextStyle().bigText("..."))</code>する。但し<code>.setBigContentTitle(intent.getStringExtra("..."))</code>も同時に加えるとダメっぽい。</li>
</ol>
]]></content></entry></feed>